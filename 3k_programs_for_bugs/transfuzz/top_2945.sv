/* Generated by Yosys 0.37+29 (git sha1 3c3788ee2, clang 10.0.0-4ubuntu1 -fPIC -Os) */

module top(clkin_data, in_data, out_data);
  reg [11:0] _00_;
  wire [20:0] celloutsig_0_0z;
  wire celloutsig_0_1z;
  reg [11:0] celloutsig_0_4z;
  reg [24:0] celloutsig_0_5z;
  wire celloutsig_1_0z;
  wire celloutsig_1_10z;
  wire [33:0] celloutsig_1_12z;
  wire celloutsig_1_13z;
  wire celloutsig_1_16z;
  wire celloutsig_1_18z;
  wire celloutsig_1_19z;
  reg [2:0] celloutsig_1_1z;
  wire celloutsig_1_2z;
  wire [7:0] celloutsig_1_3z;
  wire celloutsig_1_4z;
  wire celloutsig_1_5z;
  reg [3:0] celloutsig_1_6z;
  wire celloutsig_1_7z;
  wire celloutsig_1_9z;
  input [223:0] clkin_data;
  wire [223:0] clkin_data;
  input [191:0] in_data;
  wire [191:0] in_data;
  output [191:0] out_data;
  wire [191:0] out_data;
  assign celloutsig_1_10z = ~celloutsig_1_7z;
  assign celloutsig_0_1z = ~((celloutsig_0_0z[12] | celloutsig_0_0z[19]) & (celloutsig_0_0z[7] | in_data[65]));
  assign celloutsig_1_9z = ~((celloutsig_1_3z[6] | celloutsig_1_6z[1]) & (celloutsig_1_1z[1] | celloutsig_1_2z));
  assign celloutsig_1_16z = celloutsig_1_3z[3] | ~(celloutsig_1_12z[4]);
  assign celloutsig_1_19z = celloutsig_1_12z[7] | celloutsig_1_13z;
  always_ff @(negedge clkin_data[160], posedge clkin_data[128])
    if (clkin_data[128]) _00_ <= 12'h000;
    else _00_ <= { in_data[188], celloutsig_1_1z, celloutsig_1_3z };
  assign celloutsig_1_2z = { celloutsig_1_0z, celloutsig_1_1z, celloutsig_1_0z } <= { in_data[166:164], celloutsig_1_0z, celloutsig_1_0z };
  assign celloutsig_1_0z = in_data[130:125] < in_data[158:153];
  assign celloutsig_1_4z = { celloutsig_1_3z[5:3], celloutsig_1_2z } < { celloutsig_1_2z, celloutsig_1_1z };
  assign celloutsig_1_5z = { celloutsig_1_3z[7:1], celloutsig_1_1z, celloutsig_1_1z } < { in_data[155:152], celloutsig_1_4z, celloutsig_1_3z };
  assign celloutsig_1_18z = { _00_[6], celloutsig_1_16z, celloutsig_1_16z, celloutsig_1_0z } < { in_data[120:119], celloutsig_1_7z, celloutsig_1_4z };
  assign celloutsig_1_7z = { celloutsig_1_3z[4:1], celloutsig_1_1z, celloutsig_1_2z, celloutsig_1_5z, celloutsig_1_1z, celloutsig_1_3z, celloutsig_1_4z, celloutsig_1_1z, celloutsig_1_4z } !== in_data[126:102];
  assign celloutsig_0_0z = in_data[82:62] >> in_data[94:74];
  assign celloutsig_1_3z = in_data[103:96] >> in_data[168:161];
  assign celloutsig_1_12z = { in_data[179:147], celloutsig_1_2z } >>> { in_data[150:131], celloutsig_1_3z, celloutsig_1_6z, celloutsig_1_0z, celloutsig_1_10z };
  assign celloutsig_1_13z = ~((celloutsig_1_9z & celloutsig_1_2z) | celloutsig_1_2z);
  always_latch
    if (!clkin_data[32]) celloutsig_0_4z = 12'h000;
    else if (!celloutsig_1_19z) celloutsig_0_4z = { celloutsig_0_0z[12:2], celloutsig_0_1z };
  always_latch
    if (!clkin_data[64]) celloutsig_0_5z = 25'h0000000;
    else if (!celloutsig_1_19z) celloutsig_0_5z = { celloutsig_0_4z[4], celloutsig_0_4z, celloutsig_0_4z };
  always_latch
    if (clkin_data[96]) celloutsig_1_1z = 3'h0;
    else if (clkin_data[0]) celloutsig_1_1z = in_data[149:147];
  always_latch
    if (clkin_data[128]) celloutsig_1_6z = 4'h0;
    else if (clkin_data[0]) celloutsig_1_6z = { in_data[143:141], celloutsig_1_0z };
  assign { out_data[128], out_data[96], out_data[43:32], out_data[24:0] } = { celloutsig_1_18z, celloutsig_1_19z, celloutsig_0_4z, celloutsig_0_5z };
endmodule
