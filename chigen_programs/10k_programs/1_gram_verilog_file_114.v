// Seed: 1463897731
module module_0 (
    output logic id_0,
    input supply0 id_1,
    input tri0 id_2,
    input supply1 id_3
    , id_37,
    input tri1 id_4,
    output supply0 id_5,
    input wor id_6,
    input tri id_7,
    input tri1 id_8,
    input tri1 id_9,
    input supply1 id_10,
    input uwire id_11,
    input tri1 id_12,
    input supply1 id_13,
    input tri1 id_14,
    input wor id_15,
    input tri id_16,
    output wor id_17,
    input supply0 id_18,
    output wor id_19,
    output wor id_20,
    output wire id_21
    , id_38,
    input tri0 id_22,
    input wand id_23,
    input wor id_24,
    output tri0 id_25,
    output tri0 id_26,
    input tri0 id_27,
    input wand id_28,
    output uwire id_29,
    input wire id_30,
    output tri id_31,
    input wor id_32,
    output tri1 id_33,
    input supply0 id_34,
    input tri0 id_35
);
  always #1 #1 if (1) id_37 <= #1 1'b0;
  initial id_0 <= 1;
endmodule
module module_1 (
    input uwire id_0,
    output tri0 id_1,
    input wand id_2,
    input tri0 id_3,
    input wand id_4,
    output wire id_5,
    output wor id_6,
    input tri0 id_7,
    input tri id_8,
    input wor id_9,
    output supply1 id_10,
    input tri id_11,
    input supply1 id_12,
    inout logic id_13
    , id_21,
    output supply0 id_14,
    output wor id_15,
    input wire id_16,
    input supply1 id_17,
    output tri1 id_18,
    input uwire id_19
);
  always if (1) id_13 <= 1'b0;
  module_0(
      id_13,
      id_19,
      id_7,
      id_8,
      id_3,
      id_18,
      id_4,
      id_12,
      id_0,
      id_16,
      id_12,
      id_12,
      id_9,
      id_4,
      id_0,
      id_2,
      id_11,
      id_1,
      id_4,
      id_1,
      id_15,
      id_6,
      id_7,
      id_4,
      id_4,
      id_5,
      id_6,
      id_12,
      id_8,
      id_14,
      id_9,
      id_15,
      id_19,
      id_10,
      id_4,
      id_7
  );
  wire id_22;
  tri  id_23 = 1'b0 | id_4 && 1;
endmodule
