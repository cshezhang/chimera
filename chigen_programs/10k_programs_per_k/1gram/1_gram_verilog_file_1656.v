// Seed: 3488869150
module module_0 (
    input supply0 id_0,
    output uwire id_1,
    output supply0 id_2,
    input tri id_3,
    input supply1 id_4,
    input uwire id_5,
    output wand id_6,
    output tri0 id_7,
    input supply1 id_8,
    output wor id_9,
    input wand id_10,
    input supply1 id_11,
    input uwire id_12,
    input wor id_13,
    output wire id_14,
    input uwire id_15,
    input supply0 id_16,
    input wire id_17,
    input tri id_18,
    output tri0 id_19,
    input supply0 id_20,
    output wor id_21,
    output tri0 id_22,
    output tri id_23,
    output supply1 id_24,
    input tri0 id_25,
    input wor id_26,
    input tri1 id_27,
    output supply0 id_28,
    input tri0 id_29,
    output wand id_30,
    input wire id_31,
    input wire id_32,
    input tri0 id_33
);
  wire id_35;
  assign module_1.type_39 = 0;
endmodule
module module_1 (
    output uwire id_0,
    input uwire id_1,
    input uwire id_2,
    input tri id_3,
    output wand id_4,
    output wor id_5,
    output logic id_6,
    output uwire id_7,
    input supply0 id_8,
    output tri id_9,
    output tri id_10,
    output uwire id_11,
    output supply1 id_12,
    output wire id_13,
    input wire id_14,
    output wor id_15
    , id_29,
    output tri1 id_16,
    output wire id_17,
    output wor id_18
    , id_30 = id_21 == id_22,
    input supply0 id_19,
    input supply1 id_20,
    input wand id_21,
    input supply1 id_22,
    output supply0 id_23,
    output supply1 id_24,
    input tri id_25,
    input wor id_26,
    output tri1 id_27
);
  wire id_31, id_32;
  assign id_9 = id_1;
  module_0 modCall_1 (
      id_22,
      id_23,
      id_27,
      id_3,
      id_19,
      id_19,
      id_27,
      id_13,
      id_14,
      id_12,
      id_14,
      id_25,
      id_25,
      id_20,
      id_24,
      id_20,
      id_21,
      id_26,
      id_1,
      id_16,
      id_2,
      id_5,
      id_0,
      id_18,
      id_10,
      id_14,
      id_2,
      id_21,
      id_18,
      id_26,
      id_16,
      id_3,
      id_20,
      id_26
  );
  always @(1) id_6 <= 1;
  wire id_33, id_34;
endmodule : SymbolIdentifier
