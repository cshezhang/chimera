// Seed: 250943598
module module_0 (
    input uwire id_0,
    input tri0 id_1
    , id_60,
    input wand id_2,
    input tri0 id_3,
    input tri0 id_4,
    input supply1 id_5,
    input wire id_6,
    input wand id_7,
    input tri0 id_8,
    input wor id_9,
    output wand id_10,
    output uwire id_11,
    input supply1 id_12,
    input supply0 id_13,
    output wand id_14,
    input wire id_15,
    output tri0 id_16,
    input wire id_17,
    output tri0 id_18,
    input wand id_19,
    output tri1 id_20
    , id_61,
    output tri0 id_21,
    input supply0 id_22,
    input uwire id_23,
    output uwire id_24,
    input tri1 id_25,
    output wire id_26,
    output tri id_27,
    output tri1 id_28,
    input tri id_29,
    output supply1 id_30,
    input tri id_31,
    input uwire id_32,
    input uwire id_33,
    output wor id_34,
    input uwire id_35,
    input wor id_36,
    input tri id_37,
    input supply0 id_38,
    output tri1 id_39,
    input uwire id_40,
    output tri0 id_41,
    output wor id_42,
    output tri0 id_43,
    output uwire id_44,
    input tri0 id_45,
    input wand id_46,
    output tri id_47,
    input tri0 id_48,
    input wire id_49,
    input supply0 id_50,
    output uwire id_51,
    input wand id_52,
    input supply0 id_53,
    output tri1 id_54,
    output tri id_55,
    output wor id_56,
    output tri1 id_57,
    input supply1 id_58
);
  id_62(
      .id_0(1), .id_1(id_21), .id_2(id_41.id_6)
  );
  assign id_60 = id_5;
  wire id_63;
  id_64(
      'b0, id_55, 1, id_18, id_44, id_24
  );
endmodule
module module_1 (
    input wor id_0,
    output tri1 id_1,
    output tri0 id_2,
    input uwire id_3,
    output tri0 id_4,
    input tri0 id_5
    , id_22,
    input tri0 id_6,
    input wand id_7,
    input tri1 id_8,
    output wire id_9,
    input supply0 id_10,
    inout tri0 id_11,
    input supply1 id_12,
    inout uwire id_13,
    input tri1 id_14,
    input supply1 id_15,
    input wand id_16,
    input wor id_17,
    input tri id_18,
    input tri0 id_19,
    input tri id_20
);
  id_23(
      id_0
  );
  or (
      id_11,
      id_7,
      id_5,
      id_23,
      id_25,
      id_12,
      id_14,
      id_22,
      id_0,
      id_10,
      id_8,
      id_19,
      id_15,
      id_13,
      id_6,
      id_18,
      id_20,
      id_3,
      id_24,
      id_16,
      id_17
  );
  assign id_1 = id_16 + id_17;
  wire id_24, id_25;
  module_0(
      id_20,
      id_6,
      id_3,
      id_19,
      id_10,
      id_18,
      id_0,
      id_17,
      id_16,
      id_8,
      id_4,
      id_13,
      id_17,
      id_7,
      id_1,
      id_19,
      id_13,
      id_3,
      id_4,
      id_5,
      id_11,
      id_13,
      id_14,
      id_18,
      id_2,
      id_20,
      id_13,
      id_13,
      id_2,
      id_14,
      id_4,
      id_16,
      id_20,
      id_12,
      id_9,
      id_12,
      id_12,
      id_19,
      id_15,
      id_4,
      id_19,
      id_1,
      id_2,
      id_9,
      id_2,
      id_8,
      id_7,
      id_4,
      id_5,
      id_19,
      id_17,
      id_13,
      id_13,
      id_13,
      id_1,
      id_4,
      id_4,
      id_13,
      id_11
  );
endmodule
