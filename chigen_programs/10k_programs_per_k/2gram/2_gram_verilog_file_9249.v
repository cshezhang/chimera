// Seed: 59331964
module module_0 (
    input uwire id_0,
    input uwire id_1,
    input tri0 id_2,
    input wor id_3,
    input uwire id_4,
    input tri1 id_5,
    input wor id_6,
    output wire id_7,
    input uwire id_8,
    input tri0 id_9,
    input tri1 id_10,
    output tri0 id_11,
    output uwire id_12,
    output wire id_13,
    input tri0 id_14,
    output uwire id_15,
    input tri0 id_16,
    input wor id_17,
    output supply0 id_18,
    output wand id_19,
    input tri0 id_20,
    input wor id_21,
    input tri0 id_22,
    input uwire id_23,
    input tri id_24,
    input tri0 id_25,
    output wand id_26,
    input wire id_27,
    output uwire id_28,
    output tri1 id_29,
    input tri id_30,
    output supply0 id_31,
    input wire id_32,
    output tri0 id_33,
    output wor id_34
);
  assign id_19 = 1'd0;
  always #id_36 begin
    @(id_23 or 1) $display(1);
  end
endmodule
module module_1 (
    output wire id_0,
    output wand id_1,
    input uwire id_2,
    output uwire id_3,
    input wire id_4,
    input tri1 id_5,
    input tri1 id_6,
    output tri1 id_7,
    input wor id_8,
    input wire id_9,
    input supply0 id_10,
    output supply1 id_11,
    input tri id_12,
    output tri id_13,
    input supply1 id_14,
    output tri0 id_15,
    input wor id_16,
    input tri1 id_17,
    output logic id_18,
    input tri id_19
    , id_24,
    output tri0 id_20,
    input supply0 id_21,
    input wand id_22
);
  always_ff
    if (~1'b0 ^ 1) begin : id_25
      id_18 <= id_24;
    end
  module_0(
      id_2,
      id_4,
      id_2,
      id_5,
      id_16,
      id_16,
      id_14,
      id_20,
      id_22,
      id_9,
      id_22,
      id_1,
      id_15,
      id_11,
      id_6,
      id_15,
      id_14,
      id_4,
      id_11,
      id_15,
      id_19,
      id_21,
      id_4,
      id_21,
      id_12,
      id_10,
      id_3,
      id_19,
      id_3,
      id_11,
      id_10,
      id_15,
      id_6,
      id_15,
      id_20
  );
endmodule
