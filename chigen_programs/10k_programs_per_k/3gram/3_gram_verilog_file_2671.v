// Seed: 2185186859
module module_0 (
    input supply0 id_0,
    input supply1 id_1,
    output tri id_2,
    input wand id_3,
    output supply1 id_4,
    output supply0 id_5,
    input wor id_6,
    output wire id_7,
    input supply1 id_8,
    input wor id_9,
    output tri1 id_10,
    output tri id_11,
    input wand id_12,
    output supply1 id_13
    , id_42,
    input wand id_14,
    input wire id_15,
    input wand id_16,
    input tri id_17,
    input wand id_18,
    output tri id_19,
    input uwire id_20,
    input uwire id_21,
    input wor id_22,
    input wor id_23,
    output uwire id_24,
    input uwire id_25,
    input uwire id_26,
    input supply0 id_27,
    output tri id_28,
    input tri id_29,
    input supply1 id_30,
    output wire id_31,
    input wire id_32,
    input tri1 id_33,
    output supply1 id_34,
    output tri1 id_35,
    input tri id_36,
    input wand id_37,
    output supply0 id_38,
    input wand id_39,
    input wor id_40
);
  wire id_43;
  assign module_1.id_0 = 0;
endmodule
module module_1 (
    input  tri0 id_0,
    output tri  id_1
);
  wire id_3;
  module_0 modCall_1 (
      id_0,
      id_0,
      id_1,
      id_0,
      id_1,
      id_1,
      id_0,
      id_1,
      id_0,
      id_0,
      id_1,
      id_1,
      id_0,
      id_1,
      id_0,
      id_0,
      id_0,
      id_0,
      id_0,
      id_1,
      id_0,
      id_0,
      id_0,
      id_0,
      id_1,
      id_0,
      id_0,
      id_0,
      id_1,
      id_0,
      id_0,
      id_1,
      id_0,
      id_0,
      id_1,
      id_1,
      id_0,
      id_0,
      id_1,
      id_0,
      id_0
  );
  always_latch @(posedge 1'h0) id_1 = 1;
  wire id_4;
endmodule
