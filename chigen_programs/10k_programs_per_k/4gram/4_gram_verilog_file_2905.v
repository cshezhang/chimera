// Seed: 1862844553
module module_0 (
    input supply0 id_0,
    input wire id_1,
    input tri1 id_2,
    output supply0 id_3,
    output wire id_4,
    output wor id_5,
    output supply0 id_6,
    output wire id_7,
    input supply1 id_8,
    input uwire id_9,
    output supply1 id_10,
    input wand id_11,
    input tri1 id_12,
    input uwire id_13,
    input wire id_14,
    output uwire id_15,
    output wand id_16,
    input wor id_17,
    input tri id_18,
    output supply1 id_19,
    output wand id_20,
    input tri0 id_21,
    output tri1 id_22,
    input tri1 id_23
    , id_45,
    output tri0 id_24,
    input tri id_25,
    output tri id_26,
    output wire id_27,
    input wire id_28,
    input wand id_29,
    input wand id_30,
    input wand id_31,
    input supply0 id_32,
    input supply1 id_33,
    output wand id_34,
    input wand id_35,
    input tri id_36,
    input wire id_37
    , id_46,
    output tri id_38,
    input supply0 id_39,
    input uwire id_40,
    input tri id_41,
    output wand id_42,
    output wor id_43
);
  assign id_38 = {id_37{id_37 + id_30 | 1'b0}};
  assign module_1.type_5 = 0;
  wire id_47 = 1 + id_35;
endmodule
module module_1 (
    input supply0 id_0,
    input uwire id_1,
    input tri0 id_2,
    output tri id_3,
    input supply1 id_4,
    output tri0 id_5
);
  always @(*) id_5 += (id_0);
  bufif1 primCall (id_3, id_4, id_2);
  module_0 modCall_1 (
      id_2,
      id_0,
      id_2,
      id_3,
      id_5,
      id_3,
      id_3,
      id_5,
      id_2,
      id_1,
      id_5,
      id_1,
      id_1,
      id_1,
      id_4,
      id_5,
      id_5,
      id_4,
      id_2,
      id_3,
      id_3,
      id_4,
      id_5,
      id_1,
      id_5,
      id_0,
      id_3,
      id_5,
      id_4,
      id_4,
      id_2,
      id_4,
      id_4,
      id_1,
      id_5,
      id_0,
      id_1,
      id_0,
      id_5,
      id_4,
      id_0,
      id_0,
      id_5,
      id_3
  );
endmodule
