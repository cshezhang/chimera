// Seed: 3393052772
module module_0 (
    input wor id_0,
    output tri0 id_1,
    input tri1 id_2,
    input supply1 id_3,
    output tri0 id_4,
    output uwire id_5,
    output wire id_6,
    input tri1 id_7,
    input wor id_8,
    input tri id_9,
    output wor id_10,
    input tri1 id_11,
    input tri0 id_12,
    output uwire id_13,
    output tri1 id_14,
    output wand id_15,
    input supply1 id_16,
    output tri1 id_17,
    input wire id_18,
    output wire id_19,
    input supply1 id_20,
    input tri1 id_21,
    input tri1 id_22,
    input wor id_23,
    output wor id_24,
    input uwire id_25,
    input tri1 id_26,
    input supply1 id_27,
    input wor id_28,
    output wor id_29,
    output supply0 id_30,
    input tri id_31,
    output tri0 id_32,
    input tri0 id_33,
    input tri0 id_34,
    input wire id_35,
    input supply1 id_36,
    input supply1 id_37,
    input supply0 id_38,
    input supply0 id_39,
    input wor id_40,
    input uwire id_41
);
  assign id_15 = id_12;
endmodule
module module_1 (
    input uwire id_0,
    input uwire id_1,
    output wand id_2,
    output supply1 id_3,
    input supply1 id_4,
    input tri id_5,
    output uwire id_6,
    output wire id_7,
    input wand id_8,
    output tri id_9,
    input uwire id_10,
    input uwire id_11
);
  always @(negedge id_8) id_3 = id_11;
  module_0 modCall_1 (
      id_10,
      id_3,
      id_8,
      id_5,
      id_6,
      id_7,
      id_3,
      id_8,
      id_11,
      id_0,
      id_9,
      id_1,
      id_5,
      id_7,
      id_3,
      id_3,
      id_5,
      id_6,
      id_8,
      id_3,
      id_10,
      id_0,
      id_4,
      id_10,
      id_7,
      id_5,
      id_11,
      id_5,
      id_11,
      id_7,
      id_3,
      id_5,
      id_6,
      id_8,
      id_1,
      id_4,
      id_1,
      id_1,
      id_1,
      id_0,
      id_8,
      id_5
  );
  assign modCall_1.type_11 = 0;
  assign #id_13 id_3 = id_0;
  wire id_14;
  wire id_15, id_16;
  id_17(
      .id_0()
  );
endmodule
