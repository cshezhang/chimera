// Seed: 625448343
module module_0 (
    input tri1 id_0,
    output uwire id_1,
    output tri1 id_2
    , id_34,
    input tri0 id_3,
    input supply0 id_4,
    input tri id_5,
    input wand id_6,
    input tri1 id_7,
    output supply0 id_8,
    input tri module_0,
    input wand id_10,
    input uwire id_11,
    input tri id_12,
    input wor id_13,
    output supply1 id_14,
    input supply1 id_15,
    input wire id_16,
    output tri1 id_17,
    input wor id_18,
    input wor id_19,
    input supply1 id_20,
    input tri id_21,
    input tri1 id_22,
    output supply1 id_23,
    output wire id_24,
    output tri1 id_25,
    input uwire id_26,
    input wire id_27,
    output wire id_28,
    output wand id_29,
    input uwire id_30,
    input wire id_31,
    input tri1 id_32
);
  wire id_35;
endmodule
module module_1 (
    input supply1 id_0,
    input wire id_1,
    input supply1 id_2,
    output wor id_3,
    input tri1 id_4,
    output tri1 id_5,
    input uwire id_6,
    output tri1 id_7,
    input supply1 id_8,
    output wire id_9,
    output wire id_10,
    input tri id_11,
    output wire id_12,
    input wand id_13,
    input tri0 id_14,
    input wor module_1,
    input supply1 id_16
    , id_23,
    output supply0 id_17,
    input tri id_18,
    output uwire id_19,
    output logic id_20,
    input logic id_21
);
  always @(id_8) begin : LABEL_0
    #1;
    id_20 <= id_21;
  end
  module_0 modCall_1 (
      id_14,
      id_10,
      id_9,
      id_2,
      id_14,
      id_2,
      id_4,
      id_11,
      id_19,
      id_13,
      id_4,
      id_8,
      id_13,
      id_0,
      id_3,
      id_16,
      id_2,
      id_10,
      id_11,
      id_6,
      id_4,
      id_0,
      id_13,
      id_19,
      id_17,
      id_12,
      id_14,
      id_0,
      id_5,
      id_19,
      id_16,
      id_16,
      id_0
  );
  assign modCall_1.type_12 = 0;
endmodule
