// Seed: 2977570358
module module_0 (
    input wor id_0,
    input tri id_1,
    input wor id_2,
    input wand id_3,
    output tri0 id_4,
    output wor id_5,
    input supply1 id_6,
    input tri0 id_7,
    output supply0 id_8,
    output tri id_9,
    input tri id_10,
    input wand id_11,
    input wand id_12,
    output supply1 id_13,
    input supply0 id_14,
    input wand id_15,
    output wand id_16,
    input wand id_17,
    output wand id_18,
    input uwire id_19,
    input wand id_20,
    input wand id_21,
    input wire id_22,
    output tri id_23,
    input uwire id_24,
    input uwire id_25,
    output wire id_26,
    output uwire id_27,
    input uwire id_28,
    input uwire id_29,
    output supply0 id_30,
    input wand id_31,
    input tri id_32,
    output wand id_33,
    input tri1 id_34,
    input wire id_35
    , id_81,
    input uwire id_36,
    input uwire id_37,
    input supply0 id_38,
    input uwire id_39,
    input wire id_40,
    input wire id_41,
    input tri id_42,
    input tri id_43,
    input tri0 id_44,
    input tri1 id_45,
    output tri1 id_46,
    input tri0 id_47,
    input wand id_48,
    input supply1 id_49,
    input tri id_50,
    input wire id_51,
    input wor id_52,
    input wire id_53,
    output supply0 id_54,
    input tri1 id_55,
    input wire id_56,
    input supply0 id_57,
    output supply0 id_58,
    input wire id_59,
    input supply1 id_60,
    input uwire id_61,
    input supply1 id_62,
    input wand id_63,
    output tri1 id_64,
    input uwire id_65,
    input wire id_66,
    output uwire id_67,
    output wand id_68,
    output wor id_69,
    input uwire id_70,
    output tri id_71,
    input wand id_72,
    output wor id_73,
    output wire id_74,
    output tri0 id_75,
    output wand id_76,
    input wand id_77,
    input tri id_78,
    output wand id_79
);
  wire id_82;
  assign id_33 = 1'b0;
  wire id_83;
endmodule
module module_1 (
    input logic id_0,
    output supply1 id_1,
    input supply1 id_2,
    input wand id_3,
    output logic id_4
);
  initial if (!id_3) id_4 <= #id_3 id_0;
  module_0(
      id_3,
      id_3,
      id_2,
      id_3,
      id_1,
      id_1,
      id_2,
      id_2,
      id_1,
      id_1,
      id_2,
      id_2,
      id_3,
      id_1,
      id_3,
      id_2,
      id_1,
      id_3,
      id_1,
      id_2,
      id_2,
      id_3,
      id_2,
      id_1,
      id_3,
      id_2,
      id_1,
      id_1,
      id_3,
      id_2,
      id_1,
      id_2,
      id_2,
      id_1,
      id_2,
      id_2,
      id_2,
      id_2,
      id_3,
      id_2,
      id_3,
      id_3,
      id_3,
      id_3,
      id_3,
      id_3,
      id_1,
      id_2,
      id_3,
      id_3,
      id_2,
      id_3,
      id_2,
      id_3,
      id_1,
      id_2,
      id_3,
      id_2,
      id_1,
      id_2,
      id_3,
      id_2,
      id_3,
      id_2,
      id_1,
      id_2,
      id_2,
      id_1,
      id_1,
      id_1,
      id_3,
      id_1,
      id_3,
      id_1,
      id_1,
      id_1,
      id_1,
      id_3,
      id_2,
      id_1
  );
endmodule
