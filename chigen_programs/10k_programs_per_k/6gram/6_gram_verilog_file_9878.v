// Seed: 940100392
module module_0 (
    input tri0 id_0,
    input tri1 id_1,
    input tri0 id_2,
    input tri0 id_3,
    output supply1 id_4,
    output tri0 id_5,
    input tri0 id_6,
    input wand id_7,
    output uwire id_8,
    input tri1 id_9,
    output wire id_10,
    input tri id_11,
    input tri1 id_12,
    input tri id_13,
    input supply1 id_14,
    output tri id_15,
    input uwire id_16,
    input uwire id_17,
    output wand id_18,
    output tri0 id_19,
    input wire id_20,
    input supply0 id_21,
    output uwire id_22
);
  assign id_19 = 1;
endmodule
module module_1 (
    output uwire id_0,
    input tri0 id_1,
    input supply1 id_2,
    input wor id_3,
    output tri1 id_4,
    input uwire id_5,
    input tri1 id_6,
    input tri id_7,
    output tri id_8,
    input supply0 id_9,
    input wor id_10,
    input tri0 id_11,
    input supply1 id_12,
    output supply0 id_13,
    input tri1 id_14,
    input wire id_15,
    input wire id_16,
    output tri id_17,
    input wor id_18,
    input tri1 id_19,
    input uwire id_20,
    input tri id_21,
    input tri id_22,
    output wor id_23,
    output tri0 id_24,
    input tri id_25,
    input tri1 id_26,
    output tri1 id_27,
    output wire id_28,
    input wor id_29,
    output wor id_30,
    input supply0 id_31,
    output wand id_32
);
  assign id_28 = id_9 == id_12;
  always @(posedge 1) id_0 = 1;
  or primCall (
      id_32,
      id_7,
      id_21,
      id_11,
      id_29,
      id_5,
      id_1,
      id_14,
      id_19,
      id_3,
      id_10,
      id_20,
      id_31,
      id_18,
      id_2,
      id_15,
      id_16,
      id_12,
      id_22,
      id_6,
      id_26
  );
  module_0 modCall_1 (
      id_6,
      id_22,
      id_7,
      id_15,
      id_30,
      id_17,
      id_19,
      id_14,
      id_4,
      id_11,
      id_13,
      id_29,
      id_25,
      id_11,
      id_18,
      id_24,
      id_15,
      id_18,
      id_17,
      id_27,
      id_9,
      id_15,
      id_32
  );
  assign modCall_1.id_9 = 0;
endmodule
