// This program was cloned from: https://github.com/QingXia-Ela/gdou-curriculum-design-collect
// License: MIT License

// megafunction wizard: %LPM_MULT%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: lpm_mult 

// ============================================================
// File Name: MULT.v
// Megafunction Name(s):
// 			lpm_mult
//
// Simulation Library Files(s):
// 			lpm
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 9.1 Build 222 10/21/2009 SJ Web Edition
// ************************************************************


//Copyright (C) 1991-2009 Altera Corporation
//Your use of Altera Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Altera Program License 
//Subscription Agreement, Altera MegaCore Function License 
//Agreement, or other applicable license agreement, including, 
//without limitation, that your use is for the sole purpose of 
//programming logic devices manufactured by Altera and sold by 
//Altera or its authorized distributors.  Please refer to the 
//applicable agreement for further details.


//lpm_mult DEVICE_FAMILY="Stratix II" LPM_REPRESENTATION="UNSIGNED" LPM_WIDTHA=8 LPM_WIDTHB=8 LPM_WIDTHP=8 MAXIMIZE_SPEED=5 dataa datab result
//VERSION_BEGIN 9.1 cbx_cycloneii 2009:10:21:21:22:16:SJ cbx_lpm_add_sub 2009:10:21:21:22:16:SJ cbx_lpm_mult 2009:10:21:21:22:16:SJ cbx_mgl 2009:10:21:21:37:49:SJ cbx_padd 2009:10:21:21:22:16:SJ cbx_stratix 2009:10:21:21:22:16:SJ cbx_stratixii 2009:10:21:21:22:16:SJ cbx_util_mgl 2009:10:21:21:22:16:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463


//synthesis_resources = dsp_9bit 1 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  MULT_mult
	( 
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   [7:0]  dataa;
	input   [7:0]  datab;
	output   [7:0]  result;

	wire  [15:0]   wire_mac_mult2_dataout;
	wire  [143:0]   wire_mac_out1_dataout;
	wire aclr;
	wire clken;
	wire clock;

	stratixii_mac_mult   mac_mult2
	( 
	.aclr({4{aclr}}),
	.clk({4{clock}}),
	.dataa({dataa}),
	.datab({datab}),
	.dataout(wire_mac_mult2_dataout),
	.ena({4{clken}}),
	.scanouta(),
	.scanoutb(),
	.signa(1'b0),
	.signb(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.mode(1'b0),
	.round(1'b0),
	.saturate(1'b0),
	.scanina({8{1'b0}}),
	.scaninb({8{1'b0}}),
	.sourcea(1'b0),
	.sourceb(1'b0),
	.zeroacc(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult2.dataa_width = 8,
		mac_mult2.datab_width = 8,
		mac_mult2.lpm_type = "stratixii_mac_mult";
	stratixii_mac_out   mac_out1
	( 
	.accoverflow(),
	.aclr({4{aclr}}),
	.clk({4{clock}}),
	.dataa({wire_mac_mult2_dataout[15:0]}),
	.dataout(wire_mac_out1_dataout),
	.ena({4{clken}}),
	.signa(1'b0),
	.signb(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.addnsub0(1'b1),
	.addnsub1(1'b1),
	.datab({1{1'b0}}),
	.datac({1{1'b0}}),
	.datad({1{1'b0}}),
	.mode0(1'b0),
	.mode1(1'b0),
	.multabsaturate(1'b0),
	.multcdsaturate(1'b0),
	.round0(1'b0),
	.round1(1'b0),
	.saturate(1'b0),
	.saturate1(1'b0),
	.zeroacc(1'b0),
	.zeroacc1(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out1.dataa_width = 16,
		mac_out1.dataout_width = 144,
		mac_out1.operation_mode = "output_only",
		mac_out1.lpm_type = "stratixii_mac_out";
	assign
		aclr = 1'b0,
		clken = 1'b1,
		clock = 1'b0,
		result = wire_mac_out1_dataout[15:8];
endmodule //MULT_mult
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module MULT (
	dataa,
	datab,
	result)/* synthesis synthesis_clearbox = 1 */;

	input	[7:0]  dataa;
	input	[7:0]  datab;
	output	[7:0]  result;

	wire [7:0] sub_wire0;
	wire [7:0] result = sub_wire0[7:0];

	MULT_mult	MULT_mult_component (
				.dataa (dataa),
				.datab (datab),
				.result (sub_wire0));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: AutoSizeResult NUMERIC "0"
// Retrieval info: PRIVATE: B_isConstant NUMERIC "0"
// Retrieval info: PRIVATE: ConstantB NUMERIC "0"
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Stratix II"
// Retrieval info: PRIVATE: LPM_PIPELINE NUMERIC "1"
// Retrieval info: PRIVATE: Latency NUMERIC "0"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "1"
// Retrieval info: PRIVATE: SignedMult NUMERIC "0"
// Retrieval info: PRIVATE: USE_MULT NUMERIC "1"
// Retrieval info: PRIVATE: ValidConstant NUMERIC "1"
// Retrieval info: PRIVATE: WidthA NUMERIC "8"
// Retrieval info: PRIVATE: WidthB NUMERIC "8"
// Retrieval info: PRIVATE: WidthP NUMERIC "8"
// Retrieval info: PRIVATE: aclr NUMERIC "0"
// Retrieval info: PRIVATE: clken NUMERIC "0"
// Retrieval info: PRIVATE: optimize NUMERIC "0"
// Retrieval info: CONSTANT: LPM_HINT STRING "MAXIMIZE_SPEED=5"
// Retrieval info: CONSTANT: LPM_REPRESENTATION STRING "UNSIGNED"
// Retrieval info: CONSTANT: LPM_TYPE STRING "LPM_MULT"
// Retrieval info: CONSTANT: LPM_WIDTHA NUMERIC "8"
// Retrieval info: CONSTANT: LPM_WIDTHB NUMERIC "8"
// Retrieval info: CONSTANT: LPM_WIDTHP NUMERIC "8"
// Retrieval info: USED_PORT: dataa 0 0 8 0 INPUT NODEFVAL dataa[7..0]
// Retrieval info: USED_PORT: datab 0 0 8 0 INPUT NODEFVAL datab[7..0]
// Retrieval info: USED_PORT: result 0 0 8 0 OUTPUT NODEFVAL result[7..0]
// Retrieval info: CONNECT: @dataa 0 0 8 0 dataa 0 0 8 0
// Retrieval info: CONNECT: result 0 0 8 0 @result 0 0 8 0
// Retrieval info: CONNECT: @datab 0 0 8 0 datab 0 0 8 0
// Retrieval info: LIBRARY: lpm lpm.lpm_components.all
// Retrieval info: GEN_FILE: TYPE_NORMAL MULT.vhd TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL MULT.inc TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL MULT.cmp TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL MULT.bsf TRUE FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL MULT_inst.vhd TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL MULT_waveforms.html TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL MULT_wave*.jpg FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL MULT_syn.v TRUE
// Retrieval info: LIB_FILE: lpm
