// This program was cloned from: https://github.com/rsnikhil/RISCV_Piccolo_v1
// License: MIT License

//
// Generated by Bluespec Compiler, version 2016.03.beta1 (build 34761, 2016-03-16)
//
// On Sat Jul  9 18:53:32 EDT 2016
//
//
// Ports:
// Name                         I/O  size props
// RDY_reset_start                O     1 const
// RDY_reset_complete             O     1
// icache_cable_ifc_req_enabled   O     1
// icache_cable_ifc_req_arg_addr  O    32
// dcache_cable_ifc_req_enabled   O     1
// dcache_cable_ifc_req_arg_op    O     1
// dcache_cable_ifc_req_arg_f3    O     3
// dcache_cable_ifc_req_arg_addr  O    32
// dcache_cable_ifc_req_arg_st_value  O    32
// RDY_control_request_put        O     1
// control_response_get           O    39
// RDY_control_response_get       O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// icache_cable_ifc_valid_result_valid  I     1
// icache_cable_ifc_pc_result_pc  I    32
// icache_cable_ifc_instr_result_instr  I    32
// icache_cable_ifc_exc_result_exc  I     1
// icache_cable_ifc_exc_code_result_exc_code  I     4
// dcache_cable_ifc_valid_result_valid  I     1
// dcache_cable_ifc_word_result_word  I    32
// dcache_cable_ifc_exc_result_exc  I     1
// dcache_cable_ifc_exc_code_result_exc_code  I     4
// control_request_put            I    70
// EN_reset_start                 I     1
// EN_reset_complete              I     1 unused
// EN_control_request_put         I     1
// EN_control_response_get        I     1
//
// Combinational paths from inputs to outputs:
//   (icache_cable_ifc_valid_result_valid,
//    icache_cable_ifc_instr_result_instr,
//    icache_cable_ifc_exc_result_exc,
//    dcache_cable_ifc_valid_result_valid,
//    dcache_cable_ifc_exc_result_exc) -> icache_cable_ifc_req_enabled
//   (icache_cable_ifc_valid_result_valid,
//    icache_cable_ifc_pc_result_pc,
//    icache_cable_ifc_instr_result_instr,
//    icache_cable_ifc_exc_result_exc,
//    dcache_cable_ifc_valid_result_valid,
//    dcache_cable_ifc_word_result_word,
//    dcache_cable_ifc_exc_result_exc,
//    control_request_put,
//    EN_control_request_put,
//    EN_control_response_get) -> icache_cable_ifc_req_arg_addr
//   (icache_cable_ifc_valid_result_valid,
//    icache_cable_ifc_pc_result_pc,
//    icache_cable_ifc_instr_result_instr,
//    icache_cable_ifc_exc_result_exc,
//    dcache_cable_ifc_valid_result_valid,
//    dcache_cable_ifc_word_result_word,
//    dcache_cable_ifc_exc_result_exc,
//    control_request_put,
//    EN_control_request_put,
//    EN_control_response_get) -> dcache_cable_ifc_req_enabled
//   (icache_cable_ifc_valid_result_valid,
//    icache_cable_ifc_pc_result_pc,
//    icache_cable_ifc_instr_result_instr,
//    icache_cable_ifc_exc_result_exc,
//    dcache_cable_ifc_valid_result_valid,
//    dcache_cable_ifc_word_result_word,
//    dcache_cable_ifc_exc_result_exc,
//    control_request_put,
//    EN_control_request_put,
//    EN_control_response_get) -> dcache_cable_ifc_req_arg_op
//   (icache_cable_ifc_valid_result_valid,
//    icache_cable_ifc_pc_result_pc,
//    icache_cable_ifc_instr_result_instr,
//    icache_cable_ifc_exc_result_exc,
//    dcache_cable_ifc_valid_result_valid,
//    dcache_cable_ifc_word_result_word,
//    dcache_cable_ifc_exc_result_exc,
//    control_request_put,
//    EN_control_request_put,
//    EN_control_response_get) -> dcache_cable_ifc_req_arg_f3
//   (icache_cable_ifc_valid_result_valid,
//    icache_cable_ifc_pc_result_pc,
//    icache_cable_ifc_instr_result_instr,
//    icache_cable_ifc_exc_result_exc,
//    dcache_cable_ifc_valid_result_valid,
//    dcache_cable_ifc_word_result_word,
//    dcache_cable_ifc_exc_result_exc,
//    control_request_put,
//    EN_control_request_put,
//    EN_control_response_get) -> dcache_cable_ifc_req_arg_addr
//   (icache_cable_ifc_valid_result_valid,
//    icache_cable_ifc_pc_result_pc,
//    icache_cable_ifc_instr_result_instr,
//    icache_cable_ifc_exc_result_exc,
//    dcache_cable_ifc_valid_result_valid,
//    dcache_cable_ifc_word_result_word,
//    dcache_cable_ifc_exc_result_exc,
//    control_request_put,
//    EN_control_request_put,
//    EN_control_response_get) -> dcache_cable_ifc_req_arg_st_value
//   EN_control_response_get -> RDY_control_request_put
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCPU(CLK,
	     RST_N,

	     EN_reset_start,
	     RDY_reset_start,

	     EN_reset_complete,
	     RDY_reset_complete,

	     icache_cable_ifc_req_enabled,

	     icache_cable_ifc_req_arg_addr,

	     icache_cable_ifc_valid_result_valid,

	     icache_cable_ifc_pc_result_pc,

	     icache_cable_ifc_instr_result_instr,

	     icache_cable_ifc_exc_result_exc,

	     icache_cable_ifc_exc_code_result_exc_code,

	     dcache_cable_ifc_req_enabled,

	     dcache_cable_ifc_req_arg_op,

	     dcache_cable_ifc_req_arg_f3,

	     dcache_cable_ifc_req_arg_addr,

	     dcache_cable_ifc_req_arg_st_value,

	     dcache_cable_ifc_valid_result_valid,

	     dcache_cable_ifc_word_result_word,

	     dcache_cable_ifc_exc_result_exc,

	     dcache_cable_ifc_exc_code_result_exc_code,

	     control_request_put,
	     EN_control_request_put,
	     RDY_control_request_put,

	     EN_control_response_get,
	     control_response_get,
	     RDY_control_response_get);
  input  CLK;
  input  RST_N;

  // action method reset_start
  input  EN_reset_start;
  output RDY_reset_start;

  // action method reset_complete
  input  EN_reset_complete;
  output RDY_reset_complete;

  // value method icache_cable_ifc_req_enabled
  output icache_cable_ifc_req_enabled;

  // value method icache_cable_ifc_req_arg_addr
  output [31 : 0] icache_cable_ifc_req_arg_addr;

  // action method icache_cable_ifc_valid_result
  input  icache_cable_ifc_valid_result_valid;

  // action method icache_cable_ifc_pc_result
  input  [31 : 0] icache_cable_ifc_pc_result_pc;

  // action method icache_cable_ifc_instr_result
  input  [31 : 0] icache_cable_ifc_instr_result_instr;

  // action method icache_cable_ifc_exc_result
  input  icache_cable_ifc_exc_result_exc;

  // action method icache_cable_ifc_exc_code_result
  input  [3 : 0] icache_cable_ifc_exc_code_result_exc_code;

  // value method dcache_cable_ifc_req_enabled
  output dcache_cable_ifc_req_enabled;

  // value method dcache_cable_ifc_req_arg_op
  output dcache_cable_ifc_req_arg_op;

  // value method dcache_cable_ifc_req_arg_f3
  output [2 : 0] dcache_cable_ifc_req_arg_f3;

  // value method dcache_cable_ifc_req_arg_addr
  output [31 : 0] dcache_cable_ifc_req_arg_addr;

  // value method dcache_cable_ifc_req_arg_st_value
  output [31 : 0] dcache_cable_ifc_req_arg_st_value;

  // action method dcache_cable_ifc_valid_result
  input  dcache_cable_ifc_valid_result_valid;

  // action method dcache_cable_ifc_word_result
  input  [31 : 0] dcache_cable_ifc_word_result_word;

  // action method dcache_cable_ifc_exc_result
  input  dcache_cable_ifc_exc_result_exc;

  // action method dcache_cable_ifc_exc_code_result
  input  [3 : 0] dcache_cable_ifc_exc_code_result_exc_code;

  // action method control_request_put
  input  [69 : 0] control_request_put;
  input  EN_control_request_put;
  output RDY_control_request_put;

  // actionvalue method control_response_get
  input  EN_control_response_get;
  output [38 : 0] control_response_get;
  output RDY_control_response_get;

  // signals for module outputs
  wire [38 : 0] control_response_get;
  wire [31 : 0] dcache_cable_ifc_req_arg_addr,
		dcache_cable_ifc_req_arg_st_value,
		icache_cable_ifc_req_arg_addr;
  wire [2 : 0] dcache_cable_ifc_req_arg_f3;
  wire RDY_control_request_put,
       RDY_control_response_get,
       RDY_reset_complete,
       RDY_reset_start,
       dcache_cable_ifc_req_arg_op,
       dcache_cable_ifc_req_enabled,
       icache_cable_ifc_req_enabled;

  // inlined wires
  wire [39 : 0] f_fabric_rsps_rv$port1__read,
		f_fabric_rsps_rv$port1__write_1,
		f_fabric_rsps_rv$port2__read,
		f_fabric_rsps_rv$port3__read;

  // register cfg_verbosity
  reg [3 : 0] cfg_verbosity;
  wire [3 : 0] cfg_verbosity$D_IN;
  wire cfg_verbosity$EN;

  // register f_fabric_rsps_rv
  reg [39 : 0] f_fabric_rsps_rv;
  wire [39 : 0] f_fabric_rsps_rv$D_IN;
  wire f_fabric_rsps_rv$EN;

  // register rg_resume_pc
  reg [31 : 0] rg_resume_pc;
  wire [31 : 0] rg_resume_pc$D_IN;
  wire rg_resume_pc$EN;

  // register rg_s2_csr_addr
  reg [11 : 0] rg_s2_csr_addr;
  wire [11 : 0] rg_s2_csr_addr$D_IN;
  wire rg_s2_csr_addr$EN;

  // register rg_s2_m_csr_value
  reg [32 : 0] rg_s2_m_csr_value;
  wire [32 : 0] rg_s2_m_csr_value$D_IN;
  wire rg_s2_m_csr_value$EN;

  // register rg_s2_rd
  reg [4 : 0] rg_s2_rd;
  wire [4 : 0] rg_s2_rd$D_IN;
  wire rg_s2_rd$EN;

  // register rg_s2_rdval
  reg [31 : 0] rg_s2_rdval;
  wire [31 : 0] rg_s2_rdval$D_IN;
  wire rg_s2_rdval$EN;

  // register rg_s2_state
  reg [2 : 0] rg_s2_state;
  wire [2 : 0] rg_s2_state$D_IN;
  wire rg_s2_state$EN;

  // register rg_s3_csr_addr
  reg [11 : 0] rg_s3_csr_addr;
  wire [11 : 0] rg_s3_csr_addr$D_IN;
  wire rg_s3_csr_addr$EN;

  // register rg_s3_m_csr_value
  reg [32 : 0] rg_s3_m_csr_value;
  wire [32 : 0] rg_s3_m_csr_value$D_IN;
  wire rg_s3_m_csr_value$EN;

  // register rg_s3_rd
  reg [4 : 0] rg_s3_rd;
  wire [4 : 0] rg_s3_rd$D_IN;
  wire rg_s3_rd$EN;

  // register rg_s3_rdval
  reg [31 : 0] rg_s3_rdval;
  reg [31 : 0] rg_s3_rdval$D_IN;
  wire rg_s3_rdval$EN;

  // register rg_s3_state
  reg rg_s3_state;
  wire rg_s3_state$D_IN, rg_s3_state$EN;

  // register rg_state
  reg [2 : 0] rg_state;
  reg [2 : 0] rg_state$D_IN;
  wire rg_state$EN;

  // register rg_stop_reason
  reg [2 : 0] rg_stop_reason;
  wire [2 : 0] rg_stop_reason$D_IN;
  wire rg_stop_reason$EN;

  // ports of submodule csr_regfile
  wire [32 : 0] csr_regfile$mav_read;
  wire [31 : 0] csr_regfile$ma_write_word,
		csr_regfile$read_mepc,
		csr_regfile$read_mstatus,
		csr_regfile$read_mtvec,
		csr_regfile$write_mbadaddr_badaddr,
		csr_regfile$write_mcause_cause,
		csr_regfile$write_mepc_epc;
  wire [11 : 0] csr_regfile$ma_write_csr_addr, csr_regfile$mav_read_csr_addr;
  wire csr_regfile$EN_incr_instret,
       csr_regfile$EN_ma_write,
       csr_regfile$EN_mav_read,
       csr_regfile$EN_pop_mstatus,
       csr_regfile$EN_push_mstatus,
       csr_regfile$EN_reset_complete,
       csr_regfile$EN_reset_start,
       csr_regfile$EN_write_mbadaddr,
       csr_regfile$EN_write_mcause,
       csr_regfile$EN_write_mepc;

  // ports of submodule dcache
  wire [31 : 0] dcache$cable_ifc_req_arg_addr,
		dcache$cable_ifc_req_arg_st_value,
		dcache$cable_ifc_word_result_word,
		dcache$req_addr,
		dcache$req_st_value,
		dcache$word;
  wire [3 : 0] dcache$cable_ifc_exc_code_result_exc_code, dcache$exc_code;
  wire [2 : 0] dcache$cable_ifc_req_arg_f3, dcache$req_f3;
  wire dcache$EN_req,
       dcache$cable_ifc_exc_result_exc,
       dcache$cable_ifc_req_arg_op,
       dcache$cable_ifc_req_enabled,
       dcache$cable_ifc_valid_result_valid,
       dcache$exc,
       dcache$req_op,
       dcache$valid;

  // ports of submodule icache
  wire [31 : 0] icache$cable_ifc_instr_result_instr,
		icache$cable_ifc_pc_result_pc,
		icache$cable_ifc_req_arg_addr,
		icache$instr,
		icache$pc,
		icache$req_addr;
  wire [3 : 0] icache$cable_ifc_exc_code_result_exc_code, icache$exc_code;
  wire icache$EN_req,
       icache$cable_ifc_exc_result_exc,
       icache$cable_ifc_req_enabled,
       icache$cable_ifc_valid_result_valid,
       icache$exc,
       icache$valid;

  // ports of submodule mbox
  wire [31 : 0] mbox$req_v1, mbox$req_v2, mbox$word;
  wire [3 : 0] mbox$set_verbosity_verbosity;
  wire [2 : 0] mbox$req_f3;
  wire mbox$EN_req,
       mbox$EN_req_reset,
       mbox$EN_rsp_reset,
       mbox$EN_set_verbosity,
       mbox$valid;

  // ports of submodule regfile
  reg [31 : 0] regfile$D_IN;
  reg [4 : 0] regfile$ADDR_IN;
  wire [31 : 0] regfile$D_OUT_1, regfile$D_OUT_2;
  wire [4 : 0] regfile$ADDR_1,
	       regfile$ADDR_2,
	       regfile$ADDR_3,
	       regfile$ADDR_4,
	       regfile$ADDR_5;
  wire regfile$WE;

  // ports of submodule riscv
  wire [143 : 0] riscv$do_riscv;
  wire [32 : 0] riscv$do_riscv_v_csr;
  wire [31 : 0] riscv$do_riscv_instr,
		riscv$do_riscv_pc,
		riscv$do_riscv_v1,
		riscv$do_riscv_v2;
  wire [3 : 0] riscv$do_riscv_verbosity;
  wire riscv$EN_do_riscv, riscv$EN_reset_complete, riscv$EN_reset_start;

  // rule scheduling signals
  wire CAN_FIRE_RL_rl_post_run,
       CAN_FIRE_RL_rl_pre_run,
       CAN_FIRE_RL_rl_reset,
       CAN_FIRE_RL_rl_run,
       CAN_FIRE_control_request_put,
       CAN_FIRE_control_response_get,
       CAN_FIRE_dcache_cable_ifc_exc_code_result,
       CAN_FIRE_dcache_cable_ifc_exc_result,
       CAN_FIRE_dcache_cable_ifc_valid_result,
       CAN_FIRE_dcache_cable_ifc_word_result,
       CAN_FIRE_icache_cable_ifc_exc_code_result,
       CAN_FIRE_icache_cable_ifc_exc_result,
       CAN_FIRE_icache_cable_ifc_instr_result,
       CAN_FIRE_icache_cable_ifc_pc_result,
       CAN_FIRE_icache_cable_ifc_valid_result,
       CAN_FIRE_reset_complete,
       CAN_FIRE_reset_start,
       WILL_FIRE_RL_rl_post_run,
       WILL_FIRE_RL_rl_pre_run,
       WILL_FIRE_RL_rl_reset,
       WILL_FIRE_RL_rl_run,
       WILL_FIRE_control_request_put,
       WILL_FIRE_control_response_get,
       WILL_FIRE_dcache_cable_ifc_exc_code_result,
       WILL_FIRE_dcache_cable_ifc_exc_result,
       WILL_FIRE_dcache_cable_ifc_valid_result,
       WILL_FIRE_dcache_cable_ifc_word_result,
       WILL_FIRE_icache_cable_ifc_exc_code_result,
       WILL_FIRE_icache_cable_ifc_exc_result,
       WILL_FIRE_icache_cable_ifc_instr_result,
       WILL_FIRE_icache_cable_ifc_pc_result,
       WILL_FIRE_icache_cable_ifc_valid_result,
       WILL_FIRE_reset_complete,
       WILL_FIRE_reset_start;

  // inputs to muxes for submodule ports
  reg [11 : 0] MUX_csr_regfile$mav_read_1__VAL_2;
  wire [31 : 0] MUX_icache$req_1__VAL_1;
  wire [2 : 0] MUX_rg_s2_state$write_1__VAL_1;
  wire MUX_csr_regfile$mav_read_1__SEL_1,
       MUX_icache$req_1__SEL_1,
       MUX_regfile$upd_1__SEL_1,
       MUX_regfile$upd_1__SEL_2,
       MUX_rg_resume_pc$write_1__SEL_1,
       MUX_rg_s3_state$write_1__VAL_1,
       MUX_rg_state$write_1__SEL_3,
       MUX_rg_state$write_1__SEL_6;

  // remaining internal signals
  reg [31 : 0] v__h10054,
	       v__h10060,
	       v__h10188,
	       v__h10194,
	       v__h1753,
	       v__h1759,
	       v__h1858,
	       v__h1864,
	       v__h1948,
	       v__h1954,
	       v__h6512,
	       v__h6518,
	       v__h7365,
	       v__h7371,
	       v__h7472,
	       v__h7478,
	       v__h7768,
	       v__h7774,
	       v__h7997,
	       v__h8003,
	       v__h8127,
	       v__h8133,
	       v__h8313,
	       v__h8319,
	       v__h8426,
	       v__h8432,
	       v__h8603,
	       v__h8609,
	       v__h8768,
	       v__h8774,
	       v__h8933,
	       v__h8939,
	       v__h9098,
	       v__h9104,
	       v__h9263,
	       v__h9269,
	       v__h9428,
	       v__h9434,
	       v__h9735,
	       v__h9741,
	       v__h9908,
	       v__h9914,
	       y_avValue_snd__h10287;
  wire [31 : 0] IF_icache_instr__11_BITS_6_TO_0_12_EQ_0b111001_ETC___d160,
		IF_icache_instr__11_BITS_6_TO_0_12_EQ_0b111001_ETC___d186,
		IF_rg_s2_state_7_EQ_2_0_AND_rg_s2_m_csr_value__ETC___d368,
		IF_rg_s3_state_8_AND_NOT_rg_s3_rd_9_EQ_0_0_3_4_ETC___d342,
		IF_rg_s3_state_8_AND_NOT_rg_s3_rd_9_EQ_0_0_3_4_ETC___d350,
		IF_rg_s3_state_8_AND_rg_s3_m_csr_value_8_BIT_3_ETC___d367,
		cause__h3983,
		cause__h4364,
		cause__h4788,
		cause__h6691,
		fabric_rsp_word__h10391,
		feedback_s2_regvalue__h3727,
		pc__h6586,
		rsp_word___1__h9396,
		v_bypassed1__h5820,
		v_bypassed2__h5823,
		value__h6319,
		y_avValue_snd__h10304,
		y_avValue_snd__h8250,
		y_avValue_snd__h8255,
		y_avValue_snd__h9605,
		y_avValue_snd_snd_fst__h3598,
		y_avValue_snd_snd_fst__h3604,
		y_avValue_snd_snd_fst__h3610,
		y_avValue_snd_snd_snd_snd_snd_snd_fst__h3770;
  wire [2 : 0] IF_NOT_icache_valid__02_29_OR_NOT_IF_rg_s2_sta_ETC___d435,
	       IF_icache_instr__11_BITS_6_TO_0_12_EQ_0b111001_ETC___d433,
	       IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107;
  wire IF_NOT_control_request_put_BIT_67_45_46_AND_co_ETC___d648,
       IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200,
       IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d293,
       IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d297,
       IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d311,
       IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d85,
       IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d99,
       NOT_cfg_verbosity_read_ULE_1_4_5_AND_NOT_rg_s2_ETC___d314,
       NOT_cfg_verbosity_read_ULE_1_4_5_AND_rg_s2_sta_ETC___d300,
       NOT_cfg_verbosity_read_ULE_1_4___d15,
       NOT_control_request_put_BITS_39_TO_32_50_EQ_0x_ETC___d463,
       NOT_icache_exc__10_06_AND_NOT_icache_instr__11_ETC___d359,
       NOT_icache_exc__10_06_AND_NOT_icache_instr__11_ETC___d376,
       NOT_icache_exc__10_06_AND_NOT_icache_instr__11_ETC___d387,
       NOT_icache_exc__10_06_AND_NOT_icache_instr__11_ETC___d414,
       NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130,
       NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165,
       NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d212,
       NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d215,
       NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d255,
       NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d263,
       NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d273,
       NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d281,
       NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d290,
       NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d326,
       NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d334,
       NOT_rg_s2_state_7_EQ_1_8_0_AND_IF_rg_s2_state__ETC___d339,
       NOT_rg_s2_state_7_EQ_1_8_0_AND_IF_rg_s2_state__ETC___d347,
       NOT_rg_s2_state_7_EQ_1_8_0_AND_NOT_rg_s2_state_ETC___d133,
       NOT_rg_s2_state_7_EQ_1_8_0_AND_NOT_rg_s2_state_ETC___d146,
       NOT_rg_s2_state_7_EQ_1_8_0_AND_NOT_rg_s2_state_ETC___d198,
       NOT_rg_s2_state_7_EQ_1_8_0_AND_NOT_rg_s2_state_ETC___d84,
       control_request_put_BITS_39_TO_32_50_ULE_0x9F___d460,
       control_request_put_BITS_39_TO_32_50_ULT_0x80___d458,
       control_request_put_BITS_69_TO_68_43_EQ_0_44_A_ETC___d587,
       control_request_put_BIT_67_45_AND_control_requ_ETC___d588,
       icache_exc__10_AND_icache_exc_code__80_EQ_0x3__ETC___d225,
       icache_instr__11_BITS_6_TO_0_12_EQ_0b1110011_1_ETC___d153,
       icache_instr__11_BITS_6_TO_0_12_EQ_0b1110011_1_ETC___d162,
       icache_instr__11_BITS_6_TO_0_12_EQ_0b1110011_1_ETC___d163,
       icache_instr__11_BITS_6_TO_0_12_EQ_0b1110011_1_ETC___d222,
       icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d171,
       icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248,
       icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d306,
       icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d320,
       icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d398,
       icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d426,
       rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d227,
       rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d233,
       rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d236,
       rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d242,
       rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d258,
       rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d266,
       rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d276,
       rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d284,
       rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d329,
       rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d361,
       rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d378,
       rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d389,
       rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d416;

  // action method reset_start
  assign RDY_reset_start = 1'd1 ;
  assign CAN_FIRE_reset_start = 1'd1 ;
  assign WILL_FIRE_reset_start = EN_reset_start ;

  // action method reset_complete
  assign RDY_reset_complete = rg_state == 3'd1 ;
  assign CAN_FIRE_reset_complete = rg_state == 3'd1 ;
  assign WILL_FIRE_reset_complete = EN_reset_complete ;

  // value method icache_cable_ifc_req_enabled
  assign icache_cable_ifc_req_enabled = icache$cable_ifc_req_enabled ;

  // value method icache_cable_ifc_req_arg_addr
  assign icache_cable_ifc_req_arg_addr = icache$cable_ifc_req_arg_addr ;

  // action method icache_cable_ifc_valid_result
  assign CAN_FIRE_icache_cable_ifc_valid_result = 1'd1 ;
  assign WILL_FIRE_icache_cable_ifc_valid_result = 1'd1 ;

  // action method icache_cable_ifc_pc_result
  assign CAN_FIRE_icache_cable_ifc_pc_result = 1'd1 ;
  assign WILL_FIRE_icache_cable_ifc_pc_result = 1'd1 ;

  // action method icache_cable_ifc_instr_result
  assign CAN_FIRE_icache_cable_ifc_instr_result = 1'd1 ;
  assign WILL_FIRE_icache_cable_ifc_instr_result = 1'd1 ;

  // action method icache_cable_ifc_exc_result
  assign CAN_FIRE_icache_cable_ifc_exc_result = 1'd1 ;
  assign WILL_FIRE_icache_cable_ifc_exc_result = 1'd1 ;

  // action method icache_cable_ifc_exc_code_result
  assign CAN_FIRE_icache_cable_ifc_exc_code_result = 1'd1 ;
  assign WILL_FIRE_icache_cable_ifc_exc_code_result = 1'd1 ;

  // value method dcache_cable_ifc_req_enabled
  assign dcache_cable_ifc_req_enabled = dcache$cable_ifc_req_enabled ;

  // value method dcache_cable_ifc_req_arg_op
  assign dcache_cable_ifc_req_arg_op = dcache$cable_ifc_req_arg_op ;

  // value method dcache_cable_ifc_req_arg_f3
  assign dcache_cable_ifc_req_arg_f3 = dcache$cable_ifc_req_arg_f3 ;

  // value method dcache_cable_ifc_req_arg_addr
  assign dcache_cable_ifc_req_arg_addr = dcache$cable_ifc_req_arg_addr ;

  // value method dcache_cable_ifc_req_arg_st_value
  assign dcache_cable_ifc_req_arg_st_value =
	     dcache$cable_ifc_req_arg_st_value ;

  // action method dcache_cable_ifc_valid_result
  assign CAN_FIRE_dcache_cable_ifc_valid_result = 1'd1 ;
  assign WILL_FIRE_dcache_cable_ifc_valid_result = 1'd1 ;

  // action method dcache_cable_ifc_word_result
  assign CAN_FIRE_dcache_cable_ifc_word_result = 1'd1 ;
  assign WILL_FIRE_dcache_cable_ifc_word_result = 1'd1 ;

  // action method dcache_cable_ifc_exc_result
  assign CAN_FIRE_dcache_cable_ifc_exc_result = 1'd1 ;
  assign WILL_FIRE_dcache_cable_ifc_exc_result = 1'd1 ;

  // action method dcache_cable_ifc_exc_code_result
  assign CAN_FIRE_dcache_cable_ifc_exc_code_result = 1'd1 ;
  assign WILL_FIRE_dcache_cable_ifc_exc_code_result = 1'd1 ;

  // action method control_request_put
  assign RDY_control_request_put =
	     rg_state == 3'd1 && !f_fabric_rsps_rv$port1__read[39] ;
  assign CAN_FIRE_control_request_put =
	     rg_state == 3'd1 && !f_fabric_rsps_rv$port1__read[39] ;
  assign WILL_FIRE_control_request_put = EN_control_request_put ;

  // actionvalue method control_response_get
  assign control_response_get = f_fabric_rsps_rv[38:0] ;
  assign RDY_control_response_get = f_fabric_rsps_rv[39] ;
  assign CAN_FIRE_control_response_get = f_fabric_rsps_rv[39] ;
  assign WILL_FIRE_control_response_get = EN_control_response_get ;

  // submodule csr_regfile
  mkCSR_RegFile csr_regfile(.CLK(CLK),
			    .RST_N(RST_N),
			    .ma_write_csr_addr(csr_regfile$ma_write_csr_addr),
			    .ma_write_word(csr_regfile$ma_write_word),
			    .mav_read_csr_addr(csr_regfile$mav_read_csr_addr),
			    .write_mbadaddr_badaddr(csr_regfile$write_mbadaddr_badaddr),
			    .write_mcause_cause(csr_regfile$write_mcause_cause),
			    .write_mepc_epc(csr_regfile$write_mepc_epc),
			    .EN_reset_start(csr_regfile$EN_reset_start),
			    .EN_reset_complete(csr_regfile$EN_reset_complete),
			    .EN_mav_read(csr_regfile$EN_mav_read),
			    .EN_ma_write(csr_regfile$EN_ma_write),
			    .EN_push_mstatus(csr_regfile$EN_push_mstatus),
			    .EN_pop_mstatus(csr_regfile$EN_pop_mstatus),
			    .EN_write_mepc(csr_regfile$EN_write_mepc),
			    .EN_write_mcause(csr_regfile$EN_write_mcause),
			    .EN_write_mbadaddr(csr_regfile$EN_write_mbadaddr),
			    .EN_incr_instret(csr_regfile$EN_incr_instret),
			    .RDY_reset_start(),
			    .RDY_reset_complete(),
			    .mav_read(csr_regfile$mav_read),
			    .read_mstatus(csr_regfile$read_mstatus),
			    .read_mtvec(csr_regfile$read_mtvec),
			    .read_mepc(csr_regfile$read_mepc));

  // submodule dcache
  mkDCache_Socket dcache(.CLK(CLK),
			 .RST_N(RST_N),
			 .cable_ifc_exc_code_result_exc_code(dcache$cable_ifc_exc_code_result_exc_code),
			 .cable_ifc_exc_result_exc(dcache$cable_ifc_exc_result_exc),
			 .cable_ifc_valid_result_valid(dcache$cable_ifc_valid_result_valid),
			 .cable_ifc_word_result_word(dcache$cable_ifc_word_result_word),
			 .req_addr(dcache$req_addr),
			 .req_f3(dcache$req_f3),
			 .req_op(dcache$req_op),
			 .req_st_value(dcache$req_st_value),
			 .EN_req(dcache$EN_req),
			 .valid(dcache$valid),
			 .word(dcache$word),
			 .exc(dcache$exc),
			 .exc_code(dcache$exc_code),
			 .cable_ifc_req_enabled(dcache$cable_ifc_req_enabled),
			 .cable_ifc_req_arg_op(dcache$cable_ifc_req_arg_op),
			 .cable_ifc_req_arg_f3(dcache$cable_ifc_req_arg_f3),
			 .cable_ifc_req_arg_addr(dcache$cable_ifc_req_arg_addr),
			 .cable_ifc_req_arg_st_value(dcache$cable_ifc_req_arg_st_value));

  // submodule icache
  mkICache_Socket icache(.CLK(CLK),
			 .RST_N(RST_N),
			 .cable_ifc_exc_code_result_exc_code(icache$cable_ifc_exc_code_result_exc_code),
			 .cable_ifc_exc_result_exc(icache$cable_ifc_exc_result_exc),
			 .cable_ifc_instr_result_instr(icache$cable_ifc_instr_result_instr),
			 .cable_ifc_pc_result_pc(icache$cable_ifc_pc_result_pc),
			 .cable_ifc_valid_result_valid(icache$cable_ifc_valid_result_valid),
			 .req_addr(icache$req_addr),
			 .EN_req(icache$EN_req),
			 .valid(icache$valid),
			 .pc(icache$pc),
			 .instr(icache$instr),
			 .exc(icache$exc),
			 .exc_code(icache$exc_code),
			 .cable_ifc_req_enabled(icache$cable_ifc_req_enabled),
			 .cable_ifc_req_arg_addr(icache$cable_ifc_req_arg_addr));

  // submodule mbox
  mkRISCV_MBox mbox(.CLK(CLK),
		    .RST_N(RST_N),
		    .req_f3(mbox$req_f3),
		    .req_v1(mbox$req_v1),
		    .req_v2(mbox$req_v2),
		    .set_verbosity_verbosity(mbox$set_verbosity_verbosity),
		    .EN_set_verbosity(mbox$EN_set_verbosity),
		    .EN_req_reset(mbox$EN_req_reset),
		    .EN_rsp_reset(mbox$EN_rsp_reset),
		    .EN_req(mbox$EN_req),
		    .RDY_set_verbosity(),
		    .RDY_req_reset(),
		    .RDY_rsp_reset(),
		    .valid(mbox$valid),
		    .word(mbox$word));

  // submodule regfile
  RegFile #(.addr_width(32'd5),
	    .data_width(32'd32),
	    .lo(5'h0),
	    .hi(5'd31)) regfile(.CLK(CLK),
				.ADDR_1(regfile$ADDR_1),
				.ADDR_2(regfile$ADDR_2),
				.ADDR_3(regfile$ADDR_3),
				.ADDR_4(regfile$ADDR_4),
				.ADDR_5(regfile$ADDR_5),
				.ADDR_IN(regfile$ADDR_IN),
				.D_IN(regfile$D_IN),
				.WE(regfile$WE),
				.D_OUT_1(regfile$D_OUT_1),
				.D_OUT_2(regfile$D_OUT_2),
				.D_OUT_3(),
				.D_OUT_4(),
				.D_OUT_5());

  // submodule riscv
  mkRISCV_Exec riscv(.CLK(CLK),
		     .RST_N(RST_N),
		     .do_riscv_instr(riscv$do_riscv_instr),
		     .do_riscv_pc(riscv$do_riscv_pc),
		     .do_riscv_v1(riscv$do_riscv_v1),
		     .do_riscv_v2(riscv$do_riscv_v2),
		     .do_riscv_v_csr(riscv$do_riscv_v_csr),
		     .do_riscv_verbosity(riscv$do_riscv_verbosity),
		     .EN_reset_start(riscv$EN_reset_start),
		     .EN_reset_complete(riscv$EN_reset_complete),
		     .EN_do_riscv(riscv$EN_do_riscv),
		     .RDY_reset_start(),
		     .RDY_reset_complete(),
		     .do_riscv(riscv$do_riscv),
		     .RDY_do_riscv());

  // rule RL_rl_reset
  assign CAN_FIRE_RL_rl_reset = rg_state == 3'd0 ;
  assign WILL_FIRE_RL_rl_reset = CAN_FIRE_RL_rl_reset ;

  // rule RL_rl_pre_run
  assign CAN_FIRE_RL_rl_pre_run = rg_state == 3'd2 ;
  assign WILL_FIRE_RL_rl_pre_run = rg_state == 3'd2 ;

  // rule RL_rl_run
  assign CAN_FIRE_RL_rl_run = rg_state == 3'd3 ;
  assign WILL_FIRE_RL_rl_run = rg_state == 3'd3 ;

  // rule RL_rl_post_run
  assign CAN_FIRE_RL_rl_post_run = rg_state == 3'd4 ;
  assign WILL_FIRE_RL_rl_post_run = rg_state == 3'd4 ;

  // inputs to muxes for submodule ports
  assign MUX_csr_regfile$mav_read_1__SEL_1 =
	     WILL_FIRE_RL_rl_run &&
	     rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d242 ;
  assign MUX_icache$req_1__SEL_1 =
	     WILL_FIRE_RL_rl_run &&
	     NOT_rg_s2_state_7_EQ_1_8_0_AND_NOT_rg_s2_state_ETC___d133 ;
  assign MUX_regfile$upd_1__SEL_1 =
	     WILL_FIRE_RL_rl_run && rg_s3_state && rg_s3_rd != 5'd0 ;
  assign MUX_regfile$upd_1__SEL_2 =
	     EN_control_request_put &&
	     control_request_put_BITS_69_TO_68_43_EQ_0_44_A_ETC___d587 ;
  assign MUX_rg_resume_pc$write_1__SEL_1 =
	     EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	     control_request_put[67] &&
	     control_request_put[66:64] == 3'd2 &&
	     control_request_put[39:32] == 8'hA0 ;
  assign MUX_rg_state$write_1__SEL_3 =
	     WILL_FIRE_RL_rl_run &&
	     (NOT_rg_s2_state_7_EQ_1_8_0_AND_NOT_rg_s2_state_ETC___d198 ||
	      rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d227) ;
  assign MUX_rg_state$write_1__SEL_6 =
	     EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	     control_request_put[67] &&
	     control_request_put[66:64] == 3'd2 &&
	     control_request_put[39:32] == 8'hA1 ;
  always@(control_request_put)
  begin
    case (control_request_put[39:32])
      8'hA2: MUX_csr_regfile$mav_read_1__VAL_2 = 12'hC00;
      8'hA3: MUX_csr_regfile$mav_read_1__VAL_2 = 12'hC80;
      8'hA4: MUX_csr_regfile$mav_read_1__VAL_2 = 12'hC01;
      8'hA5: MUX_csr_regfile$mav_read_1__VAL_2 = 12'hC81;
      8'hA6: MUX_csr_regfile$mav_read_1__VAL_2 = 12'hC02;
      default: MUX_csr_regfile$mav_read_1__VAL_2 = 12'hC82;
    endcase
  end
  assign MUX_icache$req_1__VAL_1 =
	     NOT_rg_s2_state_7_EQ_1_8_0_AND_NOT_rg_s2_state_ETC___d146 ?
	       pc__h6586 :
	       IF_icache_instr__11_BITS_6_TO_0_12_EQ_0b111001_ETC___d160 ;
  assign MUX_rg_s2_state$write_1__VAL_1 =
	     (rg_s2_state != 3'd1 && rg_s2_state != 3'd2 &&
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d99) ?
	       3'd1 :
	       IF_NOT_icache_valid__02_29_OR_NOT_IF_rg_s2_sta_ETC___d435 ;
  assign MUX_rg_s3_state$write_1__VAL_1 =
	     rg_s2_state != 3'd1 &&
	     (rg_s2_state == 3'd2 ||
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d85) ;

  // inlined wires
  assign f_fabric_rsps_rv$port1__read =
	     EN_control_response_get ? 40'h2AAAAAAAAA : f_fabric_rsps_rv ;
  assign f_fabric_rsps_rv$port1__write_1 =
	     { 1'd1,
	       control_request_put[69:64],
	       control_request_put[69:68] != 2'd0 ||
	       IF_NOT_control_request_put_BIT_67_45_46_AND_co_ETC___d648,
	       fabric_rsp_word__h10391 } ;
  assign f_fabric_rsps_rv$port2__read =
	     EN_control_request_put ?
	       f_fabric_rsps_rv$port1__write_1 :
	       f_fabric_rsps_rv$port1__read ;
  assign f_fabric_rsps_rv$port3__read =
	     (rg_state == 3'd0) ?
	       40'h2AAAAAAAAA :
	       f_fabric_rsps_rv$port2__read ;

  // register cfg_verbosity
  assign cfg_verbosity$D_IN = control_request_put[3:0] ;
  assign cfg_verbosity$EN =
	     EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	     control_request_put[67] &&
	     control_request_put[66:64] == 3'd2 &&
	     control_request_put[39:32] == 8'h01 ;

  // register f_fabric_rsps_rv
  assign f_fabric_rsps_rv$D_IN = f_fabric_rsps_rv$port3__read ;
  assign f_fabric_rsps_rv$EN = 1'b1 ;

  // register rg_resume_pc
  assign rg_resume_pc$D_IN =
	     MUX_rg_resume_pc$write_1__SEL_1 ?
	       control_request_put[31:0] :
	       32'd512 ;
  assign rg_resume_pc$EN =
	     EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	     control_request_put[67] &&
	     control_request_put[66:64] == 3'd2 &&
	     control_request_put[39:32] == 8'hA0 ||
	     WILL_FIRE_RL_rl_reset ;

  // register rg_s2_csr_addr
  assign rg_s2_csr_addr$D_IN = icache$instr[31:20] ;
  assign rg_s2_csr_addr$EN =
	     WILL_FIRE_RL_rl_run &&
	     (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	     icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d398 ;

  // register rg_s2_m_csr_value
  assign rg_s2_m_csr_value$D_IN =
	     { riscv$do_riscv[32],
	       riscv$do_riscv[32] ? riscv$do_riscv[31:0] : 32'hAAAAAAAA } ;
  assign rg_s2_m_csr_value$EN =
	     WILL_FIRE_RL_rl_run &&
	     (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	     icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d398 ;

  // register rg_s2_rd
  assign rg_s2_rd$D_IN = riscv$do_riscv[104:100] ;
  assign rg_s2_rd$EN =
	     WILL_FIRE_RL_rl_run &&
	     (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	     icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d398 ;

  // register rg_s2_rdval
  assign rg_s2_rdval$D_IN = riscv$do_riscv[99:68] ;
  assign rg_s2_rdval$EN =
	     WILL_FIRE_RL_rl_run &&
	     (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	     icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d398 ;

  // register rg_s2_state
  assign rg_s2_state$D_IN =
	     WILL_FIRE_RL_rl_run ? MUX_rg_s2_state$write_1__VAL_1 : 3'd1 ;
  assign rg_s2_state$EN = WILL_FIRE_RL_rl_run || WILL_FIRE_RL_rl_reset ;

  // register rg_s3_csr_addr
  assign rg_s3_csr_addr$D_IN = rg_s2_csr_addr ;
  assign rg_s3_csr_addr$EN = rg_state == 3'd3 ;

  // register rg_s3_m_csr_value
  assign rg_s3_m_csr_value$D_IN =
	     { rg_s2_state == 3'd2 && rg_s2_m_csr_value[32],
	       rg_s2_m_csr_value[31:0] } ;
  assign rg_s3_m_csr_value$EN = rg_state == 3'd3 ;

  // register rg_s3_rd
  assign rg_s3_rd$D_IN = rg_s2_rd ;
  assign rg_s3_rd$EN = rg_state == 3'd3 ;

  // register rg_s3_rdval
  always@(rg_s2_state or y_avValue_snd_snd_fst__h3598 or rg_s2_rdval)
  begin
    case (rg_s2_state)
      3'd1, 3'd2: rg_s3_rdval$D_IN = rg_s2_rdval;
      default: rg_s3_rdval$D_IN = y_avValue_snd_snd_fst__h3598;
    endcase
  end
  assign rg_s3_rdval$EN = rg_state == 3'd3 ;

  // register rg_s3_state
  assign rg_s3_state$D_IN =
	     WILL_FIRE_RL_rl_run && MUX_rg_s3_state$write_1__VAL_1 ;
  assign rg_s3_state$EN = WILL_FIRE_RL_rl_run || WILL_FIRE_RL_rl_reset ;

  // register rg_state
  always@(EN_reset_start or
	  WILL_FIRE_RL_rl_post_run or
	  MUX_rg_state$write_1__SEL_3 or
	  WILL_FIRE_RL_rl_pre_run or
	  WILL_FIRE_RL_rl_reset or MUX_rg_state$write_1__SEL_6)
  case (1'b1)
    EN_reset_start: rg_state$D_IN = 3'd0;
    WILL_FIRE_RL_rl_post_run: rg_state$D_IN = 3'd1;
    MUX_rg_state$write_1__SEL_3: rg_state$D_IN = 3'd4;
    WILL_FIRE_RL_rl_pre_run: rg_state$D_IN = 3'd3;
    WILL_FIRE_RL_rl_reset: rg_state$D_IN = 3'd1;
    MUX_rg_state$write_1__SEL_6: rg_state$D_IN = 3'd2;
    default: rg_state$D_IN = 3'b010 /* unspecified value */ ;
  endcase
  assign rg_state$EN =
	     WILL_FIRE_RL_rl_run &&
	     (NOT_rg_s2_state_7_EQ_1_8_0_AND_NOT_rg_s2_state_ETC___d198 ||
	      rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d227) ||
	     EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	     control_request_put[67] &&
	     control_request_put[66:64] == 3'd2 &&
	     control_request_put[39:32] == 8'hA1 ||
	     EN_reset_start ||
	     WILL_FIRE_RL_rl_post_run ||
	     WILL_FIRE_RL_rl_reset ||
	     WILL_FIRE_RL_rl_pre_run ;

  // register rg_stop_reason
  assign rg_stop_reason$D_IN = 3'd5 ;
  assign rg_stop_reason$EN = MUX_rg_state$write_1__SEL_3 ;

  // submodule csr_regfile
  assign csr_regfile$ma_write_csr_addr = rg_s3_csr_addr ;
  assign csr_regfile$ma_write_word = rg_s3_m_csr_value[31:0] ;
  assign csr_regfile$mav_read_csr_addr =
	     MUX_csr_regfile$mav_read_1__SEL_1 ?
	       icache$instr[31:20] :
	       MUX_csr_regfile$mav_read_1__VAL_2 ;
  assign csr_regfile$write_mbadaddr_badaddr =
	     (rg_s2_state != 3'd1 && rg_s2_state != 3'd2 &&
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d99) ?
	       feedback_s2_regvalue__h3727 :
	       icache$pc ;
  assign csr_regfile$write_mcause_cause =
	     (rg_s2_state != 3'd1 && rg_s2_state != 3'd2 &&
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d99) ?
	       cause__h3983 :
	       (icache$exc ?
		  cause__h4364 :
		  IF_icache_instr__11_BITS_6_TO_0_12_EQ_0b111001_ETC___d186) ;
  assign csr_regfile$write_mepc_epc =
	     (rg_s2_state != 3'd1 && rg_s2_state != 3'd2 &&
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d99) ?
	       rg_s2_m_csr_value[31:0] :
	       icache$pc ;
  assign csr_regfile$EN_reset_start = CAN_FIRE_RL_rl_reset ;
  assign csr_regfile$EN_reset_complete = EN_reset_complete ;
  assign csr_regfile$EN_mav_read =
	     WILL_FIRE_RL_rl_run &&
	     rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d242 ||
	     EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	     !control_request_put[67] &&
	     control_request_put[66:64] == 3'd2 &&
	     (control_request_put[39:32] == 8'hA2 ||
	      control_request_put[39:32] == 8'hA3 ||
	      control_request_put[39:32] == 8'hA4 ||
	      control_request_put[39:32] == 8'hA5 ||
	      control_request_put[39:32] == 8'hA6 ||
	      control_request_put[39:32] == 8'hA7) ;
  assign csr_regfile$EN_ma_write =
	     WILL_FIRE_RL_rl_run && rg_s3_state && rg_s3_m_csr_value[32] ;
  assign csr_regfile$EN_push_mstatus =
	     WILL_FIRE_RL_rl_run &&
	     (rg_s2_state != 3'd1 && rg_s2_state != 3'd2 &&
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d99 ||
	      icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d171) ;
  assign csr_regfile$EN_pop_mstatus =
	     WILL_FIRE_RL_rl_run &&
	     rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d236 ;
  assign csr_regfile$EN_write_mepc =
	     WILL_FIRE_RL_rl_run &&
	     (rg_s2_state != 3'd1 && rg_s2_state != 3'd2 &&
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d99 ||
	      icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d171) ;
  assign csr_regfile$EN_write_mcause =
	     WILL_FIRE_RL_rl_run &&
	     (rg_s2_state != 3'd1 && rg_s2_state != 3'd2 &&
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d99 ||
	      icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d171) ;
  assign csr_regfile$EN_write_mbadaddr =
	     WILL_FIRE_RL_rl_run &&
	     (rg_s2_state != 3'd1 && rg_s2_state != 3'd2 &&
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d99 ||
	      icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d171) ;
  assign csr_regfile$EN_incr_instret =
	     WILL_FIRE_RL_rl_run &&
	     (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	     icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d398 ;

  // submodule dcache
  assign dcache$cable_ifc_exc_code_result_exc_code =
	     dcache_cable_ifc_exc_code_result_exc_code ;
  assign dcache$cable_ifc_exc_result_exc = dcache_cable_ifc_exc_result_exc ;
  assign dcache$cable_ifc_valid_result_valid =
	     dcache_cable_ifc_valid_result_valid ;
  assign dcache$cable_ifc_word_result_word =
	     dcache_cable_ifc_word_result_word ;
  assign dcache$req_addr = riscv$do_riscv[99:68] ;
  assign dcache$req_f3 = riscv$do_riscv[35:33] ;
  assign dcache$req_op = riscv$do_riscv[143:141] != 3'd4 ;
  assign dcache$req_st_value = riscv$do_riscv[67:36] ;
  assign dcache$EN_req =
	     WILL_FIRE_RL_rl_run &&
	     rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d416 ;

  // submodule icache
  assign icache$cable_ifc_exc_code_result_exc_code =
	     icache_cable_ifc_exc_code_result_exc_code ;
  assign icache$cable_ifc_exc_result_exc = icache_cable_ifc_exc_result_exc ;
  assign icache$cable_ifc_instr_result_instr =
	     icache_cable_ifc_instr_result_instr ;
  assign icache$cable_ifc_pc_result_pc = icache_cable_ifc_pc_result_pc ;
  assign icache$cable_ifc_valid_result_valid =
	     icache_cable_ifc_valid_result_valid ;
  assign icache$req_addr =
	     MUX_icache$req_1__SEL_1 ?
	       MUX_icache$req_1__VAL_1 :
	       rg_resume_pc ;
  assign icache$EN_req =
	     WILL_FIRE_RL_rl_run &&
	     NOT_rg_s2_state_7_EQ_1_8_0_AND_NOT_rg_s2_state_ETC___d133 ||
	     WILL_FIRE_RL_rl_pre_run ;

  // submodule mbox
  assign mbox$req_f3 = riscv$do_riscv[35:33] ;
  assign mbox$req_v1 = riscv$do_riscv[99:68] ;
  assign mbox$req_v2 = riscv$do_riscv[67:36] ;
  assign mbox$set_verbosity_verbosity = 4'h0 ;
  assign mbox$EN_set_verbosity = 1'b0 ;
  assign mbox$EN_req_reset = 1'b0 ;
  assign mbox$EN_rsp_reset = 1'b0 ;
  assign mbox$EN_req =
	     WILL_FIRE_RL_rl_run &&
	     (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	     icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d426 ;

  // submodule regfile
  assign regfile$ADDR_1 =
	     WILL_FIRE_RL_rl_run ?
	       icache$instr[24:20] :
	       control_request_put[36:32] ;
  assign regfile$ADDR_2 = icache$instr[19:15] ;
  assign regfile$ADDR_3 = 5'h0 ;
  assign regfile$ADDR_4 = 5'h0 ;
  assign regfile$ADDR_5 = 5'h0 ;
  always@(MUX_regfile$upd_1__SEL_1 or
	  rg_s3_rd or
	  MUX_regfile$upd_1__SEL_2 or
	  control_request_put or WILL_FIRE_RL_rl_reset)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_regfile$upd_1__SEL_1: regfile$ADDR_IN = rg_s3_rd;
      MUX_regfile$upd_1__SEL_2: regfile$ADDR_IN = control_request_put[36:32];
      WILL_FIRE_RL_rl_reset: regfile$ADDR_IN = 5'd0;
      default: regfile$ADDR_IN = 5'b01010 /* unspecified value */ ;
    endcase
  end
  always@(MUX_regfile$upd_1__SEL_1 or
	  rg_s3_rdval or
	  MUX_regfile$upd_1__SEL_2 or
	  control_request_put or WILL_FIRE_RL_rl_reset)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_regfile$upd_1__SEL_1: regfile$D_IN = rg_s3_rdval;
      MUX_regfile$upd_1__SEL_2: regfile$D_IN = control_request_put[31:0];
      WILL_FIRE_RL_rl_reset: regfile$D_IN = 32'd0;
      default: regfile$D_IN = 32'hAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign regfile$WE =
	     WILL_FIRE_RL_rl_run && rg_s3_state && rg_s3_rd != 5'd0 ||
	     EN_control_request_put &&
	     control_request_put_BITS_69_TO_68_43_EQ_0_44_A_ETC___d587 ||
	     WILL_FIRE_RL_rl_reset ;

  // submodule riscv
  assign riscv$do_riscv_instr = icache$instr ;
  assign riscv$do_riscv_pc = icache$pc ;
  assign riscv$do_riscv_v1 = v_bypassed1__h5820 ;
  assign riscv$do_riscv_v2 = v_bypassed2__h5823 ;
  assign riscv$do_riscv_v_csr =
	     { csr_regfile$mav_read[32],
	       csr_regfile$mav_read[32] ? value__h6319 : 32'hAAAAAAAA } ;
  assign riscv$do_riscv_verbosity = cfg_verbosity ;
  assign riscv$EN_reset_start = CAN_FIRE_RL_rl_reset ;
  assign riscv$EN_reset_complete = EN_reset_complete ;
  assign riscv$EN_do_riscv = MUX_csr_regfile$mav_read_1__SEL_1 ;

  // remaining internal signals
  assign IF_NOT_control_request_put_BIT_67_45_46_AND_co_ETC___d648 =
	     (!control_request_put[67] &&
	      control_request_put[66:64] == 3'd2) ?
	       control_request_put[39:32] != 8'hA0 &&
	       control_request_put[39:32] != 8'hA1 &&
	       control_request_put[39:32] != 8'hA2 &&
	       control_request_put[39:32] != 8'hA3 &&
	       control_request_put[39:32] != 8'hA4 &&
	       control_request_put[39:32] != 8'hA5 &&
	       control_request_put[39:32] != 8'hA6 &&
	       control_request_put[39:32] != 8'hA7 &&
	       control_request_put[39:32] != 8'h01 &&
	       (control_request_put_BITS_39_TO_32_50_ULT_0x80___d458 ||
		!control_request_put_BITS_39_TO_32_50_ULE_0x9F___d460) :
	       !control_request_put[67] ||
	       control_request_put[66:64] != 3'd2 ||
	       control_request_put[39:32] != 8'hA0 &&
	       control_request_put[39:32] != 8'hA1 &&
	       (control_request_put_BITS_39_TO_32_50_ULT_0x80___d458 ||
		!control_request_put_BITS_39_TO_32_50_ULE_0x9F___d460) &&
	       control_request_put[39:32] != 8'h01 ;
  assign IF_NOT_icache_valid__02_29_OR_NOT_IF_rg_s2_sta_ETC___d435 =
	     (!icache$valid ||
	      IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 !=
	      3'd1) ?
	       IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 :
	       (icache$exc ?
		  3'd1 :
		  IF_icache_instr__11_BITS_6_TO_0_12_EQ_0b111001_ETC___d433) ;
  assign IF_icache_instr__11_BITS_6_TO_0_12_EQ_0b111001_ETC___d160 =
	     icache_instr__11_BITS_6_TO_0_12_EQ_0b1110011_1_ETC___d153 ?
	       csr_regfile$read_mepc :
	       ((riscv$do_riscv[143:141] == 3'd0) ?
		  pc__h6586 :
		  riscv$do_riscv[136:105]) ;
  assign IF_icache_instr__11_BITS_6_TO_0_12_EQ_0b111001_ETC___d186 =
	     icache_instr__11_BITS_6_TO_0_12_EQ_0b1110011_1_ETC___d162 ?
	       cause__h4788 :
	       (icache_instr__11_BITS_6_TO_0_12_EQ_0b1110011_1_ETC___d163 ?
		  32'd3 :
		  cause__h6691) ;
  assign IF_icache_instr__11_BITS_6_TO_0_12_EQ_0b111001_ETC___d433 =
	     (icache$instr[6:0] == 7'b1110011 &&
	      icache$instr[14:12] == 3'b0 &&
	      icache$instr[11:7] == 5'd0 &&
	      icache$instr[19:15] == 5'd0 &&
	      (icache$instr[31:20] == 12'b0 ||
	       icache$instr[31:20] == 12'b001100000101 ||
	       icache$instr[31:20] == 12'b001100000110 ||
	       icache$instr[31:20] == 12'b000000000001 ||
	       icache$instr[31:20] == 12'b000100000000 ||
	       icache$instr[31:20] == 12'b000100000010)) ?
	       IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 :
	       ((riscv$do_riscv[143:141] == 3'd0) ?
		  3'd1 :
		  riscv$do_riscv[143:141]) ;
  assign IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 =
	     (rg_s2_state == 3'd1) ?
	       rg_s2_state :
	       ((rg_s2_state == 3'd2 || rg_s2_state == 3'd4 && dcache$valid ||
		 rg_s2_state == 3'd5 && dcache$valid ||
		 rg_s2_state == 3'd3 && mbox$valid) ?
		  3'd1 :
		  rg_s2_state) ;
  assign IF_rg_s2_state_7_EQ_2_0_AND_rg_s2_m_csr_value__ETC___d368 =
	     (rg_s2_state == 3'd2 && rg_s2_m_csr_value[32] &&
	      rg_s2_csr_addr == icache$instr[31:20]) ?
	       rg_s2_m_csr_value[31:0] :
	       IF_rg_s3_state_8_AND_rg_s3_m_csr_value_8_BIT_3_ETC___d367 ;
  assign IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200 =
	     (rg_s2_state == 3'd4 && dcache$valid) ?
	       !dcache$exc :
	       rg_s2_state != 3'd5 || !dcache$valid || !dcache$exc ;
  assign IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d293 =
	     IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200 &&
	     icache$valid &&
	     IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 ==
	     3'd1 &&
	     !icache$exc &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d290 ;
  assign IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d297 =
	     (rg_s2_state == 3'd4 && dcache$valid) ?
	       dcache$exc || rg_s2_rd == 5'd0 :
	       rg_s2_state != 3'd3 || !mbox$valid || rg_s2_rd == 5'd0 ;
  assign IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d311 =
	     (rg_s2_state == 3'd4 && dcache$valid) ?
	       !dcache$exc && rg_s2_rd != 5'd0 :
	       rg_s2_state == 3'd3 && mbox$valid && rg_s2_rd != 5'd0 ;
  assign IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d85 =
	     (rg_s2_state == 3'd4 && dcache$valid) ?
	       !dcache$exc :
	       rg_s2_state == 3'd3 && mbox$valid ;
  assign IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d99 =
	     (rg_s2_state == 3'd4 && dcache$valid) ?
	       dcache$exc :
	       rg_s2_state == 3'd5 && dcache$valid && dcache$exc ;
  assign IF_rg_s3_state_8_AND_NOT_rg_s3_rd_9_EQ_0_0_3_4_ETC___d342 =
	     (rg_s3_state && rg_s3_rd != 5'd0 &&
	      rg_s3_rd == icache$instr[19:15]) ?
	       rg_s3_rdval :
	       regfile$D_OUT_2 ;
  assign IF_rg_s3_state_8_AND_NOT_rg_s3_rd_9_EQ_0_0_3_4_ETC___d350 =
	     (rg_s3_state && rg_s3_rd != 5'd0 &&
	      rg_s3_rd == icache$instr[24:20]) ?
	       rg_s3_rdval :
	       regfile$D_OUT_1 ;
  assign IF_rg_s3_state_8_AND_rg_s3_m_csr_value_8_BIT_3_ETC___d367 =
	     (rg_s3_state && rg_s3_m_csr_value[32] &&
	      rg_s3_csr_addr == icache$instr[31:20]) ?
	       rg_s3_m_csr_value[31:0] :
	       csr_regfile$mav_read[31:0] ;
  assign NOT_cfg_verbosity_read_ULE_1_4_5_AND_NOT_rg_s2_ETC___d314 =
	     NOT_cfg_verbosity_read_ULE_1_4___d15 && rg_s2_state != 3'd1 &&
	     ((rg_s2_state == 3'd2) ?
		rg_s2_rd != 5'd0 :
		IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d311) ;
  assign NOT_cfg_verbosity_read_ULE_1_4_5_AND_rg_s2_sta_ETC___d300 =
	     NOT_cfg_verbosity_read_ULE_1_4___d15 &&
	     (rg_s2_state == 3'd1 ||
	      ((rg_s2_state == 3'd2) ?
		 rg_s2_rd == 5'd0 :
		 IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d297)) ;
  assign NOT_cfg_verbosity_read_ULE_1_4___d15 = cfg_verbosity > 4'd1 ;
  assign NOT_control_request_put_BITS_39_TO_32_50_EQ_0x_ETC___d463 =
	     control_request_put[39:32] != 8'h01 &&
	     !control_request_put_BITS_39_TO_32_50_ULT_0x80___d458 &&
	     control_request_put_BITS_39_TO_32_50_ULE_0x9F___d460 &&
	     cfg_verbosity != 4'd0 ;
  assign NOT_icache_exc__10_06_AND_NOT_icache_instr__11_ETC___d359 =
	     !icache$exc &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d212 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d215 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130 &&
	     NOT_cfg_verbosity_read_ULE_1_4___d15 &&
	     csr_regfile$mav_read[32] ;
  assign NOT_icache_exc__10_06_AND_NOT_icache_instr__11_ETC___d376 =
	     !icache$exc &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d212 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d215 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130 &&
	     NOT_cfg_verbosity_read_ULE_1_4___d15 &&
	     !csr_regfile$mav_read[32] ;
  assign NOT_icache_exc__10_06_AND_NOT_icache_instr__11_ETC___d387 =
	     !icache$exc &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d212 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d215 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130 &&
	     riscv$do_riscv[143:141] == 3'd0 &&
	     riscv$do_riscv[140:137] == 4'h2 ;
  assign NOT_icache_exc__10_06_AND_NOT_icache_instr__11_ETC___d414 =
	     !icache$exc &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d212 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d215 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130 &&
	     (riscv$do_riscv[143:141] == 3'd4 ||
	      riscv$do_riscv[143:141] == 3'd5) ;
  assign NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130 =
	     icache$instr[6:0] != 7'b1110011 || icache$instr[14:12] != 3'b0 ||
	     icache$instr[11:7] != 5'd0 ||
	     icache$instr[19:15] != 5'd0 ||
	     icache$instr[31:20] != 12'b000100000010 ;
  assign NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165 =
	     icache$instr[6:0] != 7'b1110011 || icache$instr[14:12] != 3'b0 ||
	     icache$instr[11:7] != 5'd0 ||
	     icache$instr[19:15] != 5'd0 ||
	     icache$instr[31:20] != 12'b000100000000 ;
  assign NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d212 =
	     icache$instr[6:0] != 7'b1110011 || icache$instr[14:12] != 3'b0 ||
	     icache$instr[11:7] != 5'd0 ||
	     icache$instr[19:15] != 5'd0 ||
	     icache$instr[31:20] != 12'b0 &&
	     icache$instr[31:20] != 12'b001100000101 &&
	     icache$instr[31:20] != 12'b001100000110 ;
  assign NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d215 =
	     icache$instr[6:0] != 7'b1110011 || icache$instr[14:12] != 3'b0 ||
	     icache$instr[11:7] != 5'd0 ||
	     icache$instr[19:15] != 5'd0 ||
	     icache$instr[31:20] != 12'b000000000001 ;
  assign NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d255 =
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d212 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d215 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130 &&
	     NOT_cfg_verbosity_read_ULE_1_4___d15 &&
	     (!rg_s3_state || rg_s3_rd == 5'd0) ;
  assign NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d263 =
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d212 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d215 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130 &&
	     NOT_cfg_verbosity_read_ULE_1_4___d15 &&
	     rg_s3_state &&
	     rg_s3_rd != 5'd0 ;
  assign NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d273 =
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d212 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d215 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130 &&
	     NOT_cfg_verbosity_read_ULE_1_4___d15 &&
	     (!rg_s3_state || !rg_s3_m_csr_value[32]) ;
  assign NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d281 =
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d212 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d215 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130 &&
	     NOT_cfg_verbosity_read_ULE_1_4___d15 &&
	     rg_s3_state &&
	     rg_s3_m_csr_value[32] ;
  assign NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d290 =
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d212 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d215 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130 &&
	     NOT_cfg_verbosity_read_ULE_1_4___d15 &&
	     rg_s2_state != 3'd1 &&
	     rg_s2_state != 3'd2 &&
	     IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d99 ;
  assign NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d326 =
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d212 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d215 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130 &&
	     NOT_cfg_verbosity_read_ULE_1_4___d15 &&
	     (rg_s2_state != 3'd2 || !rg_s2_m_csr_value[32]) ;
  assign NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d334 =
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d212 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d215 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130 &&
	     NOT_cfg_verbosity_read_ULE_1_4___d15 &&
	     rg_s2_state == 3'd2 &&
	     rg_s2_m_csr_value[32] ;
  assign NOT_rg_s2_state_7_EQ_1_8_0_AND_IF_rg_s2_state__ETC___d339 =
	     rg_s2_state != 3'd1 &&
	     ((rg_s2_state == 3'd2) ?
		rg_s2_rd != 5'd0 :
		IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d311) &&
	     rg_s2_rd == icache$instr[19:15] ;
  assign NOT_rg_s2_state_7_EQ_1_8_0_AND_IF_rg_s2_state__ETC___d347 =
	     rg_s2_state != 3'd1 &&
	     ((rg_s2_state == 3'd2) ?
		rg_s2_rd != 5'd0 :
		IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d311) &&
	     rg_s2_rd == icache$instr[24:20] ;
  assign NOT_rg_s2_state_7_EQ_1_8_0_AND_NOT_rg_s2_state_ETC___d133 =
	     rg_s2_state != 3'd1 && rg_s2_state != 3'd2 &&
	     IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d99 ||
	     icache$valid &&
	     IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 ==
	     3'd1 &&
	     (icache$exc ||
	      NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130) ;
  assign NOT_rg_s2_state_7_EQ_1_8_0_AND_NOT_rg_s2_state_ETC___d146 =
	     rg_s2_state != 3'd1 && rg_s2_state != 3'd2 &&
	     IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d99 ||
	     icache$exc ||
	     icache$instr[6:0] == 7'b1110011 && icache$instr[14:12] == 3'b0 &&
	     icache$instr[11:7] == 5'd0 &&
	     icache$instr[19:15] == 5'd0 &&
	     (icache$instr[31:20] == 12'b0 ||
	      icache$instr[31:20] == 12'b001100000101 ||
	      icache$instr[31:20] == 12'b001100000110 ||
	      icache$instr[31:20] == 12'b000000000001) ;
  assign NOT_rg_s2_state_7_EQ_1_8_0_AND_NOT_rg_s2_state_ETC___d198 =
	     rg_s2_state != 3'd1 && rg_s2_state != 3'd2 &&
	     IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d99 &&
	     dcache$exc_code == 4'h3 &&
	     csr_regfile$read_mstatus[2:1] == 2'b11 ;
  assign NOT_rg_s2_state_7_EQ_1_8_0_AND_NOT_rg_s2_state_ETC___d84 =
	     rg_s2_state != 3'd1 && rg_s2_state != 3'd2 &&
	     (rg_s2_state != 3'd4 || !dcache$valid) &&
	     (rg_s2_state != 3'd5 || !dcache$valid) &&
	     (rg_s2_state != 3'd3 || !mbox$valid) &&
	     NOT_cfg_verbosity_read_ULE_1_4___d15 ;
  assign cause__h3983 = { 28'd0, dcache$exc_code } ;
  assign cause__h4364 = { 28'd0, icache$exc_code } ;
  assign cause__h4788 = { 30'd2, csr_regfile$read_mstatus[2:1] } ;
  assign cause__h6691 = { 28'd0, riscv$do_riscv[140:137] } ;
  assign control_request_put_BITS_39_TO_32_50_ULE_0x9F___d460 =
	     control_request_put[39:32] <= 8'h9F ;
  assign control_request_put_BITS_39_TO_32_50_ULT_0x80___d458 =
	     control_request_put[39:32] < 8'h80 ;
  assign control_request_put_BITS_69_TO_68_43_EQ_0_44_A_ETC___d587 =
	     control_request_put[69:68] == 2'd0 && control_request_put[67] &&
	     control_request_put[66:64] == 3'd2 &&
	     !control_request_put_BITS_39_TO_32_50_ULT_0x80___d458 &&
	     control_request_put_BITS_39_TO_32_50_ULE_0x9F___d460 ;
  assign control_request_put_BIT_67_45_AND_control_requ_ETC___d588 =
	     control_request_put[67] && control_request_put[66:64] == 3'd2 &&
	     !control_request_put_BITS_39_TO_32_50_ULT_0x80___d458 &&
	     control_request_put_BITS_39_TO_32_50_ULE_0x9F___d460 &&
	     cfg_verbosity != 4'd0 ;
  assign fabric_rsp_word__h10391 =
	     (control_request_put[69:68] == 2'd0) ?
	       y_avValue_snd__h10304 :
	       control_request_put[63:32] ;
  assign feedback_s2_regvalue__h3727 =
	     (rg_s2_state == 3'd2) ?
	       rg_s2_rdval :
	       y_avValue_snd_snd_snd_snd_snd_snd_fst__h3770 ;
  assign icache_exc__10_AND_icache_exc_code__80_EQ_0x3__ETC___d225 =
	     icache$exc && icache$exc_code == 4'h3 &&
	     csr_regfile$read_mstatus[2:1] == 2'b11 ||
	     !icache$exc &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d212 &&
	     icache_instr__11_BITS_6_TO_0_12_EQ_0b1110011_1_ETC___d222 ;
  assign icache_instr__11_BITS_6_TO_0_12_EQ_0b1110011_1_ETC___d153 =
	     icache$instr[6:0] == 7'b1110011 && icache$instr[14:12] == 3'b0 &&
	     icache$instr[11:7] == 5'd0 &&
	     icache$instr[19:15] == 5'd0 &&
	     icache$instr[31:20] == 12'b000100000000 ;
  assign icache_instr__11_BITS_6_TO_0_12_EQ_0b1110011_1_ETC___d162 =
	     icache$instr[6:0] == 7'b1110011 && icache$instr[14:12] == 3'b0 &&
	     icache$instr[11:7] == 5'd0 &&
	     icache$instr[19:15] == 5'd0 &&
	     (icache$instr[31:20] == 12'b0 ||
	      icache$instr[31:20] == 12'b001100000101 ||
	      icache$instr[31:20] == 12'b001100000110) ;
  assign icache_instr__11_BITS_6_TO_0_12_EQ_0b1110011_1_ETC___d163 =
	     icache$instr[6:0] == 7'b1110011 && icache$instr[14:12] == 3'b0 &&
	     icache$instr[11:7] == 5'd0 &&
	     icache$instr[19:15] == 5'd0 &&
	     icache$instr[31:20] == 12'b000000000001 ;
  assign icache_instr__11_BITS_6_TO_0_12_EQ_0b1110011_1_ETC___d222 =
	     icache_instr__11_BITS_6_TO_0_12_EQ_0b1110011_1_ETC___d163 &&
	     csr_regfile$read_mstatus[2:1] == 2'b11 ||
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d215 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130 &&
	     riscv$do_riscv[143:141] == 3'd0 &&
	     riscv$do_riscv[140:137] == 4'h3 &&
	     csr_regfile$read_mstatus[2:1] == 2'b11 ;
  assign icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d171 =
	     icache$valid &&
	     IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 ==
	     3'd1 &&
	     (icache$exc ||
	      icache_instr__11_BITS_6_TO_0_12_EQ_0b1110011_1_ETC___d162 ||
	      icache_instr__11_BITS_6_TO_0_12_EQ_0b1110011_1_ETC___d163 ||
	      NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165 &&
	      NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130 &&
	      riscv$do_riscv[143:141] == 3'd0) ;
  assign icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248 =
	     icache$valid &&
	     IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 ==
	     3'd1 &&
	     !icache$exc &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d212 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d215 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130 &&
	     NOT_cfg_verbosity_read_ULE_1_4___d15 ;
  assign icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d306 =
	     icache$valid &&
	     IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 ==
	     3'd1 &&
	     !icache$exc &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d212 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d215 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130 &&
	     NOT_cfg_verbosity_read_ULE_1_4_5_AND_rg_s2_sta_ETC___d300 ;
  assign icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d320 =
	     icache$valid &&
	     IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 ==
	     3'd1 &&
	     !icache$exc &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d212 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d215 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130 &&
	     NOT_cfg_verbosity_read_ULE_1_4_5_AND_NOT_rg_s2_ETC___d314 ;
  assign icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d398 =
	     icache$valid &&
	     IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 ==
	     3'd1 &&
	     !icache$exc &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d212 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d215 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130 &&
	     riscv$do_riscv[143:141] != 3'd0 ;
  assign icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d426 =
	     icache$valid &&
	     IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 ==
	     3'd1 &&
	     !icache$exc &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d212 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d215 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130 &&
	     riscv$do_riscv[143:141] == 3'd3 ;
  assign pc__h6586 =
	     csr_regfile$read_mtvec +
	     { 24'd0, csr_regfile$read_mstatus[2:1], 6'b0 } ;
  assign rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d227 =
	     (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	     icache$valid &&
	     IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 ==
	     3'd1 &&
	     icache_exc__10_AND_icache_exc_code__80_EQ_0x3__ETC___d225 ;
  assign rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d233 =
	     (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	     (!icache$valid ||
	      IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 !=
	      3'd1) &&
	     NOT_cfg_verbosity_read_ULE_1_4___d15 ;
  assign rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d236 =
	     (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	     icache$valid &&
	     IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 ==
	     3'd1 &&
	     !icache$exc &&
	     icache_instr__11_BITS_6_TO_0_12_EQ_0b1110011_1_ETC___d153 ;
  assign rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d242 =
	     (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	     icache$valid &&
	     IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 ==
	     3'd1 &&
	     !icache$exc &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d212 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d215 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d165 &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d130 ;
  assign rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d258 =
	     (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	     icache$valid &&
	     IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 ==
	     3'd1 &&
	     !icache$exc &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d255 ;
  assign rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d266 =
	     (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	     icache$valid &&
	     IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 ==
	     3'd1 &&
	     !icache$exc &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d263 ;
  assign rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d276 =
	     (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	     icache$valid &&
	     IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 ==
	     3'd1 &&
	     !icache$exc &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d273 ;
  assign rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d284 =
	     (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	     icache$valid &&
	     IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 ==
	     3'd1 &&
	     !icache$exc &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d281 ;
  assign rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d329 =
	     (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	     icache$valid &&
	     IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 ==
	     3'd1 &&
	     !icache$exc &&
	     NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d326 ;
  assign rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d361 =
	     (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	     icache$valid &&
	     IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 ==
	     3'd1 &&
	     NOT_icache_exc__10_06_AND_NOT_icache_instr__11_ETC___d359 ;
  assign rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d378 =
	     (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	     icache$valid &&
	     IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 ==
	     3'd1 &&
	     NOT_icache_exc__10_06_AND_NOT_icache_instr__11_ETC___d376 ;
  assign rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d389 =
	     (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	     icache$valid &&
	     IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 ==
	     3'd1 &&
	     NOT_icache_exc__10_06_AND_NOT_icache_instr__11_ETC___d387 ;
  assign rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d416 =
	     (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	      IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	     icache$valid &&
	     IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 ==
	     3'd1 &&
	     NOT_icache_exc__10_06_AND_NOT_icache_instr__11_ETC___d414 ;
  assign rsp_word___1__h9396 =
	     csr_regfile$mav_read[32] ?
	       csr_regfile$mav_read[31:0] :
	       32'hAAAAAAAA ;
  assign v_bypassed1__h5820 =
	     NOT_rg_s2_state_7_EQ_1_8_0_AND_IF_rg_s2_state__ETC___d339 ?
	       feedback_s2_regvalue__h3727 :
	       IF_rg_s3_state_8_AND_NOT_rg_s3_rd_9_EQ_0_0_3_4_ETC___d342 ;
  assign v_bypassed2__h5823 =
	     NOT_rg_s2_state_7_EQ_1_8_0_AND_IF_rg_s2_state__ETC___d347 ?
	       feedback_s2_regvalue__h3727 :
	       IF_rg_s3_state_8_AND_NOT_rg_s3_rd_9_EQ_0_0_3_4_ETC___d350 ;
  assign value__h6319 =
	     csr_regfile$mav_read[32] ?
	       IF_rg_s2_state_7_EQ_2_0_AND_rg_s2_m_csr_value__ETC___d368 :
	       csr_regfile$mav_read[31:0] ;
  assign y_avValue_snd__h10304 =
	     (!control_request_put[67] &&
	      control_request_put[66:64] == 3'd2) ?
	       y_avValue_snd__h10287 :
	       control_request_put[63:32] ;
  assign y_avValue_snd__h8250 = { 28'd0, cfg_verbosity } ;
  assign y_avValue_snd__h8255 =
	     (!control_request_put_BITS_39_TO_32_50_ULT_0x80___d458 &&
	      control_request_put_BITS_39_TO_32_50_ULE_0x9F___d460) ?
	       regfile$D_OUT_1 :
	       control_request_put[63:32] ;
  assign y_avValue_snd__h9605 = { 29'd0, rg_stop_reason } ;
  assign y_avValue_snd_snd_fst__h3598 =
	     (rg_s2_state == 3'd4 && dcache$valid) ?
	       dcache$word :
	       y_avValue_snd_snd_fst__h3604 ;
  assign y_avValue_snd_snd_fst__h3604 =
	     (rg_s2_state == 3'd5 && dcache$valid) ?
	       rg_s2_rdval :
	       y_avValue_snd_snd_fst__h3610 ;
  assign y_avValue_snd_snd_fst__h3610 =
	     (rg_s2_state == 3'd3 && mbox$valid) ? mbox$word : rg_s2_rdval ;
  assign y_avValue_snd_snd_snd_snd_snd_snd_fst__h3770 =
	     ((rg_s2_state == 3'd4 || rg_s2_state == 3'd5) && dcache$valid) ?
	       dcache$word :
	       mbox$word ;
  always@(control_request_put or
	  y_avValue_snd__h8255 or
	  y_avValue_snd__h8250 or
	  rg_resume_pc or y_avValue_snd__h9605 or rsp_word___1__h9396)
  begin
    case (control_request_put[39:32])
      8'h01: y_avValue_snd__h10287 = y_avValue_snd__h8250;
      8'hA0: y_avValue_snd__h10287 = rg_resume_pc;
      8'hA1: y_avValue_snd__h10287 = y_avValue_snd__h9605;
      8'hA2, 8'hA3, 8'hA4, 8'hA5, 8'hA6, 8'hA7:
	  y_avValue_snd__h10287 = rsp_word___1__h9396;
      default: y_avValue_snd__h10287 = y_avValue_snd__h8255;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	f_fabric_rsps_rv <= `BSV_ASSIGNMENT_DELAY 40'h2AAAAAAAAA;
	rg_state <= `BSV_ASSIGNMENT_DELAY 3'd1;
      end
    else
      begin
        if (cfg_verbosity$EN)
	  cfg_verbosity <= `BSV_ASSIGNMENT_DELAY cfg_verbosity$D_IN;
	if (f_fabric_rsps_rv$EN)
	  f_fabric_rsps_rv <= `BSV_ASSIGNMENT_DELAY f_fabric_rsps_rv$D_IN;
	if (rg_state$EN) rg_state <= `BSV_ASSIGNMENT_DELAY rg_state$D_IN;
      end
    if (rg_resume_pc$EN)
      rg_resume_pc <= `BSV_ASSIGNMENT_DELAY rg_resume_pc$D_IN;
    if (rg_s2_csr_addr$EN)
      rg_s2_csr_addr <= `BSV_ASSIGNMENT_DELAY rg_s2_csr_addr$D_IN;
    if (rg_s2_m_csr_value$EN)
      rg_s2_m_csr_value <= `BSV_ASSIGNMENT_DELAY rg_s2_m_csr_value$D_IN;
    if (rg_s2_rd$EN) rg_s2_rd <= `BSV_ASSIGNMENT_DELAY rg_s2_rd$D_IN;
    if (rg_s2_rdval$EN) rg_s2_rdval <= `BSV_ASSIGNMENT_DELAY rg_s2_rdval$D_IN;
    if (rg_s2_state$EN) rg_s2_state <= `BSV_ASSIGNMENT_DELAY rg_s2_state$D_IN;
    if (rg_s3_csr_addr$EN)
      rg_s3_csr_addr <= `BSV_ASSIGNMENT_DELAY rg_s3_csr_addr$D_IN;
    if (rg_s3_m_csr_value$EN)
      rg_s3_m_csr_value <= `BSV_ASSIGNMENT_DELAY rg_s3_m_csr_value$D_IN;
    if (rg_s3_rd$EN) rg_s3_rd <= `BSV_ASSIGNMENT_DELAY rg_s3_rd$D_IN;
    if (rg_s3_rdval$EN) rg_s3_rdval <= `BSV_ASSIGNMENT_DELAY rg_s3_rdval$D_IN;
    if (rg_s3_state$EN) rg_s3_state <= `BSV_ASSIGNMENT_DELAY rg_s3_state$D_IN;
    if (rg_stop_reason$EN)
      rg_stop_reason <= `BSV_ASSIGNMENT_DELAY rg_stop_reason$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cfg_verbosity = 4'hA;
    f_fabric_rsps_rv = 40'hAAAAAAAAAA;
    rg_resume_pc = 32'hAAAAAAAA;
    rg_s2_csr_addr = 12'hAAA;
    rg_s2_m_csr_value = 33'h0AAAAAAAA;
    rg_s2_rd = 5'h0A;
    rg_s2_rdval = 32'hAAAAAAAA;
    rg_s2_state = 3'h2;
    rg_s3_csr_addr = 12'hAAA;
    rg_s3_m_csr_value = 33'h0AAAAAAAA;
    rg_s3_rd = 5'h0A;
    rg_s3_rdval = 32'hAAAAAAAA;
    rg_s3_state = 1'h0;
    rg_state = 3'h2;
    rg_stop_reason = 3'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_reset_complete && cfg_verbosity != 4'd0)
	begin
	  v__h7478 = $stime;
	  #0;
	end
    v__h7472 = v__h7478 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_reset_complete && cfg_verbosity != 4'd0)
	$display("%0d: CPU.m_reset_complete", v__h7472);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'h01 &&
	  cfg_verbosity != 4'd0)
	begin
	  v__h8003 = $stime;
	  #0;
	end
    v__h7997 = v__h8003 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'h01 &&
	  cfg_verbosity != 4'd0)
	$display("%0d: CPU.rl_handle_control_req: read verbosity => %0d",
		 v__h7997,
		 cfg_verbosity);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  NOT_control_request_put_BITS_39_TO_32_50_EQ_0x_ETC___d463)
	begin
	  v__h8133 = $stime;
	  #0;
	end
    v__h8127 = v__h8133 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  NOT_control_request_put_BITS_39_TO_32_50_EQ_0x_ETC___d463)
	$display("%0d: CPU.rl_handle_control_req: Read reg %0d => 0x%0h",
		 v__h8127,
		 control_request_put[36:32],
		 regfile$D_OUT_1);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA0 &&
	  cfg_verbosity != 4'd0)
	begin
	  v__h8319 = $stime;
	  #0;
	end
    v__h8313 = v__h8319 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA0 &&
	  cfg_verbosity != 4'd0)
	$display("%0d: CPU.rl_handle_control_req: Read PC => 0x%0h",
		 v__h8313,
		 rg_resume_pc);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA1 &&
	  cfg_verbosity != 4'd0)
	begin
	  v__h8432 = $stime;
	  #0;
	end
    v__h8426 = v__h8432 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA1 &&
	  cfg_verbosity != 4'd0)
	$write("%0d: CPU.rl_handle_control_req: read stop reason => ",
	       v__h8426);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA1 &&
	  cfg_verbosity != 4'd0 &&
	  rg_stop_reason == 3'd0)
	$write("GDB_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA1 &&
	  cfg_verbosity != 4'd0 &&
	  rg_stop_reason == 3'd1)
	$write("GDB_HUP");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA1 &&
	  cfg_verbosity != 4'd0 &&
	  rg_stop_reason == 3'd2)
	$write("GDB_INT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA1 &&
	  cfg_verbosity != 4'd0 &&
	  rg_stop_reason == 3'd3)
	$write("GDB_QUIT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA1 &&
	  cfg_verbosity != 4'd0 &&
	  rg_stop_reason == 3'd4)
	$write("GDB_ILL");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA1 &&
	  cfg_verbosity != 4'd0 &&
	  rg_stop_reason != 3'd0 &&
	  rg_stop_reason != 3'd1 &&
	  rg_stop_reason != 3'd2 &&
	  rg_stop_reason != 3'd3 &&
	  rg_stop_reason != 3'd4)
	$write("GDB_BREAK");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA1 &&
	  cfg_verbosity != 4'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA2 &&
	  cfg_verbosity != 4'd0)
	begin
	  v__h8609 = $stime;
	  #0;
	end
    v__h8603 = v__h8609 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA2 &&
	  cfg_verbosity != 4'd0)
	$display("%0d: CPU.rl_handle_control_req: read cycle_L => ",
		 v__h8603,
		 rsp_word___1__h9396);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA3 &&
	  cfg_verbosity != 4'd0)
	begin
	  v__h8774 = $stime;
	  #0;
	end
    v__h8768 = v__h8774 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA3 &&
	  cfg_verbosity != 4'd0)
	$display("%0d: CPU.rl_handle_control_req: read cycle_H => ",
		 v__h8768,
		 rsp_word___1__h9396);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA4 &&
	  cfg_verbosity != 4'd0)
	begin
	  v__h8939 = $stime;
	  #0;
	end
    v__h8933 = v__h8939 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA4 &&
	  cfg_verbosity != 4'd0)
	$display("%0d: CPU.rl_handle_control_req: read time_L => ",
		 v__h8933,
		 rsp_word___1__h9396);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA5 &&
	  cfg_verbosity != 4'd0)
	begin
	  v__h9104 = $stime;
	  #0;
	end
    v__h9098 = v__h9104 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA5 &&
	  cfg_verbosity != 4'd0)
	$display("%0d: CPU.rl_handle_control_req: read time_H => ",
		 v__h9098,
		 rsp_word___1__h9396);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA6 &&
	  cfg_verbosity != 4'd0)
	begin
	  v__h9269 = $stime;
	  #0;
	end
    v__h9263 = v__h9269 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA6 &&
	  cfg_verbosity != 4'd0)
	$display("%0d: CPU.rl_handle_control_req: read instret_L => ",
		 v__h9263,
		 rsp_word___1__h9396);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA7 &&
	  cfg_verbosity != 4'd0)
	begin
	  v__h9434 = $stime;
	  #0;
	end
    v__h9428 = v__h9434 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  !control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA7 &&
	  cfg_verbosity != 4'd0)
	$display("%0d: CPU.rl_handle_control_req: read instret_H => ",
		 v__h9428,
		 rsp_word___1__h9396);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'h01 &&
	  control_request_put[31:0] != 32'd0)
	begin
	  v__h9741 = $stime;
	  #0;
	end
    v__h9735 = v__h9741 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'h01 &&
	  control_request_put[31:0] != 32'd0)
	$display("%0d: CPU.rl_handle_control_req: setting verbosity to %0d",
		 v__h9735,
		 control_request_put[31:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  control_request_put_BIT_67_45_AND_control_requ_ETC___d588)
	begin
	  v__h9914 = $stime;
	  #0;
	end
    v__h9908 = v__h9914 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  control_request_put_BIT_67_45_AND_control_requ_ETC___d588)
	$display("%0d: CPU.rl_handle_control_req: Write reg %0d <= 0x%0h",
		 v__h9908,
		 control_request_put[36:32],
		 control_request_put[31:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA0 &&
	  cfg_verbosity != 4'd0)
	begin
	  v__h10060 = $stime;
	  #0;
	end
    v__h10054 = v__h10060 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA0 &&
	  cfg_verbosity != 4'd0)
	$display("%0d: CPU.rl_handle_control_req: Read PC <= 0x%0h",
		 v__h10054,
		 control_request_put[31:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA1 &&
	  cfg_verbosity != 4'd0)
	begin
	  v__h10194 = $stime;
	  #0;
	end
    v__h10188 = v__h10194 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] == 2'd0 &&
	  control_request_put[67] &&
	  control_request_put[66:64] == 3'd2 &&
	  control_request_put[39:32] == 8'hA1 &&
	  cfg_verbosity != 4'd0)
	$display("%0d: CPU.rl_handle_control_req: CONTINUE", v__h10188);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] != 2'd0)
	begin
	  v__h7774 = $stime;
	  #0;
	end
    v__h7768 = v__h7774 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] != 2'd0)
	$display("%0d: ERROR: CPU.rl_handle_control_req: request is not from soc_controller; ignoring",
		 v__h7768);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] != 2'd0)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] != 2'd0)
	$write("Fabric_Req { ", "initiator_id: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] != 2'd0)
	$write("'h%h", control_request_put[69:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] != 2'd0)
	$write(", ", "op: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] != 2'd0 &&
	  control_request_put[67])
	$write("FABRIC_REQ_WR");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] != 2'd0 &&
	  !control_request_put[67])
	$write("FABRIC_REQ_RD");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] != 2'd0)
	$write(", ", "size: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] != 2'd0 &&
	  control_request_put[66:64] == 3'd0)
	$write("FABRIC_REQ_8b");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] != 2'd0 &&
	  control_request_put[66:64] == 3'd1)
	$write("FABRIC_REQ_16b");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] != 2'd0 &&
	  control_request_put[66:64] == 3'd2)
	$write("FABRIC_REQ_32b");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] != 2'd0 &&
	  control_request_put[66:64] == 3'd3)
	$write("FABRIC_REQ_64b");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] != 2'd0 &&
	  control_request_put[66:64] != 3'd0 &&
	  control_request_put[66:64] != 3'd1 &&
	  control_request_put[66:64] != 3'd2 &&
	  control_request_put[66:64] != 3'd3)
	$write("FABRIC_REQ_BURST");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] != 2'd0)
	$write(", ", "addr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] != 2'd0)
	$write("'h%h", control_request_put[63:32]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] != 2'd0)
	$write(", ", "word: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] != 2'd0)
	$write("'h%h", control_request_put[31:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_control_request_put && control_request_put[69:68] != 2'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset)
	$display("================================================================");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset)
	$display("CPU: Bluespec  RISC-V  Piccolo  v1.0");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset)
	$display("Copyright (c) 2016 Bluespec, Inc. All Rights Reserved.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset)
	$display("================================================================");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset && cfg_verbosity != 4'd0)
	begin
	  v__h1759 = $stime;
	  #0;
	end
    v__h1753 = v__h1759 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset && cfg_verbosity != 4'd0)
	$display("%0d: CPU.rl_reset", v__h1753);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pre_run && cfg_verbosity != 4'd0)
	begin
	  v__h1864 = $stime;
	  #0;
	end
    v__h1858 = v__h1864 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_pre_run && cfg_verbosity != 4'd0)
	$display("%0d: CPU.rl_pre_run; PC = 0x%0h", v__h1858, rg_resume_pc);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run && NOT_cfg_verbosity_read_ULE_1_4___d15)
	begin
	  v__h1954 = $stime;
	  #0;
	end
    v__h1948 = v__h1954 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run && NOT_cfg_verbosity_read_ULE_1_4___d15)
	$display("%0d: CPU.rl_run", v__h1948);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run && rg_s3_state && rg_s3_rd == 5'd0 &&
	  NOT_cfg_verbosity_read_ULE_1_4___d15)
	$display("                            CPU.S3: Reg Write: ignored (Rd==0)");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run && rg_s3_state && rg_s3_rd != 5'd0 &&
	  NOT_cfg_verbosity_read_ULE_1_4___d15)
	$display("                            CPU.S3: Reg Write: rd %0d, rdval = 0x%0h",
		 rg_s3_rd,
		 rg_s3_rdval);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run && rg_s3_state && rg_s3_m_csr_value[32] &&
	  NOT_cfg_verbosity_read_ULE_1_4___d15)
	$display("                            CPU.S3: CSR: addr 0x%0h, val = 0x%0h",
		 rg_s3_csr_addr,
		 rg_s3_m_csr_value[31:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run && !rg_s3_state &&
	  NOT_cfg_verbosity_read_ULE_1_4___d15)
	$display("                            CPU.S3: NOOP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run && rg_s2_state == 3'd1 &&
	  NOT_cfg_verbosity_read_ULE_1_4___d15)
	$display("                    CPU.S2: NOOP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run && rg_s2_state == 3'd2 &&
	  NOT_cfg_verbosity_read_ULE_1_4___d15)
	$display("                    CPU.S2: fwd ALU out: rd %0d, rdval 0x%0h, csr_addr 0x%0h m_csr_value 0x%0h",
		 rg_s2_rd,
		 rg_s2_rdval,
		 rg_s2_csr_addr,
		 rg_s2_m_csr_value);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run && rg_s2_state == 3'd4 && dcache$valid &&
	  dcache$exc &&
	  NOT_cfg_verbosity_read_ULE_1_4___d15)
	$display("                    CPU.S2: LD exc_code 0x%0h, eaddr 0x%0h",
		 dcache$exc_code,
		 dcache$word);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run && rg_s2_state == 3'd4 && dcache$valid &&
	  !dcache$exc &&
	  NOT_cfg_verbosity_read_ULE_1_4___d15)
	$display("                    CPU.S2: LD out: rd = %0d, rdval = 0x%0h",
		 rg_s2_rd,
		 dcache$word);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run && rg_s2_state == 3'd5 && dcache$valid &&
	  dcache$exc &&
	  NOT_cfg_verbosity_read_ULE_1_4___d15)
	$display("                    CPU.S2: ST exc_code = 0x%0h",
		 dcache$exc_code,
		 dcache$word);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run && rg_s2_state == 3'd5 && dcache$valid &&
	  !dcache$exc &&
	  NOT_cfg_verbosity_read_ULE_1_4___d15)
	$display("                    CPU.S2: fwd ST out");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run && rg_s2_state == 3'd3 && mbox$valid &&
	  NOT_cfg_verbosity_read_ULE_1_4___d15)
	$display("                    CPU.S2: fwd MBox out: rd = %0d, rdval = 0x%0h",
		 rg_s2_rd,
		 mbox$word);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  NOT_rg_s2_state_7_EQ_1_8_0_AND_NOT_rg_s2_state_ETC___d84)
	$display("                    CPU.S2: NOOP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d233)
	$display("            CPU.S1: NOOP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$display("            CPU.S1. PC = 0x%0h, instr = 0x%0h",
		 icache$pc,
		 icache$instr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write("                ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write("Feedback_S3 { ", "valid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d258)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d266)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write(", ", "regname: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write("'h%h", rg_s3_rd);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write(", ", "regvalue: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write("'h%h", rg_s3_rdval);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write(", ", "csr_valid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d276)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d284)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write(", ", "csr_addr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write("'h%h", rg_s3_csr_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write(", ", "csr_value: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write("'h%h", rg_s3_m_csr_value[31:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write("                ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write("Feedback_S2 { ", "next_s2_state: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write("RISCV_STATUS_NONE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write(", ", "exc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d293)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write("'h%h", dcache$exc_code);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write(", ", "valid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d306)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d320)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write(", ", "regname: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write("'h%h", rg_s2_rd);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write(", ", "regvalue: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write("'h%h", feedback_s2_regvalue__h3727);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write(", ", "csr_valid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d329)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run && icache$valid &&
	  IF_rg_s2_state_7_EQ_1_8_THEN_rg_s2_state_7_ELS_ETC___d107 == 3'd1 &&
	  !icache$exc &&
	  NOT_icache_instr__11_BITS_6_TO_0_12_EQ_0b11100_ETC___d334)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write(", ", "csr_addr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write("'h%h", rg_s2_csr_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write(", ", "csr_value: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write("'h%h", rg_s2_m_csr_value[31:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$display("                rs1 0x%0h, v_rs1 0x%0h, v1 (bypassed) 0x%0h",
		 icache$instr[19:15],
		 regfile$D_OUT_2,
		 v_bypassed1__h5820);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$display("                rs2 0x%0h, v_rs2 0x%0h, v2 (bypassed) 0x%0h",
		 icache$instr[24:20],
		 regfile$D_OUT_1,
		 v_bypassed2__h5823);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write("                csr_addr 0x%0h m_csr_value (bypassed) ",
	       icache$instr[31:20]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d361)
	$write("tagged Valid ", "'h%h", value__h6319);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d378)
	$write("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  (rg_s2_state == 3'd1 || rg_s2_state == 3'd2 ||
	   IF_rg_s2_state_7_EQ_4_0_AND_dcache_valid__1_2__ETC___d200) &&
	  icache_valid__02_AND_IF_rg_s2_state_7_EQ_1_8_T_ETC___d248)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d389)
	begin
	  v__h6518 = $stime;
	  #0;
	end
    v__h6512 = v__h6518 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_run &&
	  rg_s2_state_7_EQ_1_8_OR_rg_s2_state_7_EQ_2_0_O_ETC___d389)
	$display("%0d: ERROR: CPU.fa_stage1: illegal instruction", v__h6512);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_reset_start && cfg_verbosity != 4'd0)
	begin
	  v__h7371 = $stime;
	  #0;
	end
    v__h7365 = v__h7371 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_reset_start && cfg_verbosity != 4'd0)
	$display("%0d: CPU.m_reset_start", v__h7365);
  end
  // synopsys translate_on
endmodule  // mkCPU

