// This program was cloned from: https://github.com/jiegec/fpu-wrappers
// License: MIT License

/* Generated by Yosys 0.13+37 (git sha1 675a7bd22, clang 11.0.1-2 -fPIC -Os) */

module IEEEFMA_D(clk, A, B, C, negateAB, negateC, RndMode, R);
  reg _000_;
  reg [11:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  reg _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  reg _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  reg _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  reg _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  reg _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  reg _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  reg _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  reg _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  reg _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  reg _111_;
  reg _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  reg _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  reg _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire [10:0] _139_;
  wire [10:0] _140_;
  wire [11:0] _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  reg _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  reg _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  reg _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  reg _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  reg [10:0] _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  reg [10:0] _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  reg _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  reg _222_;
  reg _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  reg _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  reg [7:0] _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  reg [7:0] _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  reg _267_;
  wire _268_;
  wire [10:0] _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire [12:0] _274_;
  wire [12:0] _275_;
  wire [12:0] _276_;
  wire [12:0] _277_;
  reg _278_;
  wire [12:0] _279_;
  wire [12:0] _280_;
  wire [12:0] _281_;
  wire [12:0] _282_;
  wire [7:0] _283_;
  wire [7:0] _284_;
  wire [7:0] _285_;
  wire [215:0] _286_;
  wire _287_;
  wire _288_;
  reg _289_;
  wire _290_;
  wire _291_;
  wire _292_;
  wire _293_;
  wire _294_;
  wire _295_;
  wire _296_;
  wire _297_;
  wire _298_;
  wire _299_;
  reg _300_;
  wire _301_;
  wire _302_;
  wire _303_;
  wire _304_;
  wire _305_;
  wire _306_;
  wire _307_;
  wire _308_;
  wire _309_;
  wire _310_;
  reg [162:0] _311_;
  wire _312_;
  wire _313_;
  wire _314_;
  wire _315_;
  wire _316_;
  wire _317_;
  wire _318_;
  wire _319_;
  wire _320_;
  wire _321_;
  reg _322_;
  wire _323_;
  wire _324_;
  wire _325_;
  wire _326_;
  wire _327_;
  wire _328_;
  wire _329_;
  wire _330_;
  wire _331_;
  wire _332_;
  reg _333_;
  reg [12:0] _334_;
  wire _335_;
  wire _336_;
  wire _337_;
  wire _338_;
  wire _339_;
  wire _340_;
  wire _341_;
  wire _342_;
  wire _343_;
  wire _344_;
  reg [12:0] _345_;
  wire [105:0] _346_;
  wire _347_;
  wire [163:0] _348_;
  wire [162:0] _349_;
  wire [163:0] _350_;
  wire [163:0] _351_;
  wire [163:0] _352_;
  wire _353_;
  wire _354_;
  wire _355_;
  reg _356_;
  wire _357_;
  wire _358_;
  wire [162:0] _359_;
  wire [6:0] _360_;
  wire [12:0] _361_;
  wire [12:0] _362_;
  wire _363_;
  wire _364_;
  wire _365_;
  wire _366_;
  reg _367_;
  wire _368_;
  wire _369_;
  wire _370_;
  wire _371_;
  wire _372_;
  wire _373_;
  wire _374_;
  wire _375_;
  wire _376_;
  wire [11:0] _377_;
  reg _378_;
  wire [7:0] _379_;
  wire _380_;
  wire _381_;
  wire [7:0] _382_;
  wire _383_;
  wire [7:0] _384_;
  wire [324:0] _385_;
  wire [12:0] _386_;
  wire [12:0] _387_;
  wire [12:0] _388_;
  reg _389_;
  wire [12:0] _390_;
  wire _391_;
  wire _392_;
  wire [12:0] _393_;
  wire [12:0] _394_;
  wire _395_;
  wire _396_;
  wire _397_;
  wire _398_;
  wire _399_;
  reg _400_;
  wire _401_;
  wire _402_;
  wire _403_;
  wire _404_;
  wire _405_;
  wire _406_;
  wire _407_;
  wire _408_;
  wire _409_;
  wire _410_;
  reg _411_;
  wire _412_;
  wire _413_;
  wire _414_;
  wire _415_;
  wire _416_;
  wire _417_;
  wire _418_;
  wire _419_;
  wire _420_;
  wire _421_;
  reg _422_;
  wire _423_;
  wire _424_;
  wire _425_;
  wire _426_;
  wire _427_;
  wire _428_;
  wire _429_;
  wire _430_;
  wire _431_;
  wire _432_;
  reg _433_;
  wire _434_;
  wire _435_;
  wire _436_;
  wire _437_;
  wire _438_;
  wire _439_;
  wire _440_;
  wire _441_;
  wire _442_;
  wire _443_;
  reg _444_;
  reg _445_;
  wire _446_;
  wire _447_;
  wire _448_;
  wire _449_;
  wire _450_;
  wire _451_;
  wire _452_;
  wire _453_;
  wire _454_;
  wire _455_;
  reg [11:0] _456_;
  wire _457_;
  wire _458_;
  wire _459_;
  wire _460_;
  wire _461_;
  wire _462_;
  wire _463_;
  wire _464_;
  wire _465_;
  wire _466_;
  reg [11:0] _467_;
  wire _468_;
  wire _469_;
  wire _470_;
  wire _471_;
  wire _472_;
  wire _473_;
  wire _474_;
  wire _475_;
  wire _476_;
  wire _477_;
  reg [12:0] _478_;
  wire _479_;
  wire _480_;
  wire _481_;
  wire _482_;
  wire _483_;
  wire _484_;
  wire _485_;
  wire _486_;
  wire _487_;
  wire _488_;
  reg [12:0] _489_;
  wire _490_;
  wire _491_;
  wire _492_;
  wire _493_;
  wire _494_;
  wire _495_;
  wire _496_;
  wire _497_;
  wire _498_;
  wire _499_;
  reg [12:0] _500_;
  wire _501_;
  wire _502_;
  wire _503_;
  wire _504_;
  wire _505_;
  wire _506_;
  wire _507_;
  wire _508_;
  wire _509_;
  wire _510_;
  reg [62:0] _511_;
  wire _512_;
  wire _513_;
  wire [1:0] _514_;
  wire _515_;
  wire [51:0] _516_;
  wire _517_;
  wire [51:0] _518_;
  wire _519_;
  wire _520_;
  wire _521_;
  reg [62:0] _522_;
  wire _523_;
  wire _524_;
  wire _525_;
  wire _526_;
  wire _527_;
  wire _528_;
  wire _529_;
  wire _530_;
  wire _531_;
  wire _532_;
  reg [62:0] _533_;
  wire _534_;
  wire _535_;
  wire _536_;
  wire [12:0] _537_;
  wire _538_;
  wire [12:0] _539_;
  wire _540_;
  wire [12:0] _541_;
  wire [12:0] _542_;
  wire [64:0] _543_;
  reg [62:0] _544_;
  wire _545_;
  wire _546_;
  wire _547_;
  wire _548_;
  wire _549_;
  wire _550_;
  wire _551_;
  wire _552_;
  wire _553_;
  wire _554_;
  reg _555_;
  reg [62:0] _556_;
  wire _557_;
  wire _558_;
  wire _559_;
  wire _560_;
  wire _561_;
  wire [63:0] _562_;
  wire [63:0] _563_;
  reg [62:0] _564_;
  reg [62:0] _565_;
  reg [62:0] _566_;
  reg [62:0] _567_;
  reg [62:0] _568_;
  reg _569_;
  reg _570_;
  reg _571_;
  reg _572_;
  reg _573_;
  wire _574_;
  wire _575_;
  wire _576_;
  wire _577_;
  wire _578_;
  wire _579_;
  wire _580_;
  wire _581_;
  wire _582_;
  wire _583_;
  reg _584_;
  wire _585_;
  wire _586_;
  wire _587_;
  wire _588_;
  wire _589_;
  wire _590_;
  wire _591_;
  wire _592_;
  wire _593_;
  wire _594_;
  reg [11:0] _595_;
  wire _596_;
  wire _597_;
  wire _598_;
  wire _599_;
  wire _600_;
  wire _601_;
  wire _602_;
  wire _603_;
  wire _604_;
  wire _605_;
  input [63:0] A;
  wire [63:0] A;
  input [63:0] B;
  wire [63:0] B;
  input [63:0] C;
  wire [63:0] C;
  output [63:0] R;
  wire [63:0] R;
  input [1:0] RndMode;
  wire [1:0] RndMode;
  wire [10:0] aexp;
  wire [10:0] aexpfield;
  wire [11:0] aexpplusbexp;
  wire [11:0] aexpplusbexp_d1;
  wire [11:0] aexpplusbexp_d2;
  wire ahasnonnullsig;
  wire aisinf;
  wire aisinfornan;
  wire aisnan;
  wire aisnormal;
  wire aiszero;
  wire aiszero_d1;
  wire aiszero_d2;
  wire asgn;
  wire asgn_d1;
  wire asgn_d2;
  wire [52:0] asig;
  wire [51:0] asigfield;
  wire [10:0] bexp;
  wire [10:0] bexpfield;
  wire bhasnonnullsig;
  wire [163:0] bigsum;
  wire [163:0] bigsum2;
  wire [162:0] bigsumabs;
  wire [109:0] bigsumabslowerbits;
  wire [324:0] bigsumnormd;
  wire bisinf;
  wire bisinfornan;
  wire bisnan;
  wire bisnormal;
  wire biszero;
  wire biszero_d1;
  wire biszero_d2;
  wire bsgn;
  wire bsgn_d1;
  wire bsgn_d2;
  wire [52:0] bsig;
  wire [51:0] bsigfield;
  wire [10:0] cexp;
  wire [10:0] cexp_d1;
  wire [10:0] cexp_d2;
  wire [10:0] cexpfield;
  wire chasnonnullsig;
  wire cisinf;
  wire cisinfornan;
  wire cisnan;
  wire cisnormal;
  wire cisnormal_d1;
  wire cisnormal_d2;
  wire ciszero;
  wire ciszero_d1;
  wire ciszero_d2;
  input clk;
  wire clk;
  wire csgn;
  wire csgn_d1;
  wire csgn_d2;
  wire [52:0] csig;
  wire [51:0] csigfield;
  wire [163:0] csiginverted;
  wire [215:0] csigshifted;
  wire [162:0] csigshiftedt;
  wire effectivesub;
  wire effectivesub_d1;
  wire [12:0] expdiff;
  wire expdiffnotlarge;
  wire [12:0] expdiffprepare;
  wire expdiffsmall;
  wire expdiffsmall_d1;
  wire expdiffsmall_d2;
  wire expdiffverysmall;
  wire [12:0] exponentresult1;
  wire [12:0] exptentative;
  wire [12:0] exptentative_d1;
  wire [12:0] exptentative_d2;
  wire [12:0] exptentative_d3;
  wire [12:0] expupdate;
  wire finalrisinf;
  wire [1:0] fracleadingbits;
  wire [1:0] fracleadingbitsnormal;
  wire [51:0] fracresultnormd;
  wire fracresultroundbit;
  wire fracresultstickybit;
  wire [55:0] fractentative;
  wire [6:0] \ieeefma_11_52_f150_uid2leadingzerocounter:922 ;
  wire [62:0] inf;
  wire [62:0] inf_d1;
  wire [62:0] inf_d2;
  wire [62:0] inf_d3;
  wire [62:0] inf_d4;
  wire [62:0] inf_d5;
  wire [6:0] l;
  wire [62:0] nan;
  wire [62:0] nan_d1;
  wire [62:0] nan_d2;
  wire [62:0] nan_d3;
  wire [62:0] nan_d4;
  wire [62:0] nan_d5;
  input negateAB;
  wire negateAB;
  input negateC;
  wire negateC;
  wire negateab_d1;
  wire negateab_d2;
  wire negatec_d1;
  wire negatec_d2;
  wire [324:0] \normalizationshifter:986 ;
  wire [7:0] normshiftvalue;
  wire [105:0] p;
  wire [162:0] paligned;
  wire [162:0] paligned_d1;
  wire [64:0] resultbeforeround;
  wire [64:0] resultrounded;
  wire [215:0] \rightshiftercomponent:759 ;
  wire risnan;
  wire risnan_d1;
  wire risnan_d2;
  wire risnan_d3;
  wire risnan_d4;
  wire risnan_d5;
  wire rissubnormal;
  wire rissubnormal_d1;
  wire rissubnormal_d2;
  wire rissubnormal_d3;
  wire riszero;
  wire riszero_d1;
  wire riszero_d2;
  wire riszero_d3;
  wire round;
  wire roverflowed;
  wire rsgn;
  wire rsgn_d1;
  wire rsgn_d2;
  wire rsgn_d3;
  wire rsgntentative;
  wire rsgntentative_d1;
  wire [7:0] shiftvalue;
  wire [7:0] shiftvalue_d1;
  wire [7:0] shiftvalue_d2;
  wire [11:0] shiftvaluecasesubnormal;
  wire [11:0] shiftvaluecasesubnormal_d1;
  wire [11:0] shiftvaluecasesubnormal_d2;
  wire sticky1;
  wire sticky1_d1;
  wire sticky1_d2;
  wire sticky1_d3;
  wire sticky1_d4;
  wire sticky2;
  wire tentativerisinf;
  wire tentativerisinf_d1;
  wire tentativerisinf_d2;
  wire tentativerisinf_d3;
  wire tentativerisinf_d4;
  wire tentativerisinf_d5;
  wire [12:0] tmpexpcomp1;
  wire [12:0] tmpexpcomp2;
  wire [12:0] tmpexpcomp3;
  wire [12:0] tmpexpcompres1;
  wire [12:0] tmpexpcompres1_d1;
  wire [12:0] tmpexpcompres1_d2;
  wire [12:0] tmpexpcompres2;
  always @(posedge clk)
    _189_ <= cexp;
  assign _388_ = { aexpplusbexp_d2[11], aexpplusbexp_d2 } - { 6'h00, l };
  assign _390_ = _388_ + 13'h0003;
  always @(posedge clk)
    _200_ <= cexp_d1;
  assign _391_ = ~ rissubnormal;
  assign _392_ = expdiffsmall_d2 & _391_;
  assign _393_ = _392_ ? _390_ : _394_;
  always @(posedge clk)
    _211_ <= effectivesub;
  assign _394_ = { cexp_d2[10], cexp_d2[10], cexp_d2 } + 13'h0001;
  assign _395_ = bigsumnormd[0] | bigsumnormd[1];
  assign _396_ = _395_ | bigsumnormd[2];
  always @(posedge clk)
    _223_ <= expdiffsmall;
  assign _397_ = _396_ | bigsumnormd[3];
  assign _398_ = _397_ | bigsumnormd[4];
  assign _399_ = _398_ | bigsumnormd[5];
  assign _401_ = _399_ | bigsumnormd[6];
  assign _402_ = _401_ | bigsumnormd[7];
  always @(posedge clk)
    _234_ <= expdiffsmall_d1;
  assign _403_ = _402_ | bigsumnormd[8];
  assign _404_ = _403_ | bigsumnormd[9];
  assign _405_ = _404_ | bigsumnormd[10];
  assign _406_ = _405_ | bigsumnormd[11];
  assign _407_ = _406_ | bigsumnormd[12];
  always @(posedge clk)
    _245_ <= shiftvalue;
  assign _408_ = _407_ | bigsumnormd[13];
  assign _409_ = _408_ | bigsumnormd[14];
  assign _410_ = _409_ | bigsumnormd[15];
  assign _412_ = _410_ | bigsumnormd[16];
  assign _413_ = _412_ | bigsumnormd[17];
  always @(posedge clk)
    _256_ <= shiftvalue_d1;
  assign _414_ = _413_ | bigsumnormd[18];
  assign _415_ = _414_ | bigsumnormd[19];
  assign _416_ = _415_ | bigsumnormd[20];
  assign _417_ = _416_ | bigsumnormd[21];
  assign _418_ = _417_ | bigsumnormd[22];
  always @(posedge clk)
    _267_ <= sticky1;
  assign _419_ = _418_ | bigsumnormd[23];
  assign _420_ = _419_ | bigsumnormd[24];
  assign _421_ = _420_ | bigsumnormd[25];
  assign _423_ = _421_ | bigsumnormd[26];
  assign _424_ = _423_ | bigsumnormd[27];
  always @(posedge clk)
    _278_ <= sticky1_d1;
  assign _425_ = _424_ | bigsumnormd[28];
  assign _426_ = _425_ | bigsumnormd[29];
  assign _427_ = _426_ | bigsumnormd[30];
  assign _428_ = _427_ | bigsumnormd[31];
  assign _429_ = _428_ | bigsumnormd[32];
  always @(posedge clk)
    _289_ <= sticky1_d2;
  assign _430_ = _429_ | bigsumnormd[33];
  assign _431_ = _430_ | bigsumnormd[34];
  assign _432_ = _431_ | bigsumnormd[35];
  assign _434_ = _432_ | bigsumnormd[36];
  assign _435_ = _434_ | bigsumnormd[37];
  always @(posedge clk)
    _300_ <= sticky1_d3;
  assign _436_ = _435_ | bigsumnormd[38];
  assign _437_ = _436_ | bigsumnormd[39];
  assign _438_ = _437_ | bigsumnormd[40];
  assign _439_ = _438_ | bigsumnormd[41];
  assign _440_ = _439_ | bigsumnormd[42];
  always @(posedge clk)
    _311_ <= paligned;
  assign _441_ = _440_ | bigsumnormd[43];
  assign _442_ = _441_ | bigsumnormd[44];
  assign _443_ = _442_ | bigsumnormd[45];
  assign _446_ = _443_ | bigsumnormd[46];
  assign _447_ = _446_ | bigsumnormd[47];
  always @(posedge clk)
    _322_ <= rsgntentative;
  assign _448_ = _447_ | bigsumnormd[48];
  assign _449_ = _448_ | bigsumnormd[49];
  assign _450_ = _449_ | bigsumnormd[50];
  assign _451_ = _450_ | bigsumnormd[51];
  assign _452_ = _451_ | bigsumnormd[52];
  always @(posedge clk)
    _334_ <= tmpexpcompres1;
  assign _453_ = _452_ | bigsumnormd[53];
  assign _454_ = _453_ | bigsumnormd[54];
  assign _455_ = _454_ | bigsumnormd[55];
  assign _457_ = _455_ | bigsumnormd[56];
  assign _458_ = _457_ | bigsumnormd[57];
  always @(posedge clk)
    _345_ <= tmpexpcompres1_d1;
  assign _459_ = _458_ | bigsumnormd[58];
  assign _460_ = _459_ | bigsumnormd[59];
  assign _461_ = _460_ | bigsumnormd[60];
  assign _462_ = _461_ | bigsumnormd[61];
  assign _463_ = _462_ | bigsumnormd[62];
  always @(posedge clk)
    _356_ <= rissubnormal;
  assign _464_ = _463_ | bigsumnormd[63];
  assign _465_ = _464_ | bigsumnormd[64];
  assign _466_ = _465_ | bigsumnormd[65];
  assign _468_ = _466_ | bigsumnormd[66];
  assign _469_ = _468_ | bigsumnormd[67];
  always @(posedge clk)
    _367_ <= rissubnormal_d1;
  assign _470_ = _469_ | bigsumnormd[68];
  assign _471_ = _470_ | bigsumnormd[69];
  assign _472_ = _471_ | bigsumnormd[70];
  assign _473_ = _472_ | bigsumnormd[71];
  assign _474_ = _473_ | bigsumnormd[72];
  always @(posedge clk)
    _378_ <= rissubnormal_d2;
  assign _475_ = _474_ | bigsumnormd[73];
  assign _476_ = _475_ | bigsumnormd[74];
  assign _477_ = _476_ | bigsumnormd[75];
  assign _479_ = _477_ | bigsumnormd[76];
  assign _480_ = _479_ | bigsumnormd[77];
  always @(posedge clk)
    _389_ <= riszero;
  assign _481_ = _480_ | bigsumnormd[78];
  assign _482_ = _481_ | bigsumnormd[79];
  assign _483_ = _482_ | bigsumnormd[80];
  assign _484_ = _483_ | bigsumnormd[81];
  assign _485_ = _484_ | bigsumnormd[82];
  always @(posedge clk)
    _400_ <= riszero_d1;
  assign _486_ = _485_ | bigsumnormd[83];
  assign _487_ = _486_ | bigsumnormd[84];
  assign _488_ = _487_ | bigsumnormd[85];
  assign _490_ = _488_ | bigsumnormd[86];
  assign _491_ = _490_ | bigsumnormd[87];
  always @(posedge clk)
    _411_ <= riszero_d2;
  assign _492_ = _491_ | bigsumnormd[88];
  assign _493_ = _492_ | bigsumnormd[89];
  assign _494_ = _493_ | bigsumnormd[90];
  assign _495_ = _494_ | bigsumnormd[91];
  assign _496_ = _495_ | bigsumnormd[92];
  always @(posedge clk)
    _422_ <= rsgn;
  assign _497_ = _496_ | bigsumnormd[93];
  assign _498_ = _497_ | bigsumnormd[94];
  assign _499_ = _498_ | bigsumnormd[95];
  assign _501_ = _499_ | bigsumnormd[96];
  assign _502_ = _501_ | bigsumnormd[97];
  always @(posedge clk)
    _433_ <= rsgn_d1;
  assign _503_ = _502_ | bigsumnormd[98];
  assign _504_ = _503_ | bigsumnormd[99];
  assign _505_ = _504_ | bigsumnormd[100];
  assign _506_ = _505_ | bigsumnormd[101];
  assign _507_ = _506_ | bigsumnormd[102];
  always @(posedge clk)
    _445_ <= rsgn_d2;
  assign _508_ = _507_ | bigsumnormd[103];
  assign _509_ = _508_ | bigsumnormd[104];
  assign _510_ = _509_ | bigsumnormd[105];
  assign _512_ = _510_ | bigsumnormd[106];
  assign _513_ = _512_ | bigsumnormd[107];
  always @(posedge clk)
    _456_ <= shiftvaluecasesubnormal;
  assign _514_ = rissubnormal_d3 ? 2'h1 : fracleadingbitsnormal;
  always @(posedge clk)
    _467_ <= shiftvaluecasesubnormal_d1;
  assign _515_ = fracleadingbits == 2'h0;
  assign _516_ = _515_ ? fractentative[52:1] : _518_;
  assign _517_ = fracleadingbits == 2'h1;
  always @(posedge clk)
    _478_ <= exptentative;
  assign _518_ = _517_ ? fractentative[53:2] : fractentative[54:3];
  assign _519_ = fracleadingbits == 2'h0;
  always @(posedge clk)
    _489_ <= exptentative_d1;
  assign _520_ = _519_ ? fractentative[0] : _523_;
  assign _521_ = fracleadingbits == 2'h1;
  assign _523_ = _521_ ? fractentative[1] : fractentative[2];
  always @(posedge clk)
    _500_ <= exptentative_d2;
  assign _524_ = sticky1_d4 | sticky2;
  assign _525_ = fracleadingbits == 2'h0;
  assign _526_ = _525_ ? _524_ : _530_;
  always @(posedge clk)
    _511_ <= inf;
  assign _527_ = fractentative[0] | sticky1_d4;
  assign _528_ = _527_ | sticky2;
  assign _529_ = fracleadingbits == 2'h1;
  always @(posedge clk)
    _522_ <= inf_d1;
  assign _530_ = _529_ ? _528_ : _534_;
  assign _531_ = fractentative[1] | fractentative[0];
  assign _532_ = _531_ | sticky1_d4;
  assign _534_ = _532_ | sticky2;
  assign _535_ = fracresultstickybit | fracresultnormd[0];
  assign _536_ = fracresultroundbit & _535_;
  always @(posedge clk)
    _533_ <= inf_d2;
  assign _537_ = riszero_d3 ? 13'h03fd : _539_;
  assign _538_ = fracleadingbits == 2'h0;
  assign _539_ = _538_ ? 13'h03fd : _541_;
  always @(posedge clk)
    _544_ <= inf_d3;
  assign _540_ = fracleadingbits == 2'h1;
  assign _541_ = _540_ ? 13'h03fe : 13'h03ff;
  always @(posedge clk)
    _556_ <= inf_d4;
  assign _542_ = exptentative_d3 + expupdate;
  always @(posedge clk)
    _564_ <= nan;
  assign _543_ = resultbeforeround + { 64'h0000000000000000, round };
  assign _545_ = resultrounded[64] | resultrounded[63];
  always @(posedge clk)
    _565_ <= nan_d1;
  assign _546_ = resultrounded[62] & resultrounded[61];
  assign _547_ = _546_ & resultrounded[60];
  assign _548_ = _547_ & resultrounded[59];
  assign _549_ = _548_ & resultrounded[58];
  assign _550_ = _549_ & resultrounded[57];
  always @(posedge clk)
    _566_ <= nan_d2;
  assign _551_ = _550_ & resultrounded[56];
  assign _552_ = _551_ & resultrounded[55];
  assign _553_ = _552_ & resultrounded[54];
  assign _554_ = _553_ & resultrounded[53];
  assign _557_ = _554_ & resultrounded[52];
  assign _558_ = _545_ | _557_;
  always @(posedge clk)
    _567_ <= nan_d3;
  assign _559_ = tentativerisinf_d5 | roverflowed;
  assign _560_ = ~ risnan_d5;
  assign _561_ = _560_ & finalrisinf;
  assign _562_ = _561_ ? { rsgn_d3, inf_d5 } : _563_;
  assign _563_ = risnan_d5 ? { 1'h0, nan_d5 } : { rsgn_d3, resultrounded[62:0] };
  always @(posedge clk)
    _568_ <= nan_d4;
  always @(posedge clk)
    _569_ <= negateAB;
  always @(posedge clk)
    _570_ <= negateab_d1;
  always @(posedge clk)
    _571_ <= negateC;
  always @(posedge clk)
    _572_ <= negatec_d1;
  assign _574_ = A[52] | A[53];
  assign _575_ = _574_ | A[54];
  assign _576_ = _575_ | A[55];
  assign _577_ = _576_ | A[56];
  assign _578_ = _577_ | A[57];
  assign _579_ = _578_ | A[58];
  assign _580_ = _579_ | A[59];
  assign _581_ = _580_ | A[60];
  assign _582_ = _581_ | A[61];
  assign _583_ = _582_ | A[62];
  assign _585_ = A[52] & A[53];
  assign _586_ = _585_ & A[54];
  assign _587_ = _586_ & A[55];
  assign _588_ = _587_ & A[56];
  assign _589_ = _588_ & A[57];
  assign _590_ = _589_ & A[58];
  assign _591_ = _590_ & A[59];
  assign _592_ = _591_ & A[60];
  assign _593_ = _592_ & A[61];
  assign _594_ = _593_ & A[62];
  assign _596_ = A[0] | A[1];
  assign _597_ = _596_ | A[2];
  assign _598_ = _597_ | A[3];
  assign _599_ = _598_ | A[4];
  assign _600_ = _599_ | A[5];
  assign _601_ = _600_ | A[6];
  assign _602_ = _601_ | A[7];
  assign _603_ = _602_ | A[8];
  assign _604_ = _603_ | A[9];
  assign _605_ = _604_ | A[10];
  assign _002_ = _605_ | A[11];
  assign _003_ = _002_ | A[12];
  assign _004_ = _003_ | A[13];
  assign _005_ = _004_ | A[14];
  assign _006_ = _005_ | A[15];
  assign _007_ = _006_ | A[16];
  assign _008_ = _007_ | A[17];
  assign _009_ = _008_ | A[18];
  assign _010_ = _009_ | A[19];
  assign _011_ = _010_ | A[20];
  assign _013_ = _011_ | A[21];
  assign _014_ = _013_ | A[22];
  assign _015_ = _014_ | A[23];
  assign _016_ = _015_ | A[24];
  assign _017_ = _016_ | A[25];
  assign _018_ = _017_ | A[26];
  assign _019_ = _018_ | A[27];
  assign _020_ = _019_ | A[28];
  assign _021_ = _020_ | A[29];
  assign _022_ = _021_ | A[30];
  assign _024_ = _022_ | A[31];
  assign _025_ = _024_ | A[32];
  assign _026_ = _025_ | A[33];
  assign _027_ = _026_ | A[34];
  assign _028_ = _027_ | A[35];
  assign _029_ = _028_ | A[36];
  assign _030_ = _029_ | A[37];
  assign _031_ = _030_ | A[38];
  assign _032_ = _031_ | A[39];
  assign _033_ = _032_ | A[40];
  assign _035_ = _033_ | A[41];
  assign _036_ = _035_ | A[42];
  assign _037_ = _036_ | A[43];
  assign _038_ = _037_ | A[44];
  assign _039_ = _038_ | A[45];
  assign _040_ = _039_ | A[46];
  assign _041_ = _040_ | A[47];
  assign _042_ = _041_ | A[48];
  assign _043_ = _042_ | A[49];
  assign _044_ = _043_ | A[50];
  assign _046_ = _044_ | A[51];
  assign _047_ = ~ aisnormal;
  assign _048_ = ~ ahasnonnullsig;
  assign _049_ = _047_ & _048_;
  assign _050_ = ~ ahasnonnullsig;
  assign _051_ = aisinfornan & _050_;
  assign _052_ = aisinfornan & ahasnonnullsig;
  assign _053_ = B[52] | B[53];
  assign _054_ = _053_ | B[54];
  assign _055_ = _054_ | B[55];
  assign _057_ = _055_ | B[56];
  assign _058_ = _057_ | B[57];
  assign _059_ = _058_ | B[58];
  assign _060_ = _059_ | B[59];
  assign _061_ = _060_ | B[60];
  assign _062_ = _061_ | B[61];
  assign _063_ = _062_ | B[62];
  assign _064_ = B[52] & B[53];
  assign _065_ = _064_ & B[54];
  assign _066_ = _065_ & B[55];
  assign _068_ = _066_ & B[56];
  assign _069_ = _068_ & B[57];
  assign _070_ = _069_ & B[58];
  assign _071_ = _070_ & B[59];
  assign _072_ = _071_ & B[60];
  assign _073_ = _072_ & B[61];
  assign _074_ = _073_ & B[62];
  assign _075_ = B[0] | B[1];
  assign _076_ = _075_ | B[2];
  assign _077_ = _076_ | B[3];
  assign _079_ = _077_ | B[4];
  assign _080_ = _079_ | B[5];
  assign _081_ = _080_ | B[6];
  assign _082_ = _081_ | B[7];
  assign _083_ = _082_ | B[8];
  assign _084_ = _083_ | B[9];
  assign _085_ = _084_ | B[10];
  assign _086_ = _085_ | B[11];
  assign _087_ = _086_ | B[12];
  assign _088_ = _087_ | B[13];
  assign _090_ = _088_ | B[14];
  assign _091_ = _090_ | B[15];
  assign _092_ = _091_ | B[16];
  assign _093_ = _092_ | B[17];
  assign _094_ = _093_ | B[18];
  assign _095_ = _094_ | B[19];
  assign _096_ = _095_ | B[20];
  assign _097_ = _096_ | B[21];
  assign _098_ = _097_ | B[22];
  assign _099_ = _098_ | B[23];
  assign _101_ = _099_ | B[24];
  assign _102_ = _101_ | B[25];
  assign _103_ = _102_ | B[26];
  assign _104_ = _103_ | B[27];
  assign _105_ = _104_ | B[28];
  assign _106_ = _105_ | B[29];
  assign _107_ = _106_ | B[30];
  assign _108_ = _107_ | B[31];
  assign _109_ = _108_ | B[32];
  assign _110_ = _109_ | B[33];
  assign _113_ = _110_ | B[34];
  assign _114_ = _113_ | B[35];
  assign _115_ = _114_ | B[36];
  assign _116_ = _115_ | B[37];
  assign _117_ = _116_ | B[38];
  assign _118_ = _117_ | B[39];
  assign _119_ = _118_ | B[40];
  assign _120_ = _119_ | B[41];
  assign _121_ = _120_ | B[42];
  assign _122_ = _121_ | B[43];
  assign _124_ = _122_ | B[44];
  assign _125_ = _124_ | B[45];
  assign _126_ = _125_ | B[46];
  assign _127_ = _126_ | B[47];
  assign _128_ = _127_ | B[48];
  assign _129_ = _128_ | B[49];
  assign _130_ = _129_ | B[50];
  assign _131_ = _130_ | B[51];
  assign _132_ = ~ bisnormal;
  assign _133_ = ~ bhasnonnullsig;
  assign _135_ = _132_ & _133_;
  assign _136_ = ~ bhasnonnullsig;
  assign _137_ = bisinfornan & _136_;
  assign _138_ = bisinfornan & bhasnonnullsig;
  assign _139_ = aexpfield - { 10'h1ff, aisnormal };
  assign _140_ = bexpfield - { 10'h1ff, bisnormal };
  assign _141_ = { aexp[10], aexp } + { bexp[10], bexp };
  assign _142_ = C[52] | C[53];
  assign _143_ = _142_ | C[54];
  assign _144_ = _143_ | C[55];
  assign _146_ = _144_ | C[56];
  assign _147_ = _146_ | C[57];
  assign _148_ = _147_ | C[58];
  assign _149_ = _148_ | C[59];
  assign _150_ = _149_ | C[60];
  assign _151_ = _150_ | C[61];
  assign _152_ = _151_ | C[62];
  assign _153_ = C[52] & C[53];
  assign _154_ = _153_ & C[54];
  assign _155_ = _154_ & C[55];
  assign _157_ = _155_ & C[56];
  assign _158_ = _157_ & C[57];
  assign _159_ = _158_ & C[58];
  assign _160_ = _159_ & C[59];
  assign _161_ = _160_ & C[60];
  assign _162_ = _161_ & C[61];
  assign _163_ = _162_ & C[62];
  assign _164_ = C[0] | C[1];
  assign _165_ = _164_ | C[2];
  assign _166_ = _165_ | C[3];
  assign _168_ = _166_ | C[4];
  assign _169_ = _168_ | C[5];
  assign _170_ = _169_ | C[6];
  assign _171_ = _170_ | C[7];
  assign _172_ = _171_ | C[8];
  assign _173_ = _172_ | C[9];
  assign _174_ = _173_ | C[10];
  assign _175_ = _174_ | C[11];
  assign _176_ = _175_ | C[12];
  assign _177_ = _176_ | C[13];
  assign _179_ = _177_ | C[14];
  assign _180_ = _179_ | C[15];
  assign _181_ = _180_ | C[16];
  assign _182_ = _181_ | C[17];
  assign _183_ = _182_ | C[18];
  assign _184_ = _183_ | C[19];
  assign _185_ = _184_ | C[20];
  assign _186_ = _185_ | C[21];
  assign _187_ = _186_ | C[22];
  assign _188_ = _187_ | C[23];
  assign _190_ = _188_ | C[24];
  assign _191_ = _190_ | C[25];
  assign _192_ = _191_ | C[26];
  assign _193_ = _192_ | C[27];
  assign _194_ = _193_ | C[28];
  assign _195_ = _194_ | C[29];
  assign _196_ = _195_ | C[30];
  assign _197_ = _196_ | C[31];
  assign _198_ = _197_ | C[32];
  assign _199_ = _198_ | C[33];
  assign _201_ = _199_ | C[34];
  assign _202_ = _201_ | C[35];
  assign _203_ = _202_ | C[36];
  assign _204_ = _203_ | C[37];
  assign _205_ = _204_ | C[38];
  assign _206_ = _205_ | C[39];
  assign _207_ = _206_ | C[40];
  assign _208_ = _207_ | C[41];
  assign _209_ = _208_ | C[42];
  assign _210_ = _209_ | C[43];
  assign _212_ = _210_ | C[44];
  assign _213_ = _212_ | C[45];
  assign _214_ = _213_ | C[46];
  assign _215_ = _214_ | C[47];
  assign _216_ = _215_ | C[48];
  assign _217_ = _216_ | C[49];
  assign _218_ = _217_ | C[50];
  assign _219_ = _218_ | C[51];
  assign _220_ = ~ cisnormal;
  assign _221_ = ~ chasnonnullsig;
  assign _224_ = _220_ & _221_;
  assign _225_ = ~ chasnonnullsig;
  assign _226_ = cisinfornan & _225_;
  assign _227_ = cisinfornan & chasnonnullsig;
  assign _228_ = aisnan | bisnan;
  assign _229_ = _228_ | cisnan;
  assign _230_ = aisinf | bisinf;
  assign _231_ = _230_ & cisinf;
  assign _232_ = asgn ^ bsgn;
  assign _233_ = _232_ ^ csgn;
  assign _235_ = _231_ & _233_;
  assign _236_ = _229_ | _235_;
  assign _237_ = biszero | bisnan;
  assign _238_ = ~ _237_;
  assign _239_ = aisinf & _238_;
  assign _240_ = aiszero | aisnan;
  assign _241_ = ~ _240_;
  assign _242_ = bisinf & _241_;
  assign _243_ = _239_ | _242_;
  assign _244_ = ~ cisnan;
  assign _246_ = _243_ & _244_;
  assign _247_ = asgn ^ bsgn;
  assign _248_ = _247_ ^ csgn;
  assign _249_ = ~ _248_;
  assign _250_ = cisinf & _249_;
  assign _251_ = ~ cisinf;
  assign _252_ = _250_ | _251_;
  assign _253_ = _246_ & _252_;
  assign _254_ = aisnan | bisnan;
  assign _255_ = ~ _254_;
  assign _257_ = cisinf & _255_;
  assign _258_ = aisinf | bisinf;
  assign _259_ = asgn ^ bsgn;
  assign _260_ = _259_ ^ csgn;
  assign _261_ = ~ _260_;
  assign _262_ = _258_ & _261_;
  assign _263_ = aisinf | bisinf;
  assign _264_ = ~ _263_;
  assign _265_ = _262_ | _264_;
  assign _266_ = _257_ & _265_;
  assign _268_ = _253_ | _266_;
  assign _269_ = cexpfield - { 10'h1ff, cisnormal };
  assign _270_ = negateAB ^ asgn;
  assign _271_ = _270_ ^ bsgn;
  assign _272_ = negateC ^ csgn;
  assign _273_ = _271_ ^ _272_;
  assign _274_ = { 2'h0, aexpfield } + { 2'h0, bexpfield };
  assign _275_ = _274_ - { 12'h1ff, aisnormal };
  assign _276_ = _275_ - { 12'h000, bisnormal };
  assign _277_ = { 2'h0, cexpfield } - expdiffprepare;
  assign _279_ = _277_ - { 12'h000, cisnormal };
  assign _280_ = expdiff + 13'h006a;
  assign _281_ = expdiff - 13'h0003;
  always @(posedge clk)
    _000_ <= asgn;
  assign _282_ = expdiff - 13'h0038;
  assign _283_ = expdiffverysmall ? 8'ha3 : _285_;
  always @(posedge clk)
    _111_ <= asgn_d1;
  assign _284_ = 8'h38 - expdiff[7:0];
  assign _285_ = expdiffnotlarge ? _284_ : 8'h00;
  always @(posedge clk)
    _222_ <= aiszero;
  assign _287_ = csigshifted[0] | csigshifted[1];
  assign _288_ = _287_ | csigshifted[2];
  assign _290_ = _288_ | csigshifted[3];
  always @(posedge clk)
    _333_ <= aiszero_d1;
  assign _291_ = _290_ | csigshifted[4];
  assign _292_ = _291_ | csigshifted[5];
  assign _293_ = _292_ | csigshifted[6];
  assign _294_ = _293_ | csigshifted[7];
  assign _295_ = _294_ | csigshifted[8];
  always @(posedge clk)
    _444_ <= bsgn;
  assign _296_ = _295_ | csigshifted[9];
  assign _297_ = _296_ | csigshifted[10];
  assign _298_ = _297_ | csigshifted[11];
  assign _299_ = _298_ | csigshifted[12];
  assign _301_ = _299_ | csigshifted[13];
  always @(posedge clk)
    _555_ <= bsgn_d1;
  assign _302_ = _301_ | csigshifted[14];
  assign _303_ = _302_ | csigshifted[15];
  assign _304_ = _303_ | csigshifted[16];
  assign _305_ = _304_ | csigshifted[17];
  assign _306_ = _305_ | csigshifted[18];
  always @(posedge clk)
    _573_ <= biszero;
  assign _307_ = _306_ | csigshifted[19];
  assign _308_ = _307_ | csigshifted[20];
  assign _309_ = _308_ | csigshifted[21];
  assign _310_ = _309_ | csigshifted[22];
  assign _312_ = _310_ | csigshifted[23];
  always @(posedge clk)
    _584_ <= biszero_d1;
  assign _313_ = _312_ | csigshifted[24];
  assign _314_ = _313_ | csigshifted[25];
  assign _315_ = _314_ | csigshifted[26];
  assign _316_ = _315_ | csigshifted[27];
  assign _317_ = _316_ | csigshifted[28];
  always @(posedge clk)
    _595_ <= aexpplusbexp;
  assign _318_ = _317_ | csigshifted[29];
  assign _319_ = _318_ | csigshifted[30];
  assign _320_ = _319_ | csigshifted[31];
  assign _321_ = _320_ | csigshifted[32];
  assign _323_ = _321_ | csigshifted[33];
  always @(posedge clk)
    _001_ <= aexpplusbexp_d1;
  assign _324_ = _323_ | csigshifted[34];
  assign _325_ = _324_ | csigshifted[35];
  assign _326_ = _325_ | csigshifted[36];
  assign _327_ = _326_ | csigshifted[37];
  assign _328_ = _327_ | csigshifted[38];
  always @(posedge clk)
    _012_ <= csgn;
  assign _329_ = _328_ | csigshifted[39];
  assign _330_ = _329_ | csigshifted[40];
  assign _331_ = _330_ | csigshifted[41];
  assign _332_ = _331_ | csigshifted[42];
  assign _335_ = _332_ | csigshifted[43];
  always @(posedge clk)
    _023_ <= csgn_d1;
  assign _336_ = _335_ | csigshifted[44];
  assign _337_ = _336_ | csigshifted[45];
  assign _338_ = _337_ | csigshifted[46];
  assign _339_ = _338_ | csigshifted[47];
  assign _340_ = _339_ | csigshifted[48];
  always @(posedge clk)
    _034_ <= cisnormal;
  assign _341_ = _340_ | csigshifted[49];
  assign _342_ = _341_ | csigshifted[50];
  assign _343_ = _342_ | csigshifted[51];
  assign _344_ = _343_ | csigshifted[52];
  always @(posedge clk)
    _045_ <= cisnormal_d1;
  assign _346_ = $signed({ 53'h00000000000000, asig }) * $signed({ 53'h00000000000000, bsig });
  always @(posedge clk)
    _056_ <= ciszero;
  assign _347_ = ~ effectivesub_d1;
  assign _348_ = _347_ ? { 1'h0, csigshiftedt } : { 1'h1, _349_ };
  assign _349_ = ~ csigshiftedt;
  always @(posedge clk)
    _067_ <= ciszero_d1;
  assign _350_ = csiginverted + { 1'h0, paligned_d1 };
  always @(posedge clk)
    _078_ <= risnan;
  assign _351_ = _350_ + { 163'h00000000000000000000000000000000000000000, effectivesub_d1 };
  always @(posedge clk)
    _089_ <= risnan_d1;
  assign _352_ = { 1'h0, csigshiftedt } - { 1'h0, paligned_d1 };
  assign _353_ = asgn_d1 ^ bsgn_d1;
  assign _354_ = _353_ ^ negateab_d1;
  assign _355_ = _354_ ^ bigsum[163];
  assign _357_ = ~ effectivesub_d1;
  assign _358_ = bigsum2[163] | _357_;
  assign _359_ = _358_ ? bigsum[162:0] : bigsum2[162:0];
  always @(posedge clk)
    _100_ <= risnan_d2;
  always @(posedge clk)
    _112_ <= risnan_d3;
  assign _361_ = { aexpplusbexp[11], aexpplusbexp } + 13'h0401;
  always @(posedge clk)
    _123_ <= risnan_d4;
  assign _362_ = tmpexpcompres1_d2 - { 6'h00, l };
  assign _363_ = ~ cisnormal_d2;
  assign _364_ = expdiffsmall_d2 | _363_;
  assign _365_ = _364_ & tmpexpcompres2[12];
  always @(posedge clk)
    _134_ <= tentativerisinf;
  assign _366_ = l == 7'h6e;
  assign _368_ = _366_ ? expdiffsmall_d2 : 1'h0;
  assign _369_ = asgn_d2 ^ bsgn_d2;
  assign _370_ = _369_ ^ negateab_d2;
  assign _371_ = csgn_d2 ^ negatec_d2;
  assign _372_ = _370_ & _371_;
  always @(posedge clk)
    _145_ <= tentativerisinf_d1;
  assign _373_ = aiszero_d2 | biszero_d2;
  assign _374_ = _373_ & ciszero_d2;
  assign _375_ = _374_ ? _372_ : _376_;
  assign _376_ = riszero ? 1'h0 : rsgntentative_d1;
  always @(posedge clk)
    _156_ <= tentativerisinf_d2;
  assign _377_ = aexpplusbexp + 12'h436;
  assign _379_ = { 1'h0, l } + 8'h36;
  always @(posedge clk)
    _167_ <= tentativerisinf_d3;
  assign _380_ = ~ rissubnormal;
  assign _381_ = expdiffsmall_d2 & _380_;
  assign _382_ = _381_ ? _379_ : _384_;
  assign _383_ = expdiffsmall_d2 & rissubnormal;
  assign _384_ = _383_ ? shiftvaluecasesubnormal_d2[7:0] : shiftvalue_d2;
  always @(posedge clk)
    _178_ <= tentativerisinf_d4;
  assign _386_ = riszero ? 13'h1c03 : _387_;
  assign _387_ = rissubnormal ? 13'h1c02 : _393_;
  lzc_110_f150_uid6 ieeefma_11_52_f150_uid2leadingzerocounter (
    .clk(clk),
    .i(bigsumabslowerbits),
    .o(_360_)
  );
  leftshifter163_by_max_162_f150_uid8 normalizationshifter (
    .clk(clk),
    .r(_385_),
    .s(normshiftvalue),
    .x(bigsumabs)
  );
  rightshifter53_by_max_163_f150_uid4 rightshiftercomponent (
    .clk(clk),
    .r(_286_),
    .s(shiftvalue),
    .x(csig)
  );
  assign asgn = A[63];
  assign asgn_d1 = _000_;
  assign asgn_d2 = _111_;
  assign aexpfield = A[62:52];
  assign asigfield = A[51:0];
  assign aisnormal = _583_;
  assign aisinfornan = _594_;
  assign ahasnonnullsig = _046_;
  assign aiszero = _049_;
  assign aiszero_d1 = _222_;
  assign aiszero_d2 = _333_;
  assign aisinf = _051_;
  assign aisnan = _052_;
  assign bsgn = B[63];
  assign bsgn_d1 = _444_;
  assign bsgn_d2 = _555_;
  assign bexpfield = B[62:52];
  assign bsigfield = B[51:0];
  assign bisnormal = _063_;
  assign bisinfornan = _074_;
  assign bhasnonnullsig = _131_;
  assign biszero = _135_;
  assign biszero_d1 = _573_;
  assign biszero_d2 = _584_;
  assign bisinf = _137_;
  assign bisnan = _138_;
  assign aexp = _139_;
  assign bexp = _140_;
  assign asig = { aisnormal, asigfield };
  assign bsig = { bisnormal, bsigfield };
  assign aexpplusbexp = _141_;
  assign aexpplusbexp_d1 = _595_;
  assign aexpplusbexp_d2 = _001_;
  assign csgn = C[63];
  assign csgn_d1 = _012_;
  assign csgn_d2 = _023_;
  assign cexpfield = C[62:52];
  assign csigfield = C[51:0];
  assign cisnormal = _152_;
  assign cisnormal_d1 = _034_;
  assign cisnormal_d2 = _045_;
  assign cisinfornan = _163_;
  assign chasnonnullsig = _219_;
  assign ciszero = _224_;
  assign ciszero_d1 = _056_;
  assign ciszero_d2 = _067_;
  assign cisinf = _226_;
  assign cisnan = _227_;
  assign risnan = _236_;
  assign risnan_d1 = _078_;
  assign risnan_d2 = _089_;
  assign risnan_d3 = _100_;
  assign risnan_d4 = _112_;
  assign risnan_d5 = _123_;
  assign tentativerisinf = _268_;
  assign tentativerisinf_d1 = _134_;
  assign tentativerisinf_d2 = _145_;
  assign tentativerisinf_d3 = _156_;
  assign tentativerisinf_d4 = _167_;
  assign tentativerisinf_d5 = _178_;
  assign cexp = _269_;
  assign cexp_d1 = _189_;
  assign cexp_d2 = _200_;
  assign effectivesub = _273_;
  assign effectivesub_d1 = _211_;
  assign csig = { cisnormal, csigfield };
  assign expdiffprepare = _276_;
  assign expdiff = _279_;
  assign tmpexpcomp1 = _280_;
  assign expdiffverysmall = tmpexpcomp1[12];
  assign tmpexpcomp2 = _281_;
  assign expdiffsmall = tmpexpcomp2[12];
  assign expdiffsmall_d1 = _223_;
  assign expdiffsmall_d2 = _234_;
  assign tmpexpcomp3 = _282_;
  assign expdiffnotlarge = tmpexpcomp3[12];
  assign shiftvalue = _283_;
  assign shiftvalue_d1 = _245_;
  assign shiftvalue_d2 = _256_;
  assign csigshifted = \rightshiftercomponent:759 ;
  assign sticky1 = _344_;
  assign sticky1_d1 = _267_;
  assign sticky1_d2 = _278_;
  assign sticky1_d3 = _289_;
  assign sticky1_d4 = _300_;
  assign csigshiftedt = csigshifted[215:53];
  assign p = _346_;
  assign paligned = { 55'h00000000000000, p, 2'h0 };
  assign paligned_d1 = _311_;
  assign csiginverted = _348_;
  assign bigsum = _351_;
  assign bigsum2 = _352_;
  assign rsgntentative = _355_;
  assign rsgntentative_d1 = _322_;
  assign bigsumabs = _359_;
  assign bigsumabslowerbits = bigsumabs[109:0];
  assign l = \ieeefma_11_52_f150_uid2leadingzerocounter:922 ;
  assign tmpexpcompres1 = _361_;
  assign tmpexpcompres1_d1 = _334_;
  assign tmpexpcompres1_d2 = _345_;
  assign tmpexpcompres2 = _362_;
  assign rissubnormal = _365_;
  assign rissubnormal_d1 = _356_;
  assign rissubnormal_d2 = _367_;
  assign rissubnormal_d3 = _378_;
  assign riszero = _368_;
  assign riszero_d1 = _389_;
  assign riszero_d2 = _400_;
  assign riszero_d3 = _411_;
  assign rsgn = _375_;
  assign rsgn_d1 = _422_;
  assign rsgn_d2 = _433_;
  assign rsgn_d3 = _445_;
  assign shiftvaluecasesubnormal = _377_;
  assign shiftvaluecasesubnormal_d1 = _456_;
  assign shiftvaluecasesubnormal_d2 = _467_;
  assign normshiftvalue = _382_;
  assign bigsumnormd = \normalizationshifter:986 ;
  assign exptentative = _386_;
  assign exptentative_d1 = _478_;
  assign exptentative_d2 = _489_;
  assign exptentative_d3 = _500_;
  assign sticky2 = _513_;
  assign fractentative = bigsumnormd[163:108];
  assign fracleadingbitsnormal = fractentative[55:54];
  assign fracleadingbits = _514_;
  assign fracresultnormd = _516_;
  assign fracresultroundbit = _520_;
  assign fracresultstickybit = _526_;
  assign round = _536_;
  assign expupdate = _537_;
  assign exponentresult1 = _542_;
  assign resultbeforeround = { exponentresult1, fracresultnormd };
  assign resultrounded = _543_;
  assign roverflowed = _558_;
  assign finalrisinf = _559_;
  assign inf = 63'h7ff0000000000000;
  assign inf_d1 = _511_;
  assign inf_d2 = _522_;
  assign inf_d3 = _533_;
  assign inf_d4 = _544_;
  assign inf_d5 = _556_;
  assign nan = 63'h7fffffffffffffff;
  assign nan_d1 = _564_;
  assign nan_d2 = _565_;
  assign nan_d3 = _566_;
  assign nan_d4 = _567_;
  assign nan_d5 = _568_;
  assign negateab_d1 = _569_;
  assign negateab_d2 = _570_;
  assign negatec_d1 = _571_;
  assign negatec_d2 = _572_;
  assign \rightshiftercomponent:759  = _286_;
  assign \ieeefma_11_52_f150_uid2leadingzerocounter:922  = _360_;
  assign \normalizationshifter:986  = _385_;
  assign R = _562_;
endmodule

module leftshifter163_by_max_162_f150_uid8(clk, x, s, r);
  reg [7:0] _00_;
  reg [7:0] _01_;
  reg [7:0] _02_;
  reg [162:0] _03_;
  reg [163:0] _04_;
  reg [193:0] _05_;
  reg [289:0] _06_;
  wire [163:0] _07_;
  wire [165:0] _08_;
  wire [169:0] _09_;
  wire [177:0] _10_;
  wire [193:0] _11_;
  wire [225:0] _12_;
  wire [289:0] _13_;
  wire [417:0] _14_;
  input clk;
  wire clk;
  wire [162:0] level0;
  wire [162:0] level0_d1;
  wire [163:0] level1;
  wire [163:0] level1_d1;
  wire [165:0] level2;
  wire [169:0] level3;
  wire [177:0] level4;
  wire [193:0] level5;
  wire [193:0] level5_d1;
  wire [225:0] level6;
  wire [289:0] level7;
  wire [289:0] level7_d1;
  wire [417:0] level8;
  wire [7:0] ps;
  wire [7:0] ps_d1;
  wire [7:0] ps_d2;
  wire [7:0] ps_d3;
  output [324:0] r;
  wire [324:0] r;
  input [7:0] s;
  wire [7:0] s;
  input [162:0] x;
  wire [162:0] x;
  always @(posedge clk)
    _00_ <= ps;
  always @(posedge clk)
    _01_ <= ps_d1;
  always @(posedge clk)
    _02_ <= ps_d2;
  always @(posedge clk)
    _03_ <= level0;
  always @(posedge clk)
    _04_ <= level1;
  always @(posedge clk)
    _05_ <= level5;
  always @(posedge clk)
    _06_ <= level7;
  assign _07_ = ps[0] ? { level0_d1, 1'h0 } : { 1'h0, level0_d1 };
  assign _08_ = ps_d1[1] ? { level1_d1, 2'h0 } : { 2'h0, level1_d1 };
  assign _09_ = ps_d1[2] ? { level2, 4'h0 } : { 4'h0, level2 };
  assign _10_ = ps_d1[3] ? { level3, 8'h00 } : { 8'h00, level3 };
  assign _11_ = ps_d1[4] ? { level4, 16'h0000 } : { 16'h0000, level4 };
  assign _12_ = ps_d2[5] ? { level5_d1, 32'h00000000 } : { 32'h00000000, level5_d1 };
  assign _13_ = ps_d2[6] ? { level6, 64'h0000000000000000 } : { 64'h0000000000000000, level6 };
  assign _14_ = ps_d3[7] ? { level7_d1, 128'h00000000000000000000000000000000 } : { 128'h00000000000000000000000000000000, level7_d1 };
  assign ps = s;
  assign ps_d1 = _00_;
  assign ps_d2 = _01_;
  assign ps_d3 = _02_;
  assign level0 = x;
  assign level0_d1 = _03_;
  assign level1 = _07_;
  assign level1_d1 = _04_;
  assign level2 = _08_;
  assign level3 = _09_;
  assign level4 = _10_;
  assign level5 = _11_;
  assign level5_d1 = _05_;
  assign level6 = _12_;
  assign level7 = _13_;
  assign level7_d1 = _06_;
  assign level8 = _14_;
  assign r = level8[324:0];
endmodule

module lzc_110_f150_uid6(clk, i, o);
  reg _00_;
  reg [62:0] _01_;
  reg _02_;
  wire _03_;
  wire _04_;
  wire [62:0] _05_;
  wire _06_;
  wire _07_;
  wire [30:0] _08_;
  wire _09_;
  wire _10_;
  wire [14:0] _11_;
  wire _12_;
  wire _13_;
  wire [6:0] _14_;
  wire _15_;
  wire _16_;
  wire [2:0] _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire [1:0] _22_;
  input clk;
  wire clk;
  wire digit2;
  wire digit3;
  wire digit4;
  wire digit5;
  wire digit5_d1;
  wire digit6;
  wire digit6_d1;
  input [109:0] i;
  wire [109:0] i;
  wire [2:0] level2;
  wire [6:0] level3;
  wire [14:0] level4;
  wire [30:0] level5;
  wire [62:0] level6;
  wire [62:0] level6_d1;
  wire [126:0] level7;
  wire [1:0] lowbits;
  output [6:0] o;
  wire [6:0] o;
  wire [4:0] outhighbits;
  always @(posedge clk)
    _00_ <= digit6;
  always @(posedge clk)
    _01_ <= level6;
  always @(posedge clk)
    _02_ <= digit5;
  assign _03_ = level7[126:63] == 64'h0000000000000000;
  assign _04_ = _03_ ? 1'h1 : 1'h0;
  assign _05_ = digit6 ? level7[62:0] : level7[126:64];
  assign _06_ = level6[62:31] == 32'd0;
  assign _07_ = _06_ ? 1'h1 : 1'h0;
  assign _08_ = digit5_d1 ? level6_d1[30:0] : level6_d1[62:32];
  assign _09_ = level5[30:15] == 16'h0000;
  assign _10_ = _09_ ? 1'h1 : 1'h0;
  assign _11_ = digit4 ? level5[14:0] : level5[30:16];
  assign _12_ = level4[14:7] == 8'h00;
  assign _13_ = _12_ ? 1'h1 : 1'h0;
  assign _14_ = digit3 ? level4[6:0] : level4[14:8];
  assign _15_ = level3[6:3] == 4'h0;
  assign _16_ = _15_ ? 1'h1 : 1'h0;
  assign _17_ = digit2 ? level3[2:0] : level3[6:4];
  assign _18_ = level2 == 3'h0;
  assign _19_ = level2 == 3'h1;
  assign _20_ = level2 == 3'h2;
  assign _21_ = level2 == 3'h3;
  function [1:0] \1537 ;
    input [1:0] a;
    input [7:0] b;
    input [3:0] s;
    (* parallel_case *)
    casez (s)
      4'b???1:
        \1537  = b[1:0];
      4'b??1?:
        \1537  = b[3:2];
      4'b?1??:
        \1537  = b[5:4];
      4'b1???:
        \1537  = b[7:6];
      default:
        \1537  = a;
    endcase
  endfunction
  assign _22_ = \1537 (2'h0, 8'h5b, { _21_, _20_, _19_, _18_ });
  assign level7 = { i, 17'h1ffff };
  assign digit6 = _04_;
  assign digit6_d1 = _00_;
  assign level6 = _05_;
  assign level6_d1 = _01_;
  assign digit5 = _07_;
  assign digit5_d1 = _02_;
  assign level5 = _08_;
  assign digit4 = _10_;
  assign level4 = _11_;
  assign digit3 = _13_;
  assign level3 = _14_;
  assign digit2 = _16_;
  assign level2 = _17_;
  assign lowbits = _22_;
  assign outhighbits = { digit6_d1, digit5_d1, digit4, digit3, digit2 };
  assign o = { outhighbits, lowbits };
endmodule

module rightshifter53_by_max_163_f150_uid4(clk, x, s, r);
  reg [7:0] _0_;
  reg [179:0] _1_;
  wire [53:0] _2_;
  wire [55:0] _3_;
  wire [59:0] _4_;
  wire [67:0] _5_;
  wire [83:0] _6_;
  wire [115:0] _7_;
  wire [179:0] _8_;
  wire [307:0] _9_;
  input clk;
  wire clk;
  wire [52:0] level0;
  wire [53:0] level1;
  wire [55:0] level2;
  wire [59:0] level3;
  wire [67:0] level4;
  wire [83:0] level5;
  wire [115:0] level6;
  wire [179:0] level7;
  wire [179:0] level7_d1;
  wire [307:0] level8;
  wire [7:0] ps;
  wire [7:0] ps_d1;
  output [215:0] r;
  wire [215:0] r;
  input [7:0] s;
  wire [7:0] s;
  input [52:0] x;
  wire [52:0] x;
  always @(posedge clk)
    _0_ <= ps;
  always @(posedge clk)
    _1_ <= level7;
  assign _2_ = ps[0] ? { 1'h0, level0 } : { level0, 1'h0 };
  assign _3_ = ps[1] ? { 2'h0, level1 } : { level1, 2'h0 };
  assign _4_ = ps[2] ? { 4'h0, level2 } : { level2, 4'h0 };
  assign _5_ = ps[3] ? { 8'h00, level3 } : { level3, 8'h00 };
  assign _6_ = ps[4] ? { 16'h0000, level4 } : { level4, 16'h0000 };
  assign _7_ = ps[5] ? { 32'h00000000, level5 } : { level5, 32'h00000000 };
  assign _8_ = ps[6] ? { 64'h0000000000000000, level6 } : { level6, 64'h0000000000000000 };
  assign _9_ = ps_d1[7] ? { 128'h00000000000000000000000000000000, level7_d1 } : { level7_d1, 128'h00000000000000000000000000000000 };
  assign ps = s;
  assign ps_d1 = _0_;
  assign level0 = x;
  assign level1 = _2_;
  assign level2 = _3_;
  assign level3 = _4_;
  assign level4 = _5_;
  assign level5 = _6_;
  assign level6 = _7_;
  assign level7 = _8_;
  assign level7_d1 = _1_;
  assign level8 = _9_;
  assign r = level8[307:92];
endmodule
