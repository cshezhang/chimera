// This program was cloned from: https://github.com/QingXia-Ela/gdou-curriculum-design-collect
// License: MIT License

// megafunction wizard: %LPM_DIVIDE%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: lpm_divide 

// ============================================================
// File Name: DIV.v
// Megafunction Name(s):
// 			lpm_divide
//
// Simulation Library Files(s):
// 			lpm
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 9.1 Build 222 10/21/2009 SJ Web Edition
// ************************************************************


//Copyright (C) 1991-2009 Altera Corporation
//Your use of Altera Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Altera Program License 
//Subscription Agreement, Altera MegaCore Function License 
//Agreement, or other applicable license agreement, including, 
//without limitation, that your use is for the sole purpose of 
//programming logic devices manufactured by Altera and sold by 
//Altera or its authorized distributors.  Please refer to the 
//applicable agreement for further details.


//lpm_divide DEVICE_FAMILY="Stratix II" LPM_DREPRESENTATION="UNSIGNED" LPM_NREPRESENTATION="UNSIGNED" LPM_REMAINDERPOSITIVE="TRUE" LPM_WIDTHD=8 LPM_WIDTHN=8 denom numer quotient remain
//VERSION_BEGIN 9.1 cbx_cycloneii 2009:10:21:21:22:16:SJ cbx_lpm_abs 2009:10:21:21:22:16:SJ cbx_lpm_add_sub 2009:10:21:21:22:16:SJ cbx_lpm_divide 2009:10:21:21:22:16:SJ cbx_mgl 2009:10:21:21:37:49:SJ cbx_stratix 2009:10:21:21:22:16:SJ cbx_stratixii 2009:10:21:21:22:16:SJ cbx_util_mgl 2009:10:21:21:22:16:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



//sign_div_unsign DEN_REPRESENTATION="UNSIGNED" DEN_WIDTH=8 LPM_PIPELINE=0 MAXIMIZE_SPEED=5 NUM_REPRESENTATION="UNSIGNED" NUM_WIDTH=8 SKIP_BITS=0 denominator numerator quotient remainder
//VERSION_BEGIN 9.1 cbx_cycloneii 2009:10:21:21:22:16:SJ cbx_lpm_abs 2009:10:21:21:22:16:SJ cbx_lpm_add_sub 2009:10:21:21:22:16:SJ cbx_lpm_divide 2009:10:21:21:22:16:SJ cbx_mgl 2009:10:21:21:37:49:SJ cbx_stratix 2009:10:21:21:22:16:SJ cbx_stratixii 2009:10:21:21:22:16:SJ cbx_util_mgl 2009:10:21:21:22:16:SJ  VERSION_END


//alt_u_div DEVICE_FAMILY="Stratix II" LPM_PIPELINE=0 MAXIMIZE_SPEED=5 SKIP_BITS=0 WIDTH_D=8 WIDTH_N=8 WIDTH_Q=8 WIDTH_R=8 denominator numerator quotient remainder
//VERSION_BEGIN 9.1 cbx_cycloneii 2009:10:21:21:22:16:SJ cbx_lpm_abs 2009:10:21:21:22:16:SJ cbx_lpm_add_sub 2009:10:21:21:22:16:SJ cbx_lpm_divide 2009:10:21:21:22:16:SJ cbx_mgl 2009:10:21:21:37:49:SJ cbx_stratix 2009:10:21:21:22:16:SJ cbx_stratixii 2009:10:21:21:22:16:SJ cbx_util_mgl 2009:10:21:21:22:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Stratix II" LPM_DIRECTION="SUB" LPM_WIDTH=1 cout dataa datab result
//VERSION_BEGIN 9.1 cbx_cycloneii 2009:10:21:21:22:16:SJ cbx_lpm_add_sub 2009:10:21:21:22:16:SJ cbx_mgl 2009:10:21:21:37:49:SJ cbx_stratix 2009:10:21:21:22:16:SJ cbx_stratixii 2009:10:21:21:22:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Stratix II" LPM_DIRECTION="SUB" LPM_WIDTH=2 cout dataa datab result
//VERSION_BEGIN 9.1 cbx_cycloneii 2009:10:21:21:22:16:SJ cbx_lpm_add_sub 2009:10:21:21:22:16:SJ cbx_mgl 2009:10:21:21:37:49:SJ cbx_stratix 2009:10:21:21:22:16:SJ cbx_stratixii 2009:10:21:21:22:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Stratix II" LPM_DIRECTION="SUB" LPM_WIDTH=3 cout dataa datab result
//VERSION_BEGIN 9.1 cbx_cycloneii 2009:10:21:21:22:16:SJ cbx_lpm_add_sub 2009:10:21:21:22:16:SJ cbx_mgl 2009:10:21:21:37:49:SJ cbx_stratix 2009:10:21:21:22:16:SJ cbx_stratixii 2009:10:21:21:22:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Stratix II" LPM_DIRECTION="SUB" LPM_WIDTH=4 cout dataa datab result
//VERSION_BEGIN 9.1 cbx_cycloneii 2009:10:21:21:22:16:SJ cbx_lpm_add_sub 2009:10:21:21:22:16:SJ cbx_mgl 2009:10:21:21:37:49:SJ cbx_stratix 2009:10:21:21:22:16:SJ cbx_stratixii 2009:10:21:21:22:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Stratix II" LPM_DIRECTION="SUB" LPM_WIDTH=5 cout dataa datab result
//VERSION_BEGIN 9.1 cbx_cycloneii 2009:10:21:21:22:16:SJ cbx_lpm_add_sub 2009:10:21:21:22:16:SJ cbx_mgl 2009:10:21:21:37:49:SJ cbx_stratix 2009:10:21:21:22:16:SJ cbx_stratixii 2009:10:21:21:22:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Stratix II" LPM_DIRECTION="SUB" LPM_WIDTH=6 cout dataa datab result
//VERSION_BEGIN 9.1 cbx_cycloneii 2009:10:21:21:22:16:SJ cbx_lpm_add_sub 2009:10:21:21:22:16:SJ cbx_mgl 2009:10:21:21:37:49:SJ cbx_stratix 2009:10:21:21:22:16:SJ cbx_stratixii 2009:10:21:21:22:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Stratix II" LPM_DIRECTION="SUB" LPM_WIDTH=7 cout dataa datab result
//VERSION_BEGIN 9.1 cbx_cycloneii 2009:10:21:21:22:16:SJ cbx_lpm_add_sub 2009:10:21:21:22:16:SJ cbx_mgl 2009:10:21:21:37:49:SJ cbx_stratix 2009:10:21:21:22:16:SJ cbx_stratixii 2009:10:21:21:22:16:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Stratix II" LPM_DIRECTION="SUB" LPM_WIDTH=8 cout dataa datab result
//VERSION_BEGIN 9.1 cbx_cycloneii 2009:10:21:21:22:16:SJ cbx_lpm_add_sub 2009:10:21:21:22:16:SJ cbx_mgl 2009:10:21:21:37:49:SJ cbx_stratix 2009:10:21:21:22:16:SJ cbx_stratixii 2009:10:21:21:22:16:SJ  VERSION_END

//synthesis_resources = lut 44 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  DIV_alt_u_div
	( 
	denominator,
	numerator,
	quotient,
	remainder) /* synthesis synthesis_clearbox=1 */;
	input   [7:0]  denominator;
	input   [7:0]  numerator;
	output   [7:0]  quotient;
	output   [7:0]  remainder;

	wire	[1:0]	wire_add_sub_0_result_int;
	wire	wire_add_sub_0_cout;
	wire	[0:0]	wire_add_sub_0_dataa;
	wire	[0:0]	wire_add_sub_0_datab;
	wire	[0:0]	wire_add_sub_0_result;
	wire	[2:0]	wire_add_sub_1_result_int;
	wire	wire_add_sub_1_cout;
	wire	[1:0]	wire_add_sub_1_dataa;
	wire	[1:0]	wire_add_sub_1_datab;
	wire	[1:0]	wire_add_sub_1_result;
	wire	[3:0]	wire_add_sub_2_result_int;
	wire	wire_add_sub_2_cout;
	wire	[2:0]	wire_add_sub_2_dataa;
	wire	[2:0]	wire_add_sub_2_datab;
	wire	[2:0]	wire_add_sub_2_result;
	wire	[4:0]	wire_add_sub_3_result_int;
	wire	wire_add_sub_3_cout;
	wire	[3:0]	wire_add_sub_3_dataa;
	wire	[3:0]	wire_add_sub_3_datab;
	wire	[3:0]	wire_add_sub_3_result;
	wire	[5:0]	wire_add_sub_4_result_int;
	wire	wire_add_sub_4_cout;
	wire	[4:0]	wire_add_sub_4_dataa;
	wire	[4:0]	wire_add_sub_4_datab;
	wire	[4:0]	wire_add_sub_4_result;
	wire	[6:0]	wire_add_sub_5_result_int;
	wire	wire_add_sub_5_cout;
	wire	[5:0]	wire_add_sub_5_dataa;
	wire	[5:0]	wire_add_sub_5_datab;
	wire	[5:0]	wire_add_sub_5_result;
	wire	[7:0]	wire_add_sub_6_result_int;
	wire	wire_add_sub_6_cout;
	wire	[6:0]	wire_add_sub_6_dataa;
	wire	[6:0]	wire_add_sub_6_datab;
	wire	[6:0]	wire_add_sub_6_result;
	wire	[8:0]	wire_add_sub_7_result_int;
	wire	wire_add_sub_7_cout;
	wire	[7:0]	wire_add_sub_7_dataa;
	wire	[7:0]	wire_add_sub_7_datab;
	wire	[7:0]	wire_add_sub_7_result;
	wire  [80:0]  DenominatorIn;
	wire  [80:0]  DenominatorIn_tmp;
	wire  gnd_wire;
	wire  [71:0]  nose;
	wire  [71:0]  NumeratorIn;
	wire  [71:0]  NumeratorIn_tmp;
	wire  [63:0]  prestg;
	wire  [7:0]  quotient_tmp;
	wire  [71:0]  sel;
	wire  [71:0]  selnose;
	wire  [71:0]  StageIn;
	wire  [71:0]  StageIn_tmp;
	wire  [63:0]  StageOut;

	assign
		wire_add_sub_0_result_int = wire_add_sub_0_dataa - wire_add_sub_0_datab;
	assign
		wire_add_sub_0_result = wire_add_sub_0_result_int[0:0],
		wire_add_sub_0_cout = ~wire_add_sub_0_result_int[1:1];
	assign
		wire_add_sub_0_dataa = NumeratorIn[7],
		wire_add_sub_0_datab = DenominatorIn[0];
	assign
		wire_add_sub_1_result_int = wire_add_sub_1_dataa - wire_add_sub_1_datab;
	assign
		wire_add_sub_1_result = wire_add_sub_1_result_int[1:0],
		wire_add_sub_1_cout = ~wire_add_sub_1_result_int[2:2];
	assign
		wire_add_sub_1_dataa = {StageIn[8], NumeratorIn[14]},
		wire_add_sub_1_datab = DenominatorIn[10:9];
	assign
		wire_add_sub_2_result_int = wire_add_sub_2_dataa - wire_add_sub_2_datab;
	assign
		wire_add_sub_2_result = wire_add_sub_2_result_int[2:0],
		wire_add_sub_2_cout = ~wire_add_sub_2_result_int[3:3];
	assign
		wire_add_sub_2_dataa = {StageIn[17:16], NumeratorIn[21]},
		wire_add_sub_2_datab = DenominatorIn[20:18];
	assign
		wire_add_sub_3_result_int = wire_add_sub_3_dataa - wire_add_sub_3_datab;
	assign
		wire_add_sub_3_result = wire_add_sub_3_result_int[3:0],
		wire_add_sub_3_cout = ~wire_add_sub_3_result_int[4:4];
	assign
		wire_add_sub_3_dataa = {StageIn[26:24], NumeratorIn[28]},
		wire_add_sub_3_datab = DenominatorIn[30:27];
	assign
		wire_add_sub_4_result_int = wire_add_sub_4_dataa - wire_add_sub_4_datab;
	assign
		wire_add_sub_4_result = wire_add_sub_4_result_int[4:0],
		wire_add_sub_4_cout = ~wire_add_sub_4_result_int[5:5];
	assign
		wire_add_sub_4_dataa = {StageIn[35:32], NumeratorIn[35]},
		wire_add_sub_4_datab = DenominatorIn[40:36];
	assign
		wire_add_sub_5_result_int = wire_add_sub_5_dataa - wire_add_sub_5_datab;
	assign
		wire_add_sub_5_result = wire_add_sub_5_result_int[5:0],
		wire_add_sub_5_cout = ~wire_add_sub_5_result_int[6:6];
	assign
		wire_add_sub_5_dataa = {StageIn[44:40], NumeratorIn[42]},
		wire_add_sub_5_datab = DenominatorIn[50:45];
	assign
		wire_add_sub_6_result_int = wire_add_sub_6_dataa - wire_add_sub_6_datab;
	assign
		wire_add_sub_6_result = wire_add_sub_6_result_int[6:0],
		wire_add_sub_6_cout = ~wire_add_sub_6_result_int[7:7];
	assign
		wire_add_sub_6_dataa = {StageIn[53:48], NumeratorIn[49]},
		wire_add_sub_6_datab = DenominatorIn[60:54];
	assign
		wire_add_sub_7_result_int = wire_add_sub_7_dataa - wire_add_sub_7_datab;
	assign
		wire_add_sub_7_result = wire_add_sub_7_result_int[7:0],
		wire_add_sub_7_cout = ~wire_add_sub_7_result_int[8:8];
	assign
		wire_add_sub_7_dataa = {StageIn[62:56], NumeratorIn[56]},
		wire_add_sub_7_datab = DenominatorIn[70:63];
	assign
		DenominatorIn = DenominatorIn_tmp,
		DenominatorIn_tmp = {DenominatorIn[71:0], {gnd_wire, denominator}},
		gnd_wire = 1'b0,
		nose = {{8{1'b0}}, wire_add_sub_7_cout, {8{1'b0}}, wire_add_sub_6_cout, {8{1'b0}}, wire_add_sub_5_cout, {8{1'b0}}, wire_add_sub_4_cout, {8{1'b0}}, wire_add_sub_3_cout, {8{1'b0}}, wire_add_sub_2_cout, {8{1'b0}}, wire_add_sub_1_cout, {8{1'b0}}, wire_add_sub_0_cout},
		NumeratorIn = NumeratorIn_tmp,
		NumeratorIn_tmp = {NumeratorIn[63:0], numerator},
		prestg = {wire_add_sub_7_result, {1{1'b0}}, wire_add_sub_6_result, {2{1'b0}}, wire_add_sub_5_result, {3{1'b0}}, wire_add_sub_4_result, {4{1'b0}}, wire_add_sub_3_result, {5{1'b0}}, wire_add_sub_2_result, {6{1'b0}}, wire_add_sub_1_result, {7{1'b0}}, wire_add_sub_0_result},
		quotient = quotient_tmp,
		quotient_tmp = {(~ selnose[0]), (~ selnose[9]), (~ selnose[18]), (~ selnose[27]), (~ selnose[36]), (~ selnose[45]), (~ selnose[54]), (~ selnose[63])},
		remainder = StageIn[71:64],
		sel = {gnd_wire, (sel[71] | DenominatorIn[79]), (sel[70] | DenominatorIn[78]), (sel[69] | DenominatorIn[77]), (sel[68] | DenominatorIn[76]), (sel[67] | DenominatorIn[75]), (sel[66] | DenominatorIn[74]), (sel[65] | DenominatorIn[73]), gnd_wire, (sel[63] | DenominatorIn[70]), (sel[62] | DenominatorIn[69]), (sel[61] | DenominatorIn[68]), (sel[60] | DenominatorIn[67]), (sel[59] | DenominatorIn[66]), (sel[58] | DenominatorIn[65]), (sel[57] | DenominatorIn[64]), gnd_wire, (sel[55] | DenominatorIn[61]), (sel[54] | DenominatorIn[60]), (sel[53] | DenominatorIn[59]), (sel[52] | DenominatorIn[58]), (sel[51] | DenominatorIn[57]), (sel[50] | DenominatorIn[56]), (sel[49] | DenominatorIn[55]), gnd_wire, (sel[47] | DenominatorIn[52]), (sel[46] | DenominatorIn[51]), (sel[45] | DenominatorIn[50]), (sel[44] | DenominatorIn[49]), (sel[43] | DenominatorIn[48]), (sel[42] | DenominatorIn[47]), (sel[41] | DenominatorIn[46]), gnd_wire, (sel[39] | DenominatorIn[43]), (sel[38] | DenominatorIn[42]), (sel[37] | DenominatorIn[41]), (sel[36] | DenominatorIn[40]), (sel[35] | DenominatorIn[39]), (sel[34] | DenominatorIn[38]), (sel[33] | DenominatorIn[37]), gnd_wire, (sel[31] | DenominatorIn[34]), (sel[30] | DenominatorIn[33]), (sel[29] | DenominatorIn[32]), (sel[28] | DenominatorIn[31]), (sel[27] | DenominatorIn[30]), (sel[26] | DenominatorIn[29]), (sel[25] | DenominatorIn[28]), gnd_wire, (sel[23] | DenominatorIn[25]), (sel[22] | DenominatorIn[24]), (sel[21] | DenominatorIn[23]), (sel[20] | DenominatorIn[22]), (sel[19] | DenominatorIn[21]), (sel[18] | DenominatorIn[20]), (sel[17] | DenominatorIn[19]), gnd_wire, (sel[15] | DenominatorIn[16]), (sel[14] | DenominatorIn[15]), (sel[13] | DenominatorIn[14]), (sel[12] | DenominatorIn[13]), (sel[11] | DenominatorIn[12]), (sel[10] | DenominatorIn[11]), (sel[9] | DenominatorIn[10]), gnd_wire, (sel[7] | DenominatorIn[7]), (sel[6] | DenominatorIn[6]), (sel[5] | DenominatorIn[5]), (sel[4] | DenominatorIn[4]), (sel[3] | DenominatorIn[3]), (sel[2] | DenominatorIn[2]), (sel[1] | DenominatorIn[1])},
		selnose = {((~ nose[71]) | sel[71]), ((~ nose[70]) | sel[70]), ((~ nose[69]) | sel[69]), ((~ nose[68]) | sel[68]), ((~ nose[67]) | sel[67]), ((~ nose[66]) | sel[66]), ((~ nose[65]) | sel[65]), ((~ nose[64]) | sel[64]), ((~ nose[63]) | sel[63]), ((~ nose[62]) | sel[62]), ((~ nose[61]) | sel[61]), ((~ nose[60]) | sel[60]), ((~ nose[59]) | sel[59]), ((~ nose[58]) | sel[58]), ((~ nose[57]) | sel[57]), ((~ nose[56]) | sel[56]), ((~ nose[55]) | sel[55]), ((~ nose[54]) | sel[54]), ((~ nose[53]) | sel[53]), ((~ nose[52]) | sel[52]), ((~ nose[51]) | sel[51]), ((~ nose[50]) | sel[50]), ((~ nose[49]) | sel[49]), ((~ nose[48]) | sel[48]), ((~ nose[47]) | sel[47]), ((~ nose[46]) | sel[46]), ((~ nose[45]) | sel[45]), ((~ nose[44]) | sel[44]), ((~ nose[43]) | sel[43]), ((~ nose[42]) | sel[42]), ((~ nose[41]) | sel[41]), ((~ nose[40]) | sel[40]), ((~ nose[39]) | sel[39]), ((~ nose[38]) | sel[38]), ((~ nose[37]) | sel[37]), ((~ nose[36]) | sel[36]), ((~ nose[35]) | sel[35]), ((~ nose[34]) | sel[34]), ((~ nose[33]) | sel[33]), ((~ nose[32]) | sel[32]), ((~ nose[31]) | sel[31]), ((~ nose[30]) | sel[30]), ((~ nose[29]) | sel[29]), ((~ nose[28]) | sel[28]), ((~ nose[27]) | sel[27]), ((~ nose[26]) | sel[26]), ((~ nose[25]) | sel[25]), ((~ nose[24]) | sel[24]), ((~ nose[23]) | sel[23]), ((~ nose[22]) | sel[22]), ((~ nose[21]) | sel[21]), ((~ nose[20]) | sel[20]), ((~ nose[19]) | sel[19]), ((~ nose[18]) | sel[18]), ((~ nose[17]) | sel[17]), ((~ nose[16]) | sel[16]), ((~ nose[15]) | sel[15]), ((~ nose[14]) | sel[14]), ((~ nose[13]) | sel[13]), ((~ nose[12]) | sel[12]), ((~ nose[11]) | sel[11]), ((~ nose[10]) | sel[10]), ((~ nose[9]) | sel[9]), ((~ nose[8]) | sel[8]), ((~ nose[7]) | sel[7]), ((~ nose[6]) | sel[6]), ((~ nose[5]) | sel[5]), ((~ nose[4]) | sel[4]), ((~ nose[3]) | sel[3]), ((~ nose[2]) | sel[2]), ((~ nose[1]) | sel[1]), ((~ nose[0]) | sel[0])},
		StageIn = StageIn_tmp,
		StageIn_tmp = {StageOut[63:0], {8{1'b0}}},
		StageOut = {(({StageIn[62:56], NumeratorIn[56]} & {8{selnose[63]}}) | (prestg[63:56] & {8{(~ selnose[63])}})), (({StageIn[54:48], NumeratorIn[49]} & {8{selnose[54]}}) | (prestg[55:48] & {8{(~ selnose[54])}})), (({StageIn[46:40], NumeratorIn[42]} & {8{selnose[45]}}) | (prestg[47:40] & {8{(~ selnose[45])}})), (({StageIn[38:32], NumeratorIn[35]} & {8{selnose[36]}}) | (prestg[39:32] & {8{(~ selnose[36])}})), (({StageIn[30:24], NumeratorIn[28]} & {8{selnose[27]}}) | (prestg[31:24] & {8{(~ selnose[27])}})), (({StageIn[22:16], NumeratorIn[21]} & {8{selnose[18]}}) | (prestg[23:16] & {8{(~ selnose[18])}})), (({StageIn[14:8], NumeratorIn[14]} & {8{selnose[9]}}) | (prestg[15:8] & {8{(~ selnose[9])}})), (({StageIn[6:0], NumeratorIn[7]} & {8{selnose[0]}}) | (prestg[7:0] & {8{(~ selnose[0])}}))};
endmodule //DIV_alt_u_div

//synthesis_resources = lut 44 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  DIV_sign_div_unsign
	( 
	denominator,
	numerator,
	quotient,
	remainder) /* synthesis synthesis_clearbox=1 */;
	input   [7:0]  denominator;
	input   [7:0]  numerator;
	output   [7:0]  quotient;
	output   [7:0]  remainder;

	wire  [7:0]   wire_divider_quotient;
	wire  [7:0]   wire_divider_remainder;
	wire  [7:0]  norm_num;
	wire  [7:0]  protect_quotient;
	wire  [7:0]  protect_remainder;

	DIV_alt_u_div   divider
	( 
	.denominator(denominator),
	.numerator(norm_num),
	.quotient(wire_divider_quotient),
	.remainder(wire_divider_remainder));
	assign
		norm_num = numerator,
		protect_quotient = wire_divider_quotient,
		protect_remainder = wire_divider_remainder,
		quotient = protect_quotient,
		remainder = protect_remainder;
endmodule //DIV_sign_div_unsign

//synthesis_resources = lut 44 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  DIV_lpm_divide
	( 
	denom,
	numer,
	quotient,
	remain) /* synthesis synthesis_clearbox=1 */;
	input   [7:0]  denom;
	input   [7:0]  numer;
	output   [7:0]  quotient;
	output   [7:0]  remain;

	wire  [7:0]   wire_divider_quotient;
	wire  [7:0]   wire_divider_remainder;
	wire  [7:0]  numer_tmp;

	DIV_sign_div_unsign   divider
	( 
	.denominator(denom),
	.numerator(numer_tmp),
	.quotient(wire_divider_quotient),
	.remainder(wire_divider_remainder));
	assign
		numer_tmp = numer,
		quotient = wire_divider_quotient,
		remain = wire_divider_remainder;
endmodule //DIV_lpm_divide
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module DIV (
	denom,
	numer,
	quotient,
	remain)/* synthesis synthesis_clearbox = 1 */;

	input	[7:0]  denom;
	input	[7:0]  numer;
	output	[7:0]  quotient;
	output	[7:0]  remain;

	wire [7:0] sub_wire0;
	wire [7:0] sub_wire1;
	wire [7:0] quotient = sub_wire0[7:0];
	wire [7:0] remain = sub_wire1[7:0];

	DIV_lpm_divide	DIV_lpm_divide_component (
				.denom (denom),
				.numer (numer),
				.quotient (sub_wire0),
				.remain (sub_wire1));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Stratix II"
// Retrieval info: PRIVATE: PRIVATE_LPM_REMAINDERPOSITIVE STRING "TRUE"
// Retrieval info: PRIVATE: PRIVATE_MAXIMIZE_SPEED NUMERIC "-1"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "1"
// Retrieval info: PRIVATE: USING_PIPELINE NUMERIC "0"
// Retrieval info: PRIVATE: VERSION_NUMBER NUMERIC "2"
// Retrieval info: CONSTANT: LPM_DREPRESENTATION STRING "UNSIGNED"
// Retrieval info: CONSTANT: LPM_HINT STRING "LPM_REMAINDERPOSITIVE=TRUE"
// Retrieval info: CONSTANT: LPM_NREPRESENTATION STRING "UNSIGNED"
// Retrieval info: CONSTANT: LPM_TYPE STRING "LPM_DIVIDE"
// Retrieval info: CONSTANT: LPM_WIDTHD NUMERIC "8"
// Retrieval info: CONSTANT: LPM_WIDTHN NUMERIC "8"
// Retrieval info: USED_PORT: denom 0 0 8 0 INPUT NODEFVAL denom[7..0]
// Retrieval info: USED_PORT: numer 0 0 8 0 INPUT NODEFVAL numer[7..0]
// Retrieval info: USED_PORT: quotient 0 0 8 0 OUTPUT NODEFVAL quotient[7..0]
// Retrieval info: USED_PORT: remain 0 0 8 0 OUTPUT NODEFVAL remain[7..0]
// Retrieval info: CONNECT: @numer 0 0 8 0 numer 0 0 8 0
// Retrieval info: CONNECT: @denom 0 0 8 0 denom 0 0 8 0
// Retrieval info: CONNECT: quotient 0 0 8 0 @quotient 0 0 8 0
// Retrieval info: CONNECT: remain 0 0 8 0 @remain 0 0 8 0
// Retrieval info: LIBRARY: lpm lpm.lpm_components.all
// Retrieval info: GEN_FILE: TYPE_NORMAL DIV.vhd TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL DIV.inc TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL DIV.cmp TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL DIV.bsf TRUE FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL DIV_inst.vhd TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL DIV_syn.v TRUE
// Retrieval info: LIB_FILE: lpm
