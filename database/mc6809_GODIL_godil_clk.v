////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : xaw2verilog
//  /   /         Filename : godil_clk.v
// /___/   /\     Timestamp : 10/01/2016 21:49:51
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: xaw2verilog -st C:\Users\gmiller\OneDrive\mcm6809\GODIL\godil6809e\godil6809e\ipcore_dir\.\godil_clk.xaw C:\Users\gmiller\OneDrive\mcm6809\GODIL\godil6809e\godil6809e\ipcore_dir\.\godil_clk
//Design Name: godil_clk
//Device: xc3s500e-4vq100
//
// Module godil_clk
// Generated by Xilinx Architecture Wizard
// Written for synthesis tool: XST
// Period Jitter (unit interval) for block DCM_SP_INST = 0.10 UI
// Period Jitter (Peak-to-Peak) for block DCM_SP_INST = 0.70 ns
`timescale 1ns / 1ps

module godil_clk(CLKIN_IN, 
                 USER_RST_IN, 
                 CLKFX_OUT, 
                 CLKIN_IBUFG_OUT);

    input CLKIN_IN;
    input USER_RST_IN;
   output CLKFX_OUT;
   output CLKIN_IBUFG_OUT;
   
   wire CLKFX_BUF;
   wire CLKIN_IBUFG;
   wire FDS_Q_OUT;
   wire FD1_Q_OUT;
   wire FD2_Q_OUT;
   wire FD3_Q_OUT;
   wire GND_BIT;
   wire OR3_O_OUT;
   wire RST_IN;
   
   assign GND_BIT = 0;
   assign CLKIN_IBUFG_OUT = CLKIN_IBUFG;
   BUFG  CLKFX_BUFG_INST (.I(CLKFX_BUF), 
                         .O(CLKFX_OUT));
   IBUFG  CLKIN_IBUFG_INST (.I(CLKIN_IN), 
                           .O(CLKIN_IBUFG));
   DCM_SP #( .CLK_FEEDBACK("NONE"), .CLKDV_DIVIDE(2.0), .CLKFX_DIVIDE(1), 
         .CLKFX_MULTIPLY(6), .CLKIN_DIVIDE_BY_2("FALSE"), 
         .CLKIN_PERIOD(20.345), .CLKOUT_PHASE_SHIFT("NONE"), 
         .DESKEW_ADJUST("SYSTEM_SYNCHRONOUS"), .DFS_FREQUENCY_MODE("LOW"), 
         .DLL_FREQUENCY_MODE("LOW"), .DUTY_CYCLE_CORRECTION("TRUE"), 
         .FACTORY_JF(16'hC080), .PHASE_SHIFT(0), .STARTUP_WAIT("FALSE") ) 
         DCM_SP_INST (.CLKFB(GND_BIT), 
                       .CLKIN(CLKIN_IBUFG), 
                       .DSSEN(GND_BIT), 
                       .PSCLK(GND_BIT), 
                       .PSEN(GND_BIT), 
                       .PSINCDEC(GND_BIT), 
                       .RST(RST_IN), 
                       .CLKDV(), 
                       .CLKFX(CLKFX_BUF), 
                       .CLKFX180(), 
                       .CLK0(), 
                       .CLK2X(), 
                       .CLK2X180(), 
                       .CLK90(), 
                       .CLK180(), 
                       .CLK270(), 
                       .LOCKED(), 
                       .PSDONE(), 
                       .STATUS());
   FDS  FDS_INST (.C(CLKIN_IBUFG), 
                 .D(GND_BIT), 
                 .S(GND_BIT), 
                 .Q(FDS_Q_OUT));
   FD  FD1_INST (.C(CLKIN_IBUFG), 
                .D(FDS_Q_OUT), 
                .Q(FD1_Q_OUT));
   FD  FD2_INST (.C(CLKIN_IBUFG), 
                .D(FD1_Q_OUT), 
                .Q(FD2_Q_OUT));
   FD  FD3_INST (.C(CLKIN_IBUFG), 
                .D(FD2_Q_OUT), 
                .Q(FD3_Q_OUT));
   OR2  OR2_INST (.I0(USER_RST_IN), 
                 .I1(OR3_O_OUT), 
                 .O(RST_IN));
   OR3  OR3_INST (.I0(FD3_Q_OUT), 
                 .I1(FD2_Q_OUT), 
                 .I2(FD1_Q_OUT), 
                 .O(OR3_O_OUT));
endmodule
