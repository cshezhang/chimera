	soc_system u0 (
		.avalon_clk_clk                       (<connected-to-avalon_clk_clk>),                       //                  avalon_clk.clk
		.avalon_reset_reset_n                 (<connected-to-avalon_reset_reset_n>),                 //                avalon_reset.reset_n
		.avalon_clk_lw_clk                    (<connected-to-avalon_clk_lw_clk>),                    //               avalon_clk_lw.clk
		.avalon_reset_lw_reset_n              (<connected-to-avalon_reset_lw_reset_n>),              //             avalon_reset_lw.reset_n
		.memory_mem_a                         (<connected-to-memory_mem_a>),                         //                      memory.mem_a
		.memory_mem_ba                        (<connected-to-memory_mem_ba>),                        //                            .mem_ba
		.memory_mem_ck                        (<connected-to-memory_mem_ck>),                        //                            .mem_ck
		.memory_mem_ck_n                      (<connected-to-memory_mem_ck_n>),                      //                            .mem_ck_n
		.memory_mem_cke                       (<connected-to-memory_mem_cke>),                       //                            .mem_cke
		.memory_mem_cs_n                      (<connected-to-memory_mem_cs_n>),                      //                            .mem_cs_n
		.memory_mem_ras_n                     (<connected-to-memory_mem_ras_n>),                     //                            .mem_ras_n
		.memory_mem_cas_n                     (<connected-to-memory_mem_cas_n>),                     //                            .mem_cas_n
		.memory_mem_we_n                      (<connected-to-memory_mem_we_n>),                      //                            .mem_we_n
		.memory_mem_reset_n                   (<connected-to-memory_mem_reset_n>),                   //                            .mem_reset_n
		.memory_mem_dq                        (<connected-to-memory_mem_dq>),                        //                            .mem_dq
		.memory_mem_dqs                       (<connected-to-memory_mem_dqs>),                       //                            .mem_dqs
		.memory_mem_dqs_n                     (<connected-to-memory_mem_dqs_n>),                     //                            .mem_dqs_n
		.memory_mem_odt                       (<connected-to-memory_mem_odt>),                       //                            .mem_odt
		.memory_mem_dm                        (<connected-to-memory_mem_dm>),                        //                            .mem_dm
		.memory_oct_rzqin                     (<connected-to-memory_oct_rzqin>),                     //                            .oct_rzqin
		.hps_io_hps_io_emac1_inst_TX_CLK      (<connected-to-hps_io_hps_io_emac1_inst_TX_CLK>),      //                      hps_io.hps_io_emac1_inst_TX_CLK
		.hps_io_hps_io_emac1_inst_TXD0        (<connected-to-hps_io_hps_io_emac1_inst_TXD0>),        //                            .hps_io_emac1_inst_TXD0
		.hps_io_hps_io_emac1_inst_TXD1        (<connected-to-hps_io_hps_io_emac1_inst_TXD1>),        //                            .hps_io_emac1_inst_TXD1
		.hps_io_hps_io_emac1_inst_TXD2        (<connected-to-hps_io_hps_io_emac1_inst_TXD2>),        //                            .hps_io_emac1_inst_TXD2
		.hps_io_hps_io_emac1_inst_TXD3        (<connected-to-hps_io_hps_io_emac1_inst_TXD3>),        //                            .hps_io_emac1_inst_TXD3
		.hps_io_hps_io_emac1_inst_RXD0        (<connected-to-hps_io_hps_io_emac1_inst_RXD0>),        //                            .hps_io_emac1_inst_RXD0
		.hps_io_hps_io_emac1_inst_MDIO        (<connected-to-hps_io_hps_io_emac1_inst_MDIO>),        //                            .hps_io_emac1_inst_MDIO
		.hps_io_hps_io_emac1_inst_MDC         (<connected-to-hps_io_hps_io_emac1_inst_MDC>),         //                            .hps_io_emac1_inst_MDC
		.hps_io_hps_io_emac1_inst_RX_CTL      (<connected-to-hps_io_hps_io_emac1_inst_RX_CTL>),      //                            .hps_io_emac1_inst_RX_CTL
		.hps_io_hps_io_emac1_inst_TX_CTL      (<connected-to-hps_io_hps_io_emac1_inst_TX_CTL>),      //                            .hps_io_emac1_inst_TX_CTL
		.hps_io_hps_io_emac1_inst_RX_CLK      (<connected-to-hps_io_hps_io_emac1_inst_RX_CLK>),      //                            .hps_io_emac1_inst_RX_CLK
		.hps_io_hps_io_emac1_inst_RXD1        (<connected-to-hps_io_hps_io_emac1_inst_RXD1>),        //                            .hps_io_emac1_inst_RXD1
		.hps_io_hps_io_emac1_inst_RXD2        (<connected-to-hps_io_hps_io_emac1_inst_RXD2>),        //                            .hps_io_emac1_inst_RXD2
		.hps_io_hps_io_emac1_inst_RXD3        (<connected-to-hps_io_hps_io_emac1_inst_RXD3>),        //                            .hps_io_emac1_inst_RXD3
		.hps_io_hps_io_sdio_inst_CMD          (<connected-to-hps_io_hps_io_sdio_inst_CMD>),          //                            .hps_io_sdio_inst_CMD
		.hps_io_hps_io_sdio_inst_D0           (<connected-to-hps_io_hps_io_sdio_inst_D0>),           //                            .hps_io_sdio_inst_D0
		.hps_io_hps_io_sdio_inst_D1           (<connected-to-hps_io_hps_io_sdio_inst_D1>),           //                            .hps_io_sdio_inst_D1
		.hps_io_hps_io_sdio_inst_CLK          (<connected-to-hps_io_hps_io_sdio_inst_CLK>),          //                            .hps_io_sdio_inst_CLK
		.hps_io_hps_io_sdio_inst_D2           (<connected-to-hps_io_hps_io_sdio_inst_D2>),           //                            .hps_io_sdio_inst_D2
		.hps_io_hps_io_sdio_inst_D3           (<connected-to-hps_io_hps_io_sdio_inst_D3>),           //                            .hps_io_sdio_inst_D3
		.hps_io_hps_io_usb1_inst_D0           (<connected-to-hps_io_hps_io_usb1_inst_D0>),           //                            .hps_io_usb1_inst_D0
		.hps_io_hps_io_usb1_inst_D1           (<connected-to-hps_io_hps_io_usb1_inst_D1>),           //                            .hps_io_usb1_inst_D1
		.hps_io_hps_io_usb1_inst_D2           (<connected-to-hps_io_hps_io_usb1_inst_D2>),           //                            .hps_io_usb1_inst_D2
		.hps_io_hps_io_usb1_inst_D3           (<connected-to-hps_io_hps_io_usb1_inst_D3>),           //                            .hps_io_usb1_inst_D3
		.hps_io_hps_io_usb1_inst_D4           (<connected-to-hps_io_hps_io_usb1_inst_D4>),           //                            .hps_io_usb1_inst_D4
		.hps_io_hps_io_usb1_inst_D5           (<connected-to-hps_io_hps_io_usb1_inst_D5>),           //                            .hps_io_usb1_inst_D5
		.hps_io_hps_io_usb1_inst_D6           (<connected-to-hps_io_hps_io_usb1_inst_D6>),           //                            .hps_io_usb1_inst_D6
		.hps_io_hps_io_usb1_inst_D7           (<connected-to-hps_io_hps_io_usb1_inst_D7>),           //                            .hps_io_usb1_inst_D7
		.hps_io_hps_io_usb1_inst_CLK          (<connected-to-hps_io_hps_io_usb1_inst_CLK>),          //                            .hps_io_usb1_inst_CLK
		.hps_io_hps_io_usb1_inst_STP          (<connected-to-hps_io_hps_io_usb1_inst_STP>),          //                            .hps_io_usb1_inst_STP
		.hps_io_hps_io_usb1_inst_DIR          (<connected-to-hps_io_hps_io_usb1_inst_DIR>),          //                            .hps_io_usb1_inst_DIR
		.hps_io_hps_io_usb1_inst_NXT          (<connected-to-hps_io_hps_io_usb1_inst_NXT>),          //                            .hps_io_usb1_inst_NXT
		.hps_io_hps_io_spim1_inst_CLK         (<connected-to-hps_io_hps_io_spim1_inst_CLK>),         //                            .hps_io_spim1_inst_CLK
		.hps_io_hps_io_spim1_inst_MOSI        (<connected-to-hps_io_hps_io_spim1_inst_MOSI>),        //                            .hps_io_spim1_inst_MOSI
		.hps_io_hps_io_spim1_inst_MISO        (<connected-to-hps_io_hps_io_spim1_inst_MISO>),        //                            .hps_io_spim1_inst_MISO
		.hps_io_hps_io_spim1_inst_SS0         (<connected-to-hps_io_hps_io_spim1_inst_SS0>),         //                            .hps_io_spim1_inst_SS0
		.hps_io_hps_io_uart0_inst_RX          (<connected-to-hps_io_hps_io_uart0_inst_RX>),          //                            .hps_io_uart0_inst_RX
		.hps_io_hps_io_uart0_inst_TX          (<connected-to-hps_io_hps_io_uart0_inst_TX>),          //                            .hps_io_uart0_inst_TX
		.hps_io_hps_io_i2c0_inst_SDA          (<connected-to-hps_io_hps_io_i2c0_inst_SDA>),          //                            .hps_io_i2c0_inst_SDA
		.hps_io_hps_io_i2c0_inst_SCL          (<connected-to-hps_io_hps_io_i2c0_inst_SCL>),          //                            .hps_io_i2c0_inst_SCL
		.hps_io_hps_io_i2c1_inst_SDA          (<connected-to-hps_io_hps_io_i2c1_inst_SDA>),          //                            .hps_io_i2c1_inst_SDA
		.hps_io_hps_io_i2c1_inst_SCL          (<connected-to-hps_io_hps_io_i2c1_inst_SCL>),          //                            .hps_io_i2c1_inst_SCL
		.hps_io_hps_io_gpio_inst_GPIO09       (<connected-to-hps_io_hps_io_gpio_inst_GPIO09>),       //                            .hps_io_gpio_inst_GPIO09
		.hps_io_hps_io_gpio_inst_GPIO35       (<connected-to-hps_io_hps_io_gpio_inst_GPIO35>),       //                            .hps_io_gpio_inst_GPIO35
		.hps_io_hps_io_gpio_inst_GPIO40       (<connected-to-hps_io_hps_io_gpio_inst_GPIO40>),       //                            .hps_io_gpio_inst_GPIO40
		.hps_io_hps_io_gpio_inst_GPIO53       (<connected-to-hps_io_hps_io_gpio_inst_GPIO53>),       //                            .hps_io_gpio_inst_GPIO53
		.hps_io_hps_io_gpio_inst_GPIO54       (<connected-to-hps_io_hps_io_gpio_inst_GPIO54>),       //                            .hps_io_gpio_inst_GPIO54
		.hps_io_hps_io_gpio_inst_GPIO61       (<connected-to-hps_io_hps_io_gpio_inst_GPIO61>),       //                            .hps_io_gpio_inst_GPIO61
		.hps_0_f2h_cold_reset_req_reset_n     (<connected-to-hps_0_f2h_cold_reset_req_reset_n>),     //    hps_0_f2h_cold_reset_req.reset_n
		.hps_0_f2h_debug_reset_req_reset_n    (<connected-to-hps_0_f2h_debug_reset_req_reset_n>),    //   hps_0_f2h_debug_reset_req.reset_n
		.hps_0_f2h_stm_hw_events_stm_hwevents (<connected-to-hps_0_f2h_stm_hw_events_stm_hwevents>), //     hps_0_f2h_stm_hw_events.stm_hwevents
		.hps_0_f2h_warm_reset_req_reset_n     (<connected-to-hps_0_f2h_warm_reset_req_reset_n>),     //    hps_0_f2h_warm_reset_req.reset_n
		.hps_0_h2f_reset_reset_n              (<connected-to-hps_0_h2f_reset_reset_n>),              //             hps_0_h2f_reset.reset_n
		.avalon_f2s0_address                  (<connected-to-avalon_f2s0_address>),                  //                 avalon_f2s0.address
		.avalon_f2s0_burstcount               (<connected-to-avalon_f2s0_burstcount>),               //                            .burstcount
		.avalon_f2s0_waitrequest              (<connected-to-avalon_f2s0_waitrequest>),              //                            .waitrequest
		.avalon_f2s0_readdata                 (<connected-to-avalon_f2s0_readdata>),                 //                            .readdata
		.avalon_f2s0_readdatavalid            (<connected-to-avalon_f2s0_readdatavalid>),            //                            .readdatavalid
		.avalon_f2s0_read                     (<connected-to-avalon_f2s0_read>),                     //                            .read
		.avalon_f2s0_writedata                (<connected-to-avalon_f2s0_writedata>),                //                            .writedata
		.avalon_f2s0_byteenable               (<connected-to-avalon_f2s0_byteenable>),               //                            .byteenable
		.avalon_f2s0_write                    (<connected-to-avalon_f2s0_write>),                    //                            .write
		.led_pio_external_connection_export   (<connected-to-led_pio_external_connection_export>),   // led_pio_external_connection.export
		.avalon_f2h_address                   (<connected-to-avalon_f2h_address>),                   //                  avalon_f2h.address
		.avalon_f2h_waitrequest               (<connected-to-avalon_f2h_waitrequest>),               //                            .waitrequest
		.avalon_f2h_burstcount                (<connected-to-avalon_f2h_burstcount>),                //                            .burstcount
		.avalon_f2h_byteenable                (<connected-to-avalon_f2h_byteenable>),                //                            .byteenable
		.avalon_f2h_beginbursttransfer        (<connected-to-avalon_f2h_beginbursttransfer>),        //                            .beginbursttransfer
		.avalon_f2h_begintransfer             (<connected-to-avalon_f2h_begintransfer>),             //                            .begintransfer
		.avalon_f2h_read                      (<connected-to-avalon_f2h_read>),                      //                            .read
		.avalon_f2h_readdata                  (<connected-to-avalon_f2h_readdata>),                  //                            .readdata
		.avalon_f2h_readdatavalid             (<connected-to-avalon_f2h_readdatavalid>),             //                            .readdatavalid
		.avalon_f2h_write                     (<connected-to-avalon_f2h_write>),                     //                            .write
		.avalon_f2h_writedata                 (<connected-to-avalon_f2h_writedata>),                 //                            .writedata
		.avalon_h2f_address                   (<connected-to-avalon_h2f_address>),                   //                  avalon_h2f.address
		.avalon_h2f_write                     (<connected-to-avalon_h2f_write>),                     //                            .write
		.avalon_h2f_read                      (<connected-to-avalon_h2f_read>),                      //                            .read
		.avalon_h2f_readdata                  (<connected-to-avalon_h2f_readdata>),                  //                            .readdata
		.avalon_h2f_writedata                 (<connected-to-avalon_h2f_writedata>),                 //                            .writedata
		.avalon_h2f_begintransfer             (<connected-to-avalon_h2f_begintransfer>),             //                            .begintransfer
		.avalon_h2f_beginbursttransfer        (<connected-to-avalon_h2f_beginbursttransfer>),        //                            .beginbursttransfer
		.avalon_h2f_burstcount                (<connected-to-avalon_h2f_burstcount>),                //                            .burstcount
		.avalon_h2f_byteenable                (<connected-to-avalon_h2f_byteenable>),                //                            .byteenable
		.avalon_h2f_readdatavalid             (<connected-to-avalon_h2f_readdatavalid>),             //                            .readdatavalid
		.avalon_h2f_waitrequest               (<connected-to-avalon_h2f_waitrequest>),               //                            .waitrequest
		.avalon_h2f_lw_address                (<connected-to-avalon_h2f_lw_address>),                //               avalon_h2f_lw.address
		.avalon_h2f_lw_write                  (<connected-to-avalon_h2f_lw_write>),                  //                            .write
		.avalon_h2f_lw_read                   (<connected-to-avalon_h2f_lw_read>),                   //                            .read
		.avalon_h2f_lw_readdata               (<connected-to-avalon_h2f_lw_readdata>),               //                            .readdata
		.avalon_h2f_lw_writedata              (<connected-to-avalon_h2f_lw_writedata>),              //                            .writedata
		.avalon_h2f_lw_begintransfer          (<connected-to-avalon_h2f_lw_begintransfer>),          //                            .begintransfer
		.avalon_h2f_lw_beginbursttransfer     (<connected-to-avalon_h2f_lw_beginbursttransfer>),     //                            .beginbursttransfer
		.avalon_h2f_lw_burstcount             (<connected-to-avalon_h2f_lw_burstcount>),             //                            .burstcount
		.avalon_h2f_lw_byteenable             (<connected-to-avalon_h2f_lw_byteenable>),             //                            .byteenable
		.avalon_h2f_lw_readdatavalid          (<connected-to-avalon_h2f_lw_readdatavalid>),          //                            .readdatavalid
		.avalon_h2f_lw_waitrequest            (<connected-to-avalon_h2f_lw_waitrequest>),            //                            .waitrequest
		.cnn_inst_info_export                 (<connected-to-cnn_inst_info_export>),                 //               cnn_inst_info.export
		.video_block_number_export            (<connected-to-video_block_number_export>),            //          video_block_number.export
		.avalon_f2s1_address                  (<connected-to-avalon_f2s1_address>),                  //                 avalon_f2s1.address
		.avalon_f2s1_burstcount               (<connected-to-avalon_f2s1_burstcount>),               //                            .burstcount
		.avalon_f2s1_waitrequest              (<connected-to-avalon_f2s1_waitrequest>),              //                            .waitrequest
		.avalon_f2s1_readdata                 (<connected-to-avalon_f2s1_readdata>),                 //                            .readdata
		.avalon_f2s1_readdatavalid            (<connected-to-avalon_f2s1_readdatavalid>),            //                            .readdatavalid
		.avalon_f2s1_read                     (<connected-to-avalon_f2s1_read>),                     //                            .read
		.avalon_f2s1_writedata                (<connected-to-avalon_f2s1_writedata>),                //                            .writedata
		.avalon_f2s1_byteenable               (<connected-to-avalon_f2s1_byteenable>),               //                            .byteenable
		.avalon_f2s1_write                    (<connected-to-avalon_f2s1_write>),                    //                            .write
		.pd_bbox_frame_export                 (<connected-to-pd_bbox_frame_export>),                 //               pd_bbox_frame.export
		.pd_bbox_h2f_lw_address               (<connected-to-pd_bbox_h2f_lw_address>),               //              pd_bbox_h2f_lw.address
		.pd_bbox_h2f_lw_write                 (<connected-to-pd_bbox_h2f_lw_write>),                 //                            .write
		.pd_bbox_h2f_lw_read                  (<connected-to-pd_bbox_h2f_lw_read>),                  //                            .read
		.pd_bbox_h2f_lw_readdata              (<connected-to-pd_bbox_h2f_lw_readdata>),              //                            .readdata
		.pd_bbox_h2f_lw_writedata             (<connected-to-pd_bbox_h2f_lw_writedata>),             //                            .writedata
		.pd_bbox_h2f_lw_begintransfer         (<connected-to-pd_bbox_h2f_lw_begintransfer>),         //                            .begintransfer
		.pd_bbox_h2f_lw_beginbursttransfer    (<connected-to-pd_bbox_h2f_lw_beginbursttransfer>),    //                            .beginbursttransfer
		.pd_bbox_h2f_lw_burstcount            (<connected-to-pd_bbox_h2f_lw_burstcount>),            //                            .burstcount
		.pd_bbox_h2f_lw_byteenable            (<connected-to-pd_bbox_h2f_lw_byteenable>),            //                            .byteenable
		.pd_bbox_h2f_lw_readdatavalid         (<connected-to-pd_bbox_h2f_lw_readdatavalid>),         //                            .readdatavalid
		.pd_bbox_h2f_lw_waitrequest           (<connected-to-pd_bbox_h2f_lw_waitrequest>),           //                            .waitrequest
		.avalon_f2s2_address                  (<connected-to-avalon_f2s2_address>),                  //                 avalon_f2s2.address
		.avalon_f2s2_burstcount               (<connected-to-avalon_f2s2_burstcount>),               //                            .burstcount
		.avalon_f2s2_waitrequest              (<connected-to-avalon_f2s2_waitrequest>),              //                            .waitrequest
		.avalon_f2s2_readdata                 (<connected-to-avalon_f2s2_readdata>),                 //                            .readdata
		.avalon_f2s2_readdatavalid            (<connected-to-avalon_f2s2_readdatavalid>),            //                            .readdatavalid
		.avalon_f2s2_read                     (<connected-to-avalon_f2s2_read>),                     //                            .read
		.avalon_f2s2_writedata                (<connected-to-avalon_f2s2_writedata>),                //                            .writedata
		.avalon_f2s2_byteenable               (<connected-to-avalon_f2s2_byteenable>),               //                            .byteenable
		.avalon_f2s2_write                    (<connected-to-avalon_f2s2_write>)                     //                            .write
	);

