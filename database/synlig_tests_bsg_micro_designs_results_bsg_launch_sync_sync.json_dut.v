/* Generated by Yosys 0.27+9 (git sha1 101d19bb6, gcc 11.2.0-7ubuntu2 -fPIC -Os) */

(* top =  1  *)

module bsg_launch_sync_sync(iclk_i, iclk_reset_i, oclk_i, iclk_data_i, iclk_data_o, oclk_data_o);
  
  input [15:0] iclk_data_i;
  wire [15:0] iclk_data_i;
  
  output [15:0] iclk_data_o;
  wire [15:0] iclk_data_o;
  
  input iclk_i;
  wire iclk_i;
  
  input iclk_reset_i;
  wire iclk_reset_i;
  
  output [15:0] oclk_data_o;
  wire [15:0] oclk_data_o;
  
  input oclk_i;
  wire oclk_i;
  (* module_not_derived = 32'd1 *)
  
  bsg_launch_sync_sync_posedge_8_unit \sync.p.maxb[0].blss  (
    .iclk_data_i(iclk_data_i[7:0]),
    .iclk_data_o(iclk_data_o[7:0]),
    .iclk_i(iclk_i),
    .iclk_reset_i(iclk_reset_i),
    .oclk_data_o(oclk_data_o[7:0]),
    .oclk_i(oclk_i)
  );
  (* module_not_derived = 32'd1 *)
  
  bsg_launch_sync_sync_posedge_8_unit \sync.p.maxb[1].blss  (
    .iclk_data_i(iclk_data_i[15:8]),
    .iclk_data_o(iclk_data_o[15:8]),
    .iclk_i(iclk_i),
    .iclk_reset_i(iclk_reset_i),
    .oclk_data_o(oclk_data_o[15:8]),
    .oclk_i(oclk_i)
  );
endmodule


module bsg_launch_sync_sync_posedge_8_unit(iclk_i, iclk_reset_i, oclk_i, iclk_data_i, iclk_data_o, oclk_data_o);
  
  reg [7:0] bsg_SYNC_1_r;
  
  reg [7:0] bsg_SYNC_2_r;
  
  reg [7:0] bsg_SYNC_LNCH_r;
  
  input [7:0] iclk_data_i;
  wire [7:0] iclk_data_i;
  
  output [7:0] iclk_data_o;
  wire [7:0] iclk_data_o;
  
  input iclk_i;
  wire iclk_i;
  
  input iclk_reset_i;
  wire iclk_reset_i;
  
  output [7:0] oclk_data_o;
  wire [7:0] oclk_data_o;
  
  input oclk_i;
  wire oclk_i;
  (* \always_ff  = 32'd1 *)
  
  always @(posedge oclk_i)
    bsg_SYNC_2_r[4] <= bsg_SYNC_1_r[4];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge oclk_i)
    bsg_SYNC_2_r[5] <= bsg_SYNC_1_r[5];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge oclk_i)
    bsg_SYNC_2_r[6] <= bsg_SYNC_1_r[6];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge oclk_i)
    bsg_SYNC_2_r[7] <= bsg_SYNC_1_r[7];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge oclk_i)
    bsg_SYNC_1_r[0] <= bsg_SYNC_LNCH_r[0];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge oclk_i)
    bsg_SYNC_1_r[1] <= bsg_SYNC_LNCH_r[1];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge oclk_i)
    bsg_SYNC_1_r[2] <= bsg_SYNC_LNCH_r[2];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge oclk_i)
    bsg_SYNC_1_r[3] <= bsg_SYNC_LNCH_r[3];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge oclk_i)
    bsg_SYNC_1_r[4] <= bsg_SYNC_LNCH_r[4];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge oclk_i)
    bsg_SYNC_1_r[5] <= bsg_SYNC_LNCH_r[5];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge oclk_i)
    bsg_SYNC_1_r[6] <= bsg_SYNC_LNCH_r[6];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge oclk_i)
    bsg_SYNC_1_r[7] <= bsg_SYNC_LNCH_r[7];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge iclk_i)
    if (iclk_reset_i) bsg_SYNC_LNCH_r[0] <= 1'h0;
    else bsg_SYNC_LNCH_r[0] <= iclk_data_i[0];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge iclk_i)
    if (iclk_reset_i) bsg_SYNC_LNCH_r[1] <= 1'h0;
    else bsg_SYNC_LNCH_r[1] <= iclk_data_i[1];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge iclk_i)
    if (iclk_reset_i) bsg_SYNC_LNCH_r[2] <= 1'h0;
    else bsg_SYNC_LNCH_r[2] <= iclk_data_i[2];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge iclk_i)
    if (iclk_reset_i) bsg_SYNC_LNCH_r[3] <= 1'h0;
    else bsg_SYNC_LNCH_r[3] <= iclk_data_i[3];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge iclk_i)
    if (iclk_reset_i) bsg_SYNC_LNCH_r[4] <= 1'h0;
    else bsg_SYNC_LNCH_r[4] <= iclk_data_i[4];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge iclk_i)
    if (iclk_reset_i) bsg_SYNC_LNCH_r[5] <= 1'h0;
    else bsg_SYNC_LNCH_r[5] <= iclk_data_i[5];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge iclk_i)
    if (iclk_reset_i) bsg_SYNC_LNCH_r[6] <= 1'h0;
    else bsg_SYNC_LNCH_r[6] <= iclk_data_i[6];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge iclk_i)
    if (iclk_reset_i) bsg_SYNC_LNCH_r[7] <= 1'h0;
    else bsg_SYNC_LNCH_r[7] <= iclk_data_i[7];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge oclk_i)
    bsg_SYNC_2_r[0] <= bsg_SYNC_1_r[0];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge oclk_i)
    bsg_SYNC_2_r[1] <= bsg_SYNC_1_r[1];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge oclk_i)
    bsg_SYNC_2_r[2] <= bsg_SYNC_1_r[2];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge oclk_i)
    bsg_SYNC_2_r[3] <= bsg_SYNC_1_r[3];
  assign iclk_data_o = bsg_SYNC_LNCH_r;
  assign oclk_data_o = bsg_SYNC_2_r;
endmodule

