/* Generated by Yosys 0.27+9 (git sha1 101d19bb6, gcc 11.2.0-7ubuntu2 -fPIC -Os) */

(* top =  1  *)

module bsg_lfsr(clk, reset_i, yumi_i, o);
  
  input clk;
  wire clk;
  
  output [31:0] o;
  wire [31:0] o;
  
  wire [31:0] o_n;
  
  reg [31:0] o_r;
  
  input reset_i;
  wire reset_i;
  
  wire [31:0] xor_mask;
  
  input yumi_i;
  wire yumi_i;
  assign o_n[25] = o_r[0] ^ o_r[26];
  assign o_n[26] = o_r[27] ^ o_r[0];
  assign o_n[29] = o_r[30] ^ o_r[0];
  
  always @(posedge clk)
    if (reset_i) o_r[4] <= 1'h0;
    else if (yumi_i) o_r[4] <= o_r[5];
  
  always @(posedge clk)
    if (reset_i) o_r[5] <= 1'h0;
    else if (yumi_i) o_r[5] <= o_r[6];
  
  always @(posedge clk)
    if (reset_i) o_r[6] <= 1'h0;
    else if (yumi_i) o_r[6] <= o_r[7];
  
  always @(posedge clk)
    if (reset_i) o_r[7] <= 1'h0;
    else if (yumi_i) o_r[7] <= o_r[8];
  
  always @(posedge clk)
    if (reset_i) o_r[8] <= 1'h0;
    else if (yumi_i) o_r[8] <= o_r[9];
  
  always @(posedge clk)
    if (reset_i) o_r[9] <= 1'h0;
    else if (yumi_i) o_r[9] <= o_r[10];
  
  always @(posedge clk)
    if (reset_i) o_r[10] <= 1'h0;
    else if (yumi_i) o_r[10] <= o_r[11];
  
  always @(posedge clk)
    if (reset_i) o_r[11] <= 1'h0;
    else if (yumi_i) o_r[11] <= o_r[12];
  
  always @(posedge clk)
    if (reset_i) o_r[12] <= 1'h0;
    else if (yumi_i) o_r[12] <= o_r[13];
  
  always @(posedge clk)
    if (reset_i) o_r[13] <= 1'h0;
    else if (yumi_i) o_r[13] <= o_r[14];
  
  always @(posedge clk)
    if (reset_i) o_r[14] <= 1'h0;
    else if (yumi_i) o_r[14] <= o_r[15];
  
  always @(posedge clk)
    if (reset_i) o_r[15] <= 1'h0;
    else if (yumi_i) o_r[15] <= o_r[16];
  
  always @(posedge clk)
    if (reset_i) o_r[16] <= 1'h0;
    else if (yumi_i) o_r[16] <= o_r[17];
  
  always @(posedge clk)
    if (reset_i) o_r[17] <= 1'h0;
    else if (yumi_i) o_r[17] <= o_r[18];
  
  always @(posedge clk)
    if (reset_i) o_r[18] <= 1'h0;
    else if (yumi_i) o_r[18] <= o_r[19];
  
  always @(posedge clk)
    if (reset_i) o_r[19] <= 1'h0;
    else if (yumi_i) o_r[19] <= o_r[20];
  
  always @(posedge clk)
    if (reset_i) o_r[20] <= 1'h0;
    else if (yumi_i) o_r[20] <= o_r[21];
  
  always @(posedge clk)
    if (reset_i) o_r[21] <= 1'h0;
    else if (yumi_i) o_r[21] <= o_r[22];
  
  always @(posedge clk)
    if (reset_i) o_r[22] <= 1'h0;
    else if (yumi_i) o_r[22] <= o_r[23];
  
  always @(posedge clk)
    if (reset_i) o_r[23] <= 1'h0;
    else if (yumi_i) o_r[23] <= o_r[24];
  
  always @(posedge clk)
    if (reset_i) o_r[24] <= 1'h0;
    else if (yumi_i) o_r[24] <= o_r[25];
  
  always @(posedge clk)
    if (reset_i) o_r[25] <= 1'h0;
    else if (yumi_i) o_r[25] <= o_n[25];
  
  always @(posedge clk)
    if (reset_i) o_r[26] <= 1'h0;
    else if (yumi_i) o_r[26] <= o_n[26];
  
  always @(posedge clk)
    if (reset_i) o_r[27] <= 1'h0;
    else if (yumi_i) o_r[27] <= o_r[28];
  
  always @(posedge clk)
    if (reset_i) o_r[28] <= 1'h0;
    else if (yumi_i) o_r[28] <= o_r[29];
  
  always @(posedge clk)
    if (reset_i) o_r[29] <= 1'h0;
    else if (yumi_i) o_r[29] <= o_n[29];
  
  always @(posedge clk)
    if (reset_i) o_r[30] <= 1'h0;
    else if (yumi_i) o_r[30] <= o_r[31];
  
  always @(posedge clk)
    if (reset_i) o_r[31] <= 1'h0;
    else if (yumi_i) o_r[31] <= o_r[0];
  
  always @(posedge clk)
    if (reset_i) o_r[0] <= 1'h1;
    else if (yumi_i) o_r[0] <= o_r[1];
  
  always @(posedge clk)
    if (reset_i) o_r[1] <= 1'h0;
    else if (yumi_i) o_r[1] <= o_r[2];
  
  always @(posedge clk)
    if (reset_i) o_r[2] <= 1'h0;
    else if (yumi_i) o_r[2] <= o_r[3];
  
  always @(posedge clk)
    if (reset_i) o_r[3] <= 1'h0;
    else if (yumi_i) o_r[3] <= o_r[4];
  assign o = o_r;
  assign { o_n[31:30], o_n[28:27], o_n[24:0] } = { o_r[0], o_r[31], o_r[29:28], o_r[25:1] };
  assign xor_mask = 32'd2785017856;
endmodule

