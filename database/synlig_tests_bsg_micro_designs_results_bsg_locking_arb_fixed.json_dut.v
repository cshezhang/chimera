/* Generated by Yosys 0.27+9 (git sha1 101d19bb6, gcc 11.2.0-7ubuntu2 -fPIC -Os) */


module \$paramod$0d06a8d315e67971bdb0942628fa2425ad05ada8\bsg_priority_encode_one_hot_out (i, o, v_o);
  
  input [15:0] i;
  wire [15:0] i;
  
  output [15:0] o;
  wire [15:0] o;
  
  wire [15:0] scan_lo;
  
  output v_o;
  wire v_o;
  assign o[0] = scan_lo[0] & ~(scan_lo[1]);
  assign o[1] = scan_lo[1] & ~(scan_lo[2]);
  assign o[2] = scan_lo[2] & ~(scan_lo[3]);
  assign o[3] = scan_lo[3] & ~(scan_lo[4]);
  assign o[4] = scan_lo[4] & ~(scan_lo[5]);
  assign o[5] = scan_lo[5] & ~(scan_lo[6]);
  assign o[6] = scan_lo[6] & ~(scan_lo[7]);
  assign o[7] = scan_lo[7] & ~(scan_lo[8]);
  assign o[8] = scan_lo[8] & ~(scan_lo[9]);
  assign o[9] = scan_lo[9] & ~(scan_lo[10]);
  assign o[10] = scan_lo[10] & ~(scan_lo[11]);
  assign o[11] = scan_lo[11] & ~(scan_lo[12]);
  assign o[12] = scan_lo[12] & ~(scan_lo[13]);
  assign o[13] = scan_lo[13] & ~(scan_lo[14]);
  assign o[14] = scan_lo[14] & ~(scan_lo[15]);
  (* module_not_derived = 32'd1 *)
  
  \$paramod$d4c93baa0dfca9d5e01c8e7ffd0f86ab93f4323a\bsg_scan  \nw1.scan  (
    .i(i),
    .o(scan_lo)
  );
  assign o[15] = scan_lo[15];
  assign v_o = scan_lo[0];
endmodule


module \$paramod$1a341e888fe558232017a9cc29d03fe9cf97d7e9\bsg_arb_fixed (ready_i, reqs_i, grants_o);
  
  output [15:0] grants_o;
  wire [15:0] grants_o;
  
  wire [15:0] grants_unmasked_lo;
  
  input ready_i;
  wire ready_i;
  
  input [15:0] reqs_i;
  wire [15:0] reqs_i;
  assign grants_o[0] = ready_i & grants_unmasked_lo[0];
  assign grants_o[1] = grants_unmasked_lo[1] & ready_i;
  assign grants_o[2] = grants_unmasked_lo[2] & ready_i;
  assign grants_o[3] = grants_unmasked_lo[3] & ready_i;
  assign grants_o[4] = grants_unmasked_lo[4] & ready_i;
  assign grants_o[5] = grants_unmasked_lo[5] & ready_i;
  assign grants_o[6] = grants_unmasked_lo[6] & ready_i;
  assign grants_o[7] = grants_unmasked_lo[7] & ready_i;
  assign grants_o[8] = grants_unmasked_lo[8] & ready_i;
  assign grants_o[9] = grants_unmasked_lo[9] & ready_i;
  assign grants_o[10] = grants_unmasked_lo[10] & ready_i;
  assign grants_o[11] = grants_unmasked_lo[11] & ready_i;
  assign grants_o[12] = grants_unmasked_lo[12] & ready_i;
  assign grants_o[13] = grants_unmasked_lo[13] & ready_i;
  assign grants_o[14] = grants_unmasked_lo[14] & ready_i;
  assign grants_o[15] = grants_unmasked_lo[15] & ready_i;
  (* module_not_derived = 32'd1 *)
  
  \$paramod$0d06a8d315e67971bdb0942628fa2425ad05ada8\bsg_priority_encode_one_hot_out  enc (
    .i(reqs_i),
    .o(grants_unmasked_lo)
  );
endmodule


module \$paramod$73ddccad40c02a87be6e99ce98791e9b56ae73bf\bsg_dff_reset_en (clk_i, reset_i, en_i, data_i, data_o);
  
  input clk_i;
  wire clk_i;
  
  input [15:0] data_i;
  wire [15:0] data_i;
  
  output [15:0] data_o;
  wire [15:0] data_o;
  
  reg [15:0] data_r;
  
  input en_i;
  wire en_i;
  
  input reset_i;
  wire reset_i;
  (* \always_ff  = 32'd1 *)
  
  always @(posedge clk_i)
    if (reset_i) data_r[0] <= 1'h0;
    else if (en_i) data_r[0] <= data_i[0];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge clk_i)
    if (reset_i) data_r[1] <= 1'h0;
    else if (en_i) data_r[1] <= data_i[1];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge clk_i)
    if (reset_i) data_r[2] <= 1'h0;
    else if (en_i) data_r[2] <= data_i[2];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge clk_i)
    if (reset_i) data_r[3] <= 1'h0;
    else if (en_i) data_r[3] <= data_i[3];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge clk_i)
    if (reset_i) data_r[4] <= 1'h0;
    else if (en_i) data_r[4] <= data_i[4];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge clk_i)
    if (reset_i) data_r[5] <= 1'h0;
    else if (en_i) data_r[5] <= data_i[5];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge clk_i)
    if (reset_i) data_r[6] <= 1'h0;
    else if (en_i) data_r[6] <= data_i[6];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge clk_i)
    if (reset_i) data_r[7] <= 1'h0;
    else if (en_i) data_r[7] <= data_i[7];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge clk_i)
    if (reset_i) data_r[8] <= 1'h0;
    else if (en_i) data_r[8] <= data_i[8];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge clk_i)
    if (reset_i) data_r[9] <= 1'h0;
    else if (en_i) data_r[9] <= data_i[9];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge clk_i)
    if (reset_i) data_r[10] <= 1'h0;
    else if (en_i) data_r[10] <= data_i[10];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge clk_i)
    if (reset_i) data_r[11] <= 1'h0;
    else if (en_i) data_r[11] <= data_i[11];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge clk_i)
    if (reset_i) data_r[12] <= 1'h0;
    else if (en_i) data_r[12] <= data_i[12];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge clk_i)
    if (reset_i) data_r[13] <= 1'h0;
    else if (en_i) data_r[13] <= data_i[13];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge clk_i)
    if (reset_i) data_r[14] <= 1'h0;
    else if (en_i) data_r[14] <= data_i[14];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge clk_i)
    if (reset_i) data_r[15] <= 1'h0;
    else if (en_i) data_r[15] <= data_i[15];
  assign data_o = data_r;
endmodule


module \$paramod$d4c93baa0dfca9d5e01c8e7ffd0f86ab93f4323a\bsg_scan (i, o);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  
  input [15:0] i;
  wire [15:0] i;
  
  output [15:0] o;
  wire [15:0] o;
  
  wire [15:0] \scanN.row[0].fill ;
  wire [14:0] \scanN.row[0].shifted ;
  
  wire [15:0] \scanN.row[1].fill ;
  (* unused_bits = "0 1 2 3 4 5 6 7 8 9 10 11" *)
  wire [13:0] \scanN.row[1].shifted ;
  
  wire [15:0] \scanN.row[2].fill ;
  (* unused_bits = "0 1 2 3 4 5 6 7" *)
  wire [11:0] \scanN.row[2].shifted ;
  
  wire [15:0] \scanN.row[3].fill ;
  
  wire [15:0] \scanN.row[3].shifted ;
  
  (* unused_bits = "16 17 18 19 20 21 22 23 24 25 26 27 28 29 32 33 34 35 36 37 38 39 40 41 42 43 48 49 50 51 52 53 54 55" *)
  wire [79:0] t;
  assign o[14] = i[14] | i[15];
  assign _00_ = i[13] | i[12];
  assign o[12] = _00_ | o[14];
  assign _01_ = i[14] | i[13];
  assign o[13] = _01_ | i[15];
  assign _02_ = i[9] | i[8];
  assign _03_ = i[11] | i[10];
  assign _04_ = _03_ | _02_;
  assign o[8] = _04_ | o[12];
  assign _05_ = i[1] | i[0];
  assign _06_ = i[3] | i[2];
  assign _07_ = _06_ | _05_;
  assign _08_ = i[5] | i[4];
  assign _09_ = i[7] | i[6];
  assign _10_ = _09_ | _08_;
  assign _11_ = _10_ | _07_;
  assign o[0] = _11_ | o[8];
  assign _12_ = i[10] | i[9];
  assign _13_ = i[12] | i[11];
  assign _14_ = _13_ | _12_;
  assign o[9] = _14_ | o[13];
  assign _15_ = i[2] | i[1];
  assign _16_ = i[4] | i[3];
  assign _17_ = _16_ | _15_;
  assign _18_ = i[6] | i[5];
  assign _19_ = i[8] | i[7];
  assign _20_ = _19_ | _18_;
  assign _21_ = _20_ | _17_;
  assign o[1] = _21_ | o[9];
  assign _22_ = _03_ | _00_;
  assign o[10] = _22_ | o[14];
  assign _23_ = _08_ | _06_;
  assign _24_ = _09_ | _02_;
  assign _25_ = _24_ | _23_;
  assign o[2] = _25_ | o[10];
  assign _26_ = _13_ | _01_;
  assign o[11] = _26_ | i[15];
  assign _27_ = _18_ | _16_;
  assign _28_ = _19_ | _12_;
  assign _29_ = _28_ | _27_;
  assign o[3] = _29_ | o[11];
  assign _30_ = _10_ | _04_;
  assign o[4] = _30_ | o[12];
  assign _31_ = _20_ | _14_;
  assign o[5] = _31_ | o[13];
  assign _32_ = _24_ | _22_;
  assign o[6] = _32_ | o[14];
  assign _33_ = _28_ | _26_;
  assign o[7] = _33_ | i[15];
  assign o[15] = i[15];
  assign \scanN.row[0].fill  = 16'h0000;
  assign \scanN.row[0].shifted  = i[15:1];
  assign \scanN.row[1].fill  = 16'h0000;
  assign \scanN.row[1].shifted [13:12] = { i[15], o[14] };
  assign \scanN.row[2].fill  = 16'h0000;
  assign \scanN.row[2].shifted [11:8] = { i[15], o[14:12] };
  assign \scanN.row[3].fill  = 16'h0000;
  assign \scanN.row[3].shifted  = { 8'h00, i[15], o[14:8] };
  assign { t[79:56], t[47:36], t[31:18], t[15:0] } = { i[15], o[14:0], i[15], o[14:8], i[15], o[14:12], \scanN.row[2].shifted [7:0], i[15], o[14], \scanN.row[1].shifted [11:0], i };
endmodule

(* top =  1  *)

module bsg_locking_arb_fixed(clk_i, ready_i, unlock_i, reqs_i, grants_o);
  
  wire _000_;
  
  wire _001_;
  
  wire _002_;
  
  wire _003_;
  
  wire _004_;
  
  wire _005_;
  
  wire _006_;
  
  wire _007_;
  
  wire _008_;
  
  wire _009_;
  
  wire _010_;
  
  wire _011_;
  
  wire _012_;
  
  wire _013_;
  
  wire _014_;
  
  wire _015_;
  
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  
  wire _047_;
  
  wire _048_;
  
  wire _049_;
  
  wire _050_;
  
  wire _051_;
  
  wire _052_;
  
  wire _053_;
  
  wire _054_;
  
  wire _055_;
  
  wire _056_;
  
  wire _057_;
  
  wire _058_;
  
  wire _059_;
  
  wire _060_;
  
  wire _061_;
  
  wire _062_;
  
  input clk_i;
  wire clk_i;
  
  output [15:0] grants_o;
  wire [15:0] grants_o;
  
  wire [15:0] not_req_mask_r;
  
  input ready_i;
  wire ready_i;
  
  input [15:0] reqs_i;
  wire [15:0] reqs_i;
  
  input unlock_i;
  wire unlock_i;
  assign _047_ = ~grants_o[0];
  assign _054_ = ~grants_o[1];
  assign _055_ = ~grants_o[2];
  assign _056_ = ~grants_o[3];
  assign _057_ = ~grants_o[4];
  assign _058_ = ~grants_o[5];
  assign _059_ = ~grants_o[6];
  assign _060_ = ~grants_o[7];
  assign _061_ = ~grants_o[8];
  assign _062_ = ~grants_o[9];
  assign _048_ = ~grants_o[10];
  assign _049_ = ~grants_o[11];
  assign _050_ = ~grants_o[12];
  assign _051_ = ~grants_o[13];
  assign _052_ = ~grants_o[14];
  assign _053_ = ~grants_o[15];
  assign _045_ = ~(not_req_mask_r[1] | not_req_mask_r[0]);
  assign _046_ = not_req_mask_r[3] | not_req_mask_r[2];
  assign _017_ = _045_ & ~(_046_);
  assign _018_ = not_req_mask_r[5] | not_req_mask_r[4];
  assign _019_ = not_req_mask_r[7] | not_req_mask_r[6];
  assign _020_ = _019_ | _018_;
  assign _021_ = _017_ & ~(_020_);
  assign _022_ = not_req_mask_r[9] | not_req_mask_r[8];
  assign _023_ = not_req_mask_r[11] | not_req_mask_r[10];
  assign _024_ = _023_ | _022_;
  assign _025_ = not_req_mask_r[13] | not_req_mask_r[12];
  assign _026_ = not_req_mask_r[15] | not_req_mask_r[14];
  assign _027_ = _026_ | _025_;
  assign _028_ = _027_ | _024_;
  assign _029_ = _021_ & ~(_028_);
  assign _030_ = ~(grants_o[1] | grants_o[0]);
  assign _031_ = grants_o[3] | grants_o[2];
  assign _032_ = _030_ & ~(_031_);
  assign _033_ = grants_o[5] | grants_o[4];
  assign _034_ = grants_o[7] | grants_o[6];
  assign _035_ = _034_ | _033_;
  assign _036_ = _032_ & ~(_035_);
  assign _037_ = grants_o[9] | grants_o[8];
  assign _038_ = grants_o[11] | grants_o[10];
  assign _039_ = _038_ | _037_;
  assign _040_ = grants_o[13] | grants_o[12];
  assign _041_ = grants_o[15] | grants_o[14];
  assign _042_ = _041_ | _040_;
  assign _043_ = _042_ | _039_;
  assign _044_ = _036_ & ~(_043_);
  assign _000_ = _029_ & ~(_044_);
  assign _001_ = reqs_i[0] & ~(not_req_mask_r[0]);
  assign _008_ = reqs_i[1] & ~(not_req_mask_r[1]);
  assign _009_ = reqs_i[2] & ~(not_req_mask_r[2]);
  assign _010_ = reqs_i[3] & ~(not_req_mask_r[3]);
  assign _011_ = reqs_i[4] & ~(not_req_mask_r[4]);
  assign _012_ = reqs_i[5] & ~(not_req_mask_r[5]);
  assign _013_ = reqs_i[6] & ~(not_req_mask_r[6]);
  assign _014_ = reqs_i[7] & ~(not_req_mask_r[7]);
  assign _015_ = reqs_i[8] & ~(not_req_mask_r[8]);
  assign _016_ = reqs_i[9] & ~(not_req_mask_r[9]);
  assign _002_ = reqs_i[10] & ~(not_req_mask_r[10]);
  assign _003_ = reqs_i[11] & ~(not_req_mask_r[11]);
  assign _004_ = reqs_i[12] & ~(not_req_mask_r[12]);
  assign _005_ = reqs_i[13] & ~(not_req_mask_r[13]);
  assign _006_ = reqs_i[14] & ~(not_req_mask_r[14]);
  assign _007_ = reqs_i[15] & ~(not_req_mask_r[15]);
  (* module_not_derived = 32'd1 *)
  
  \$paramod$1a341e888fe558232017a9cc29d03fe9cf97d7e9\bsg_arb_fixed  fixed_arb (
    .grants_o(grants_o),
    .ready_i(ready_i),
    .reqs_i({ _007_, _006_, _005_, _004_, _003_, _002_, _016_, _015_, _014_, _013_, _012_, _011_, _010_, _009_, _008_, _001_ })
  );
  (* module_not_derived = 32'd1 *)
  
  \$paramod$73ddccad40c02a87be6e99ce98791e9b56ae73bf\bsg_dff_reset_en  req_words_reg (
    .clk_i(clk_i),
    .data_i({ _053_, _052_, _051_, _050_, _049_, _048_, _062_, _061_, _060_, _059_, _058_, _057_, _056_, _055_, _054_, _047_ }),
    .data_o(not_req_mask_r),
    .en_i(_000_),
    .reset_i(unlock_i)
  );
endmodule

