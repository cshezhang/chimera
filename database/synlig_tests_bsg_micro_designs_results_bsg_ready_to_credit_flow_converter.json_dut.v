/* Generated by Yosys 0.27+9 (git sha1 101d19bb6, gcc 11.2.0-7ubuntu2 -fPIC -Os) */


module \$paramod$f46a1e5fefc2e4cbd6d130cb55cd04d04256f03a\bsg_counter_up_down_variable (clk_i, reset_i, up_i, down_i, count_o);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  (* force_downto = 32'd1 *)
  
  (* unused_bits = "1 2 3" *)
  wire [3:0] _13_;
  (* force_downto = 32'd1 *)
  
  wire [3:0] _14_;
  
  input clk_i;
  wire clk_i;
  
  output [3:0] count_o;
  reg [3:0] count_o;
  
  input down_i;
  wire down_i;
  
  input reset_i;
  wire reset_i;
  
  input up_i;
  wire up_i;
  assign _00_ = down_i & ~(up_i);
  assign _01_ = _00_ ^ count_o[1];
  assign _02_ = ~count_o[0];
  assign _03_ = ~(down_i ^ up_i);
  assign _04_ = _03_ | _02_;
  assign _14_[1] = ~(_04_ ^ _01_);
  assign _05_ = ~(count_o[2] ^ count_o[1]);
  assign _06_ = _00_ | count_o[1];
  assign _07_ = _01_ & ~(_04_);
  assign _08_ = _06_ & ~(_07_);
  assign _14_[2] = ~(_08_ ^ _05_);
  assign _09_ = count_o[2] ^ count_o[3];
  assign _10_ = count_o[2] | ~(count_o[1]);
  assign _11_ = _05_ & ~(_08_);
  assign _12_ = _10_ & ~(_11_);
  assign _14_[3] = _12_ ^ _09_;
  assign _13_[0] = _03_ ^ _02_;
  (* \always_ff  = 32'd1 *)
  
  always @(posedge clk_i)
    if (reset_i) count_o[0] <= 1'h0;
    else count_o[0] <= _13_[0];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge clk_i)
    if (reset_i) count_o[1] <= 1'h0;
    else count_o[1] <= _14_[1];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge clk_i)
    if (reset_i) count_o[2] <= 1'h0;
    else count_o[2] <= _14_[2];
  (* \always_ff  = 32'd1 *)
  
  always @(posedge clk_i)
    if (reset_i) count_o[3] <= 1'h0;
    else count_o[3] <= _14_[3];
  assign _14_[0] = _13_[0];
endmodule

(* top =  1  *)

module bsg_ready_to_credit_flow_converter(clk_i, reset_i, v_i, ready_o, v_o, credit_i);
  wire _0_;
  wire _1_;
  
  input clk_i;
  wire clk_i;
  
  wire [3:0] credit_cnt;
  
  input credit_i;
  wire credit_i;
  
  wire down;
  
  output ready_o;
  wire ready_o;
  
  input reset_i;
  wire reset_i;
  
  wire up;
  
  input v_i;
  wire v_i;
  
  output v_o;
  wire v_o;
  assign _0_ = ~(credit_cnt[1] | credit_cnt[0]);
  assign _1_ = credit_cnt[3] | credit_cnt[2];
  assign ready_o = _1_ | ~(_0_);
  assign down = ready_o & v_i;
  (* module_not_derived = 32'd1 *)
  
  \$paramod$f46a1e5fefc2e4cbd6d130cb55cd04d04256f03a\bsg_counter_up_down_variable  credit_counter (
    .clk_i(clk_i),
    .count_o(credit_cnt),
    .down_i(down),
    .reset_i(reset_i),
    .up_i(credit_i)
  );
  assign up = credit_i;
  assign v_o = down;
endmodule

