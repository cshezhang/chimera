//
// Generated by Bluespec Compiler, version 2018.10.beta1 (build e1df8052c, 2018-10-17)
//
//
//
//
// Ports:
// Name                         I/O  size props
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1 reg
// valid                          O     1
// word_fst                       O    64
// word_snd                       O     5
// CLK                            I     1 clock
// RST_N                          I     1 reset
// req_opcode                     I     7
// req_f7                         I     7
// req_rm                         I     3
// req_rs2                        I     5
// req_v1                         I    64
// req_v2                         I    64
// req_v3                         I    64
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_req                         I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkFBox_Core(CLK,
		   RST_N,

		   EN_server_reset_request_put,
		   RDY_server_reset_request_put,

		   EN_server_reset_response_get,
		   RDY_server_reset_response_get,

		   req_opcode,
		   req_f7,
		   req_rm,
		   req_rs2,
		   req_v1,
		   req_v2,
		   req_v3,
		   EN_req,

		   valid,

		   word_fst,

		   word_snd);
  input  CLK;
  input  RST_N;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // action method req
  input  [6 : 0] req_opcode;
  input  [6 : 0] req_f7;
  input  [2 : 0] req_rm;
  input  [4 : 0] req_rs2;
  input  [63 : 0] req_v1;
  input  [63 : 0] req_v2;
  input  [63 : 0] req_v3;
  input  EN_req;

  // value method valid
  output valid;

  // value method word_fst
  output [63 : 0] word_fst;

  // value method word_snd
  output [4 : 0] word_snd;

  // signals for module outputs
  wire [63 : 0] word_fst;
  wire [4 : 0] word_snd;
  wire RDY_server_reset_request_put, RDY_server_reset_response_get, valid;

  // inlined wires
  wire [68 : 0] dw_result$wget;
  wire dw_valid$wget, dw_valid$whas;

  // register requestR
  reg [214 : 0] requestR;
  wire [214 : 0] requestR$D_IN;
  wire requestR$EN;

  // register resultR
  reg [69 : 0] resultR;
  reg [69 : 0] resultR$D_IN;
  wire resultR$EN;

  // register stateR
  reg [1 : 0] stateR;
  reg [1 : 0] stateR$D_IN;
  wire stateR$EN;

  // ports of submodule fpu
  reg [201 : 0] fpu$server_core_request_put;
  wire [69 : 0] fpu$server_core_response_get;
  wire fpu$EN_server_core_request_put,
       fpu$EN_server_core_response_get,
       fpu$EN_server_reset_request_put,
       fpu$EN_server_reset_response_get,
       fpu$RDY_server_core_request_put,
       fpu$RDY_server_core_response_get,
       fpu$RDY_server_reset_request_put,
       fpu$RDY_server_reset_response_get;

  // ports of submodule frmFpuF
  wire frmFpuF$CLR, frmFpuF$DEQ, frmFpuF$D_IN, frmFpuF$ENQ;

  // ports of submodule resetReqsF
  wire resetReqsF$CLR,
       resetReqsF$DEQ,
       resetReqsF$EMPTY_N,
       resetReqsF$ENQ,
       resetReqsF$FULL_N;

  // ports of submodule resetRspsF
  wire resetRspsF$CLR,
       resetRspsF$DEQ,
       resetRspsF$EMPTY_N,
       resetRspsF$ENQ,
       resetRspsF$FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_doFADD_D,
       CAN_FIRE_RL_doFADD_S,
       CAN_FIRE_RL_doFCLASS_D,
       CAN_FIRE_RL_doFCLASS_S,
       CAN_FIRE_RL_doFCVT_D_S,
       CAN_FIRE_RL_doFCVT_D_W,
       CAN_FIRE_RL_doFCVT_D_WU,
       CAN_FIRE_RL_doFCVT_S_D,
       CAN_FIRE_RL_doFCVT_S_W,
       CAN_FIRE_RL_doFCVT_S_WU,
       CAN_FIRE_RL_doFCVT_WU_D,
       CAN_FIRE_RL_doFCVT_WU_S,
       CAN_FIRE_RL_doFCVT_W_D,
       CAN_FIRE_RL_doFCVT_W_S,
       CAN_FIRE_RL_doFDIV_D,
       CAN_FIRE_RL_doFDIV_S,
       CAN_FIRE_RL_doFEQ_D,
       CAN_FIRE_RL_doFEQ_S,
       CAN_FIRE_RL_doFLE_D,
       CAN_FIRE_RL_doFLE_S,
       CAN_FIRE_RL_doFLT_D,
       CAN_FIRE_RL_doFLT_S,
       CAN_FIRE_RL_doFMADD_D,
       CAN_FIRE_RL_doFMADD_S,
       CAN_FIRE_RL_doFMAX_D,
       CAN_FIRE_RL_doFMAX_S,
       CAN_FIRE_RL_doFMIN_D,
       CAN_FIRE_RL_doFMIN_S,
       CAN_FIRE_RL_doFMSUB_D,
       CAN_FIRE_RL_doFMSUB_S,
       CAN_FIRE_RL_doFMUL_D,
       CAN_FIRE_RL_doFMUL_S,
       CAN_FIRE_RL_doFMV_D_X,
       CAN_FIRE_RL_doFMV_W_X,
       CAN_FIRE_RL_doFMV_X_D,
       CAN_FIRE_RL_doFMV_X_W,
       CAN_FIRE_RL_doFNMADD_D,
       CAN_FIRE_RL_doFNMADD_S,
       CAN_FIRE_RL_doFNMSUB_D,
       CAN_FIRE_RL_doFNMSUB_S,
       CAN_FIRE_RL_doFSGNJN_D,
       CAN_FIRE_RL_doFSGNJN_S,
       CAN_FIRE_RL_doFSGNJX_D,
       CAN_FIRE_RL_doFSGNJX_S,
       CAN_FIRE_RL_doFSGNJ_D,
       CAN_FIRE_RL_doFSGNJ_S,
       CAN_FIRE_RL_doFSQRT_D,
       CAN_FIRE_RL_doFSQRT_S,
       CAN_FIRE_RL_doFSUB_D,
       CAN_FIRE_RL_doFSUB_S,
       CAN_FIRE_RL_rl_drive_fpu_result,
       CAN_FIRE_RL_rl_get_fpu_result,
       CAN_FIRE_RL_rl_reset_begin,
       CAN_FIRE_RL_rl_reset_end,
       CAN_FIRE_req,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       WILL_FIRE_RL_doFADD_D,
       WILL_FIRE_RL_doFADD_S,
       WILL_FIRE_RL_doFCLASS_D,
       WILL_FIRE_RL_doFCLASS_S,
       WILL_FIRE_RL_doFCVT_D_S,
       WILL_FIRE_RL_doFCVT_D_W,
       WILL_FIRE_RL_doFCVT_D_WU,
       WILL_FIRE_RL_doFCVT_S_D,
       WILL_FIRE_RL_doFCVT_S_W,
       WILL_FIRE_RL_doFCVT_S_WU,
       WILL_FIRE_RL_doFCVT_WU_D,
       WILL_FIRE_RL_doFCVT_WU_S,
       WILL_FIRE_RL_doFCVT_W_D,
       WILL_FIRE_RL_doFCVT_W_S,
       WILL_FIRE_RL_doFDIV_D,
       WILL_FIRE_RL_doFDIV_S,
       WILL_FIRE_RL_doFEQ_D,
       WILL_FIRE_RL_doFEQ_S,
       WILL_FIRE_RL_doFLE_D,
       WILL_FIRE_RL_doFLE_S,
       WILL_FIRE_RL_doFLT_D,
       WILL_FIRE_RL_doFLT_S,
       WILL_FIRE_RL_doFMADD_D,
       WILL_FIRE_RL_doFMADD_S,
       WILL_FIRE_RL_doFMAX_D,
       WILL_FIRE_RL_doFMAX_S,
       WILL_FIRE_RL_doFMIN_D,
       WILL_FIRE_RL_doFMIN_S,
       WILL_FIRE_RL_doFMSUB_D,
       WILL_FIRE_RL_doFMSUB_S,
       WILL_FIRE_RL_doFMUL_D,
       WILL_FIRE_RL_doFMUL_S,
       WILL_FIRE_RL_doFMV_D_X,
       WILL_FIRE_RL_doFMV_W_X,
       WILL_FIRE_RL_doFMV_X_D,
       WILL_FIRE_RL_doFMV_X_W,
       WILL_FIRE_RL_doFNMADD_D,
       WILL_FIRE_RL_doFNMADD_S,
       WILL_FIRE_RL_doFNMSUB_D,
       WILL_FIRE_RL_doFNMSUB_S,
       WILL_FIRE_RL_doFSGNJN_D,
       WILL_FIRE_RL_doFSGNJN_S,
       WILL_FIRE_RL_doFSGNJX_D,
       WILL_FIRE_RL_doFSGNJX_S,
       WILL_FIRE_RL_doFSGNJ_D,
       WILL_FIRE_RL_doFSGNJ_S,
       WILL_FIRE_RL_doFSQRT_D,
       WILL_FIRE_RL_doFSQRT_S,
       WILL_FIRE_RL_doFSUB_D,
       WILL_FIRE_RL_doFSUB_S,
       WILL_FIRE_RL_rl_drive_fpu_result,
       WILL_FIRE_RL_rl_get_fpu_result,
       WILL_FIRE_RL_rl_reset_begin,
       WILL_FIRE_RL_rl_reset_end,
       WILL_FIRE_req,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get;

  // inputs to muxes for submodule ports
  wire [214 : 0] MUX_requestR$write_1__VAL_2;
  wire [201 : 0] MUX_fpu$server_core_request_put_1__VAL_1,
		 MUX_fpu$server_core_request_put_1__VAL_10,
		 MUX_fpu$server_core_request_put_1__VAL_11,
		 MUX_fpu$server_core_request_put_1__VAL_12,
		 MUX_fpu$server_core_request_put_1__VAL_13,
		 MUX_fpu$server_core_request_put_1__VAL_14,
		 MUX_fpu$server_core_request_put_1__VAL_15,
		 MUX_fpu$server_core_request_put_1__VAL_16,
		 MUX_fpu$server_core_request_put_1__VAL_17,
		 MUX_fpu$server_core_request_put_1__VAL_18,
		 MUX_fpu$server_core_request_put_1__VAL_2,
		 MUX_fpu$server_core_request_put_1__VAL_3,
		 MUX_fpu$server_core_request_put_1__VAL_4,
		 MUX_fpu$server_core_request_put_1__VAL_5,
		 MUX_fpu$server_core_request_put_1__VAL_6,
		 MUX_fpu$server_core_request_put_1__VAL_7,
		 MUX_fpu$server_core_request_put_1__VAL_8,
		 MUX_fpu$server_core_request_put_1__VAL_9;
  wire [69 : 0] MUX_resultR$write_1__VAL_10,
		MUX_resultR$write_1__VAL_11,
		MUX_resultR$write_1__VAL_12,
		MUX_resultR$write_1__VAL_13,
		MUX_resultR$write_1__VAL_14,
		MUX_resultR$write_1__VAL_15,
		MUX_resultR$write_1__VAL_16,
		MUX_resultR$write_1__VAL_17,
		MUX_resultR$write_1__VAL_18,
		MUX_resultR$write_1__VAL_19,
		MUX_resultR$write_1__VAL_20,
		MUX_resultR$write_1__VAL_21,
		MUX_resultR$write_1__VAL_22,
		MUX_resultR$write_1__VAL_23,
		MUX_resultR$write_1__VAL_24,
		MUX_resultR$write_1__VAL_25,
		MUX_resultR$write_1__VAL_26,
		MUX_resultR$write_1__VAL_27,
		MUX_resultR$write_1__VAL_28,
		MUX_resultR$write_1__VAL_29,
		MUX_resultR$write_1__VAL_3,
		MUX_resultR$write_1__VAL_30,
		MUX_resultR$write_1__VAL_31,
		MUX_resultR$write_1__VAL_32,
		MUX_resultR$write_1__VAL_33,
		MUX_resultR$write_1__VAL_34,
		MUX_resultR$write_1__VAL_35,
		MUX_resultR$write_1__VAL_4,
		MUX_resultR$write_1__VAL_5,
		MUX_resultR$write_1__VAL_7,
		MUX_resultR$write_1__VAL_8,
		MUX_resultR$write_1__VAL_9;
  wire [68 : 0] MUX_dw_result$wset_1__VAL_1;
  wire MUX_dw_result$wset_1__SEL_1;

  // remaining internal signals
  reg [51 : 0] CASE_guard10776_0b0_theResult___snd18688_BITS__ETC__q114,
	       CASE_guard10776_0b0_theResult___snd18688_BITS__ETC__q115,
	       CASE_guard20084_0b0_sfdin28304_BITS_56_TO_5_0b_ETC__q116,
	       CASE_guard20084_0b0_sfdin28304_BITS_56_TO_5_0b_ETC__q117,
	       CASE_guard29151_0b0_theResult___snd37087_BITS__ETC__q118,
	       CASE_guard29151_0b0_theResult___snd37087_BITS__ETC__q119,
	       CASE_guard5160_0b0_sfd___35150_BITS_54_TO_3_0b_ETC__q56,
	       CASE_guard5160_0b0_sfd___35150_BITS_54_TO_3_0b_ETC__q57,
	       CASE_guard5519_0b0_sfd___35509_BITS_54_TO_3_0b_ETC__q45,
	       CASE_guard5519_0b0_sfd___35509_BITS_54_TO_3_0b_ETC__q46,
	       CASE_guard5889_0b0_sfd___35150_BITS_53_TO_2_0b_ETC__q54,
	       CASE_guard5889_0b0_sfd___35150_BITS_53_TO_2_0b_ETC__q55,
	       CASE_guard6249_0b0_sfd___35509_BITS_53_TO_2_0b_ETC__q41,
	       CASE_guard6249_0b0_sfd___35509_BITS_53_TO_2_0b_ETC__q42,
	       CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1377,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1395,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1562,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1577,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3571,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3598,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3617;
  reg [22 : 0] CASE_guard049_0b0_sfd___3509_BITS_30_TO_8_0b1__ETC__q18,
	       CASE_guard049_0b0_sfd___3509_BITS_30_TO_8_0b1__ETC__q19,
	       CASE_guard1080_0b0_sfdin9171_BITS_56_TO_34_0b1_ETC__q78,
	       CASE_guard1080_0b0_sfdin9171_BITS_56_TO_34_0b1_ETC__q79,
	       CASE_guard3641_0b0_sfd___33631_BITS_31_TO_9_0b_ETC__q29,
	       CASE_guard3641_0b0_sfd___33631_BITS_31_TO_9_0b_ETC__q30,
	       CASE_guard4167_0b0_sfd___33631_BITS_30_TO_8_0b_ETC__q27,
	       CASE_guard4167_0b0_sfd___33631_BITS_30_TO_8_0b_ETC__q28,
	       CASE_guard519_0b0_sfd___3509_BITS_31_TO_9_0b1__ETC__q16,
	       CASE_guard519_0b0_sfd___3509_BITS_31_TO_9_0b1__ETC__q17,
	       CASE_guard7668_0b0_theResult___snd5691_BITS_56_ETC__q84,
	       CASE_guard7668_0b0_theResult___snd5691_BITS_56_ETC__q85,
	       CASE_guard8804_0b0_sfdin7024_BITS_56_TO_34_0b1_ETC__q82,
	       CASE_guard8804_0b0_sfdin7024_BITS_56_TO_34_0b1_ETC__q83,
	       CASE_guard9815_0b0_theResult___snd7814_BITS_56_ETC__q80,
	       CASE_guard9815_0b0_theResult___snd7814_BITS_56_ETC__q81,
	       CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2737,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2756,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2783,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2802,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d422,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d440,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d739,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d754;
  reg [10 : 0] CASE_guard10776_0b0_theResult___fst_exp18737_0_ETC__q102,
	       CASE_guard10776_0b0_theResult___fst_exp18737_0_ETC__q103,
	       CASE_guard20084_0b0_theResult___fst_exp28310_0_ETC__q104,
	       CASE_guard20084_0b0_theResult___fst_exp28310_0_ETC__q105,
	       CASE_guard29151_0b0_theResult___fst_exp37141_0_ETC__q106,
	       CASE_guard29151_0b0_theResult___fst_exp37141_0_ETC__q107,
	       CASE_guard5160_0b0_0_0b1_0_0b10_out_exp5779_0b_ETC__q49,
	       CASE_guard5160_0b0_0_0b1_theResult___exp5776_0_ETC__q50,
	       CASE_guard5519_0b0_0_0b1_0_0b10_out_exp6138_0b_ETC__q44,
	       CASE_guard5519_0b0_0_0b1_theResult___exp6135_0_ETC__q43,
	       CASE_guard5889_0b0_x5904_BITS_10_TO_0_0b1_theR_ETC__q52,
	       CASE_guard5889_0b0_x5904_BITS_10_TO_0_0b1_x590_ETC__q53,
	       CASE_guard6249_0b0_x6264_BITS_10_TO_0_0b1_theR_ETC__q39,
	       CASE_guard6249_0b0_x6264_BITS_10_TO_0_0b1_x626_ETC__q40,
	       CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4,
	       CASE_requestR_BITS_194_TO_192_0x3_IF_guard5160_ETC__q51,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1325,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1354,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1540,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3144,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3469,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3538;
  reg [7 : 0] CASE_guard049_0b0_x064_BITS_7_TO_0_0b1_theResu_ETC__q14,
	      CASE_guard049_0b0_x064_BITS_7_TO_0_0b1_x064_BI_ETC__q15,
	      CASE_guard1080_0b0_theResult___fst_exp9177_0b1_ETC__q70,
	      CASE_guard1080_0b0_theResult___fst_exp9177_0b1_ETC__q71,
	      CASE_guard3641_0b0_0_0b1_0_0b10_out_exp4057_0b_ETC__q22,
	      CASE_guard3641_0b0_0_0b1_theResult___exp4054_0_ETC__q23,
	      CASE_guard4167_0b0_x4182_BITS_7_TO_0_0b1_theRe_ETC__q25,
	      CASE_guard4167_0b0_x4182_BITS_7_TO_0_0b1_x4182_ETC__q26,
	      CASE_guard519_0b0_0_0b1_0_0b10_out_exp938_0b11_ETC__q13,
	      CASE_guard519_0b0_0_0b1_theResult___exp935_0b1_ETC__q12,
	      CASE_guard7668_0b0_theResult___fst_exp5745_0b1_ETC__q76,
	      CASE_guard7668_0b0_theResult___fst_exp5745_0b1_ETC__q77,
	      CASE_guard8804_0b0_theResult___fst_exp7030_0b1_ETC__q74,
	      CASE_guard8804_0b0_theResult___fst_exp7030_0b1_ETC__q75,
	      CASE_guard9815_0b0_theResult___fst_exp7863_0b1_ETC__q72,
	      CASE_guard9815_0b0_theResult___fst_exp7863_0b1_ETC__q73,
	      CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2,
	      CASE_requestR_BITS_194_TO_192_0x3_IF_guard3641_ETC__q24,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2150,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2307,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2634,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2703,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d370,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d399,
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d716;
  reg [2 : 0] IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50;
  reg CASE_guard049_0b0_requestR_BIT_159_0b1_request_ETC__q10,
      CASE_guard10776_0b0_requestR_BITS_191_TO_160_E_ETC__q108,
      CASE_guard1080_0b0_requestR_BIT_191_0b1_reques_ETC__q86,
      CASE_guard20084_0b0_requestR_BITS_191_TO_160_E_ETC__q110,
      CASE_guard29151_0b0_requestR_BITS_191_TO_160_E_ETC__q112,
      CASE_guard519_0b0_requestR_BIT_159_0b1_request_ETC__q8,
      CASE_guard5519_0b0_requestR_BIT_159_0b1_reques_ETC__q35,
      CASE_guard6249_0b0_requestR_BIT_159_0b1_reques_ETC__q37,
      CASE_guard7668_0b0_requestR_BIT_191_0b1_reques_ETC__q92,
      CASE_guard8804_0b0_requestR_BIT_191_0b1_reques_ETC__q90,
      CASE_guard9815_0b0_requestR_BIT_191_0b1_reques_ETC__q88,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q9,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93;
  wire [85 : 0] IF_requestR_3_BIT_191_202_THEN_NEG_0b0_CONCAT__ETC___d1631,
		b__h47244,
		x__h47920,
		x__h48943;
  wire [64 : 0] _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d78;
  wire [63 : 0] IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1051,
		IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1066,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1050,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1052,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1065,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1067,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1131,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1132,
		IF_requestR_3_BITS_126_TO_116_754_EQ_2047_755__ETC___d3802,
		IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_AND_ETC___d3815,
		IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_AND_ETC___d3881,
		res___1__h154853,
		res___1__h155291,
		res___1__h155301,
		res___1__h155320,
		res___1__h25997,
		res___1__h26233,
		res___1__h26243,
		res___1__h26262,
		res__h138561,
		res__h142948,
		res__h147441,
		res__h150090,
		res__h152730,
		res__h154552,
		res__h155336,
		res__h155490,
		res__h17988,
		res__h18225,
		res__h23375,
		res__h24803,
		res__h25817,
		res__h26278,
		res__h96811,
		x__h139530,
		x__h144023,
		x__h148412,
		x__h15077,
		x__h151052,
		x__h152874,
		x__h154833,
		x__h155457,
		x__h16615,
		x__h17309,
		x__h19888,
		x__h22358,
		x__h22423,
		x__h22505,
		x__h2333,
		x__h23933,
		x__h2414,
		x__h2492,
		x__h24947,
		x__h2584,
		x__h25977,
		x__h27284,
		x__h27350,
		x__h27418,
		x__h27493,
		x__h37386,
		x__h46998,
		x__h48519,
		x__h49209,
		x__h8990,
		x__h97859;
  wire [56 : 0] IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BI_ETC__q60,
		IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q97,
		IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_B_ETC__q65,
		IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_ETC__q100,
		IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_ETC__q94,
		IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_609__ETC__q62,
		IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_609__ETC__q68,
		IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d845,
		_0b0_CONCAT_NOT_IF_requestR_3_BITS_191_TO_160_4_ETC___d3162,
		_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_180_609__ETC___d2329,
		_theResult____h120074,
		_theResult____h61070,
		_theResult____h78794,
		_theResult___snd__h118688,
		_theResult___snd__h118690,
		_theResult___snd__h118697,
		_theResult___snd__h118703,
		_theResult___snd__h118726,
		_theResult___snd__h128321,
		_theResult___snd__h128332,
		_theResult___snd__h128334,
		_theResult___snd__h128344,
		_theResult___snd__h128350,
		_theResult___snd__h128373,
		_theResult___snd__h137087,
		_theResult___snd__h137101,
		_theResult___snd__h137107,
		_theResult___snd__h137125,
		_theResult___snd__h69188,
		_theResult___snd__h69199,
		_theResult___snd__h69201,
		_theResult___snd__h69211,
		_theResult___snd__h69217,
		_theResult___snd__h69240,
		_theResult___snd__h77814,
		_theResult___snd__h77816,
		_theResult___snd__h77823,
		_theResult___snd__h77829,
		_theResult___snd__h77852,
		_theResult___snd__h87041,
		_theResult___snd__h87052,
		_theResult___snd__h87054,
		_theResult___snd__h87064,
		_theResult___snd__h87070,
		_theResult___snd__h87093,
		_theResult___snd__h95691,
		_theResult___snd__h95705,
		_theResult___snd__h95711,
		_theResult___snd__h95729,
		b__h15323,
		result__h120687,
		result__h79407,
		sfd__h53440,
		sfdin__h128304,
		sfdin__h69171,
		sfdin__h87024,
		x__h120782,
		x__h15999,
		x__h17039,
		x__h79502;
  wire [54 : 0] sfd___3__h35509, sfd___3__h45150, sfd__h27508, sfd__h37398;
  wire [53 : 0] sfd__h118755,
		sfd__h128402,
		sfd__h137160,
		sfd__h35536,
		sfd__h36279,
		sfd__h45177,
		sfd__h45919,
		value__h47246;
  wire [51 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3592,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3594,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3565,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3567,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3611,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3613,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1371,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1373,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1389,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1391,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3624,
		IF_requestR_3_BITS_159_TO_128_44_EQ_0_45_OR_NO_ETC___d1399,
		IF_requestR_3_BITS_159_TO_128_44_EQ_0_45_OR_NO_ETC___d1581,
		_theResult___fst_sfd__h103665,
		_theResult___fst_sfd__h119491,
		_theResult___fst_sfd__h119494,
		_theResult___fst_sfd__h129138,
		_theResult___fst_sfd__h129141,
		_theResult___fst_sfd__h137920,
		_theResult___fst_sfd__h137923,
		_theResult___fst_sfd__h137932,
		_theResult___fst_sfd__h137938,
		_theResult___fst_sfd__h36233,
		_theResult___fst_sfd__h36989,
		_theResult___fst_sfd__h36992,
		_theResult___fst_sfd__h45873,
		_theResult___fst_sfd__h46628,
		_theResult___fst_sfd__h46631,
		_theResult___fst_sfd__h49736,
		_theResult___sfd__h119393,
		_theResult___sfd__h129040,
		_theResult___sfd__h137822,
		_theResult___sfd__h36136,
		_theResult___sfd__h36892,
		_theResult___sfd__h45777,
		_theResult___sfd__h46532,
		_theResult___snd_fst_sfd__h119497,
		_theResult___snd_fst_sfd__h137926,
		_theResult___snd_fst_sfd__h36995,
		_theResult___snd_fst_sfd__h46634,
		_theResult___snd_fst_sfd__h99811,
		out___1_sfd__h97925,
		out_sfd__h119396,
		out_sfd__h129043,
		out_sfd__h137825,
		out_sfd__h36139,
		out_sfd__h36895,
		out_sfd__h45780,
		out_sfd__h46535,
		value__h49279;
  wire [32 : 0] _theResult_____2__h15258,
		_theResult_____2__h47179,
		out1___1__h15750,
		out1___1__h47671;
  wire [31 : 0] IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1047,
		IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1060,
		IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1062,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1048,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1063,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d904,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d963,
		IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d900,
		IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d902,
		IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d961,
		IF_NEG_SEXT_requestR_3_BITS_190_TO_180_609_MIN_ETC___d1686,
		IF_NEG_SEXT_requestR_3_BITS_190_TO_180_609_MIN_ETC___d1688,
		IF_NEG_SEXT_requestR_3_BITS_190_TO_180_609_MIN_ETC___d1747,
		IF_NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFF_ETC___d1045,
		IF_NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFF_ETC___d1059,
		IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_AND_ETC___d1749,
		IF_requestR_3_BITS_190_TO_180_609_EQ_2047_610__ETC___d1690,
		IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d833,
		IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d965,
		IF_requestR_3_BIT_191_202_THEN_2147483648_ELSE_ETC___d1619,
		requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
		requestR_BITS_159_TO_128__q1,
		sfd___3__h13631,
		sfd___3__h7509,
		sfd__h2605,
		x__h15080,
		x__h16618,
		x__h2340,
		x__h2421,
		x__h2499,
		x__h2590,
		x__h47001,
		x__h48522,
		x__h96817;
  wire [30 : 0] IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29;
  wire [24 : 0] sfd__h13658,
		sfd__h14197,
		sfd__h69269,
		sfd__h7536,
		sfd__h77881,
		sfd__h8079,
		sfd__h87122,
		sfd__h95764,
		value__h15325;
  wire [23 : 0] NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1624,
		NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1656,
		NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1657,
		NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1720;
  wire [22 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2731,
		IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2733,
		IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2777,
		IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2779,
		IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2750,
		IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2752,
		IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2796,
		IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2798,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d416,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d418,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d434,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d436,
		IF_requestR_3_BITS_190_TO_180_609_EQ_2047_610__ETC___d2809,
		_theResult___fst_sfd__h14151,
		_theResult___fst_sfd__h14703,
		_theResult___fst_sfd__h14706,
		_theResult___fst_sfd__h61053,
		_theResult___fst_sfd__h69802,
		_theResult___fst_sfd__h69805,
		_theResult___fst_sfd__h78414,
		_theResult___fst_sfd__h78417,
		_theResult___fst_sfd__h8033,
		_theResult___fst_sfd__h8586,
		_theResult___fst_sfd__h8589,
		_theResult___fst_sfd__h87655,
		_theResult___fst_sfd__h87658,
		_theResult___fst_sfd__h96321,
		_theResult___fst_sfd__h96324,
		_theResult___fst_sfd__h96333,
		_theResult___fst_sfd__h96339,
		_theResult___fst_sfd__h98183,
		_theResult___sfd__h14055,
		_theResult___sfd__h14607,
		_theResult___sfd__h69704,
		_theResult___sfd__h78316,
		_theResult___sfd__h7936,
		_theResult___sfd__h8489,
		_theResult___sfd__h87557,
		_theResult___sfd__h96223,
		_theResult___snd_fst_sfd__h14709,
		_theResult___snd_fst_sfd__h53394,
		_theResult___snd_fst_sfd__h78420,
		_theResult___snd_fst_sfd__h8592,
		_theResult___snd_fst_sfd__h96327,
		out_sfd__h14058,
		out_sfd__h14610,
		out_sfd__h69707,
		out_sfd__h78319,
		out_sfd__h7939,
		out_sfd__h8492,
		out_sfd__h87560,
		out_sfd__h96226,
		sV1_sfd__h1205,
		sV2_sfd__h1308,
		value__h97928;
  wire [19 : 0] NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d838,
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d870,
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d871,
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d934;
  wire [11 : 0] IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3478,
		SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3155,
		SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96,
		SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2322,
		SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC__q64,
		_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1851,
		_3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3158,
		_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1245,
		_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1459,
		_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3012,
		_3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_609_ETC___d2325,
		x__h120815,
		x__h36264,
		x__h45904,
		x__h79535;
  wire [10 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3463,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3465,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3138,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3140,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3532,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3534,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1322,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1348,
		IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1350,
		SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q99,
		_theResult___exp__h119392,
		_theResult___exp__h129039,
		_theResult___exp__h137821,
		_theResult___exp__h36135,
		_theResult___exp__h36891,
		_theResult___exp__h45776,
		_theResult___exp__h46531,
		_theResult___fst_exp__h103664,
		_theResult___fst_exp__h118728,
		_theResult___fst_exp__h118734,
		_theResult___fst_exp__h118737,
		_theResult___fst_exp__h119490,
		_theResult___fst_exp__h119493,
		_theResult___fst_exp__h128310,
		_theResult___fst_exp__h128375,
		_theResult___fst_exp__h128381,
		_theResult___fst_exp__h128384,
		_theResult___fst_exp__h129137,
		_theResult___fst_exp__h129140,
		_theResult___fst_exp__h137093,
		_theResult___fst_exp__h137132,
		_theResult___fst_exp__h137138,
		_theResult___fst_exp__h137141,
		_theResult___fst_exp__h137919,
		_theResult___fst_exp__h137922,
		_theResult___fst_exp__h137931,
		_theResult___fst_exp__h137934,
		_theResult___fst_exp__h36232,
		_theResult___fst_exp__h36988,
		_theResult___fst_exp__h36991,
		_theResult___fst_exp__h45872,
		_theResult___fst_exp__h46627,
		_theResult___fst_exp__h46630,
		_theResult___snd_fst_exp__h119496,
		_theResult___snd_fst_exp__h137925,
		_theResult___snd_fst_exp__h36994,
		_theResult___snd_fst_exp__h36997,
		_theResult___snd_fst_exp__h37000,
		_theResult___snd_fst_exp__h46633,
		_theResult___snd_fst_exp__h46636,
		_theResult___snd_fst_exp__h46639,
		din_inc___2_exp__h137957,
		din_inc___2_exp__h137987,
		din_inc___2_exp__h138011,
		din_inc___2_exp__h37034,
		din_inc___2_exp__h46669,
		out_exp__h119395,
		out_exp__h129042,
		out_exp__h137824,
		out_exp__h36138,
		out_exp__h36894,
		out_exp__h45779,
		out_exp__h46534,
		requestR_3_BITS_190_TO_180_609_MINUS_1023___d1622,
		x__h97869;
  wire [8 : 0] IF_SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1_ETC___d2643,
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d278,
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d635,
	       x__h14182,
	       x__h8064;
  wire [7 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2144,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2146,
	       IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2628,
	       IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2630,
	       IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2301,
	       IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2303,
	       IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2697,
	       IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2699,
	       IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d367,
	       IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d393,
	       IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d395,
	       IF_requestR_3_BITS_159_TO_128_44_EQ_0_45_OR_NO_ETC___d405,
	       IF_requestR_3_BITS_159_TO_128_44_EQ_0_45_OR_NO_ETC___d722,
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d836,
	       SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC__q67,
	       _theResult___exp__h14054,
	       _theResult___exp__h14606,
	       _theResult___exp__h69703,
	       _theResult___exp__h78315,
	       _theResult___exp__h7935,
	       _theResult___exp__h8488,
	       _theResult___exp__h87556,
	       _theResult___exp__h96222,
	       _theResult___fst_exp__h14150,
	       _theResult___fst_exp__h14702,
	       _theResult___fst_exp__h14705,
	       _theResult___fst_exp__h61052,
	       _theResult___fst_exp__h69177,
	       _theResult___fst_exp__h69242,
	       _theResult___fst_exp__h69248,
	       _theResult___fst_exp__h69251,
	       _theResult___fst_exp__h69801,
	       _theResult___fst_exp__h69804,
	       _theResult___fst_exp__h77854,
	       _theResult___fst_exp__h77860,
	       _theResult___fst_exp__h77863,
	       _theResult___fst_exp__h78413,
	       _theResult___fst_exp__h78416,
	       _theResult___fst_exp__h8032,
	       _theResult___fst_exp__h8585,
	       _theResult___fst_exp__h8588,
	       _theResult___fst_exp__h87030,
	       _theResult___fst_exp__h87095,
	       _theResult___fst_exp__h87101,
	       _theResult___fst_exp__h87104,
	       _theResult___fst_exp__h87654,
	       _theResult___fst_exp__h87657,
	       _theResult___fst_exp__h95697,
	       _theResult___fst_exp__h95736,
	       _theResult___fst_exp__h95742,
	       _theResult___fst_exp__h95745,
	       _theResult___fst_exp__h96320,
	       _theResult___fst_exp__h96323,
	       _theResult___fst_exp__h96332,
	       _theResult___fst_exp__h96335,
	       _theResult___snd_fst_exp__h14708,
	       _theResult___snd_fst_exp__h14711,
	       _theResult___snd_fst_exp__h14714,
	       _theResult___snd_fst_exp__h78419,
	       _theResult___snd_fst_exp__h8591,
	       _theResult___snd_fst_exp__h8594,
	       _theResult___snd_fst_exp__h8597,
	       _theResult___snd_fst_exp__h96326,
	       din_inc___2_exp__h14744,
	       din_inc___2_exp__h8631,
	       din_inc___2_exp__h96354,
	       din_inc___2_exp__h96378,
	       din_inc___2_exp__h96408,
	       din_inc___2_exp__h96432,
	       out_exp__h14057,
	       out_exp__h14609,
	       out_exp__h69706,
	       out_exp__h78318,
	       out_exp__h7938,
	       out_exp__h8491,
	       out_exp__h87559,
	       out_exp__h96225,
	       sV1_exp__h1204,
	       sV2_exp__h1307,
	       x__h49219;
  wire [5 : 0] IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2085,
	       IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3404,
	       IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2569,
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3084,
	       IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d1242,
	       IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d275,
	       IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2247,
	       IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d1456,
	       IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d632;
  wire [4 : 0] _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2869,
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3691,
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2898,
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3674,
	       _0_CONCAT_IF_requestR_3_BITS_190_TO_180_609_EQ__ETC___d2881,
	       x__h138663,
	       x__h143080,
	       x__h14848,
	       x__h152749,
	       x__h16413,
	       x__h17117,
	       x__h19349,
	       x__h24822,
	       x__h37156,
	       x__h46769,
	       x__h48317,
	       x__h49021,
	       x__h8757,
	       x__h96932;
  wire [1 : 0] IF_sfd___33631_BIT_7_THEN_2_ELSE_0__q21,
	       IF_sfd___33631_BIT_8_THEN_2_ELSE_0__q20,
	       IF_sfd___3509_BIT_7_THEN_2_ELSE_0__q7,
	       IF_sfd___3509_BIT_8_THEN_2_ELSE_0__q6,
	       IF_sfd___35150_BIT_1_THEN_2_ELSE_0__q48,
	       IF_sfd___35150_BIT_2_THEN_2_ELSE_0__q47,
	       IF_sfd___35509_BIT_1_THEN_2_ELSE_0__q34,
	       IF_sfd___35509_BIT_2_THEN_2_ELSE_0__q33,
	       IF_sfdin28304_BIT_4_THEN_2_ELSE_0__q98,
	       IF_sfdin7024_BIT_33_THEN_2_ELSE_0__q66,
	       IF_sfdin9171_BIT_33_THEN_2_ELSE_0__q61,
	       IF_theResult___snd18688_BIT_4_THEN_2_ELSE_0__q95,
	       IF_theResult___snd37087_BIT_4_THEN_2_ELSE_0__q101,
	       IF_theResult___snd5691_BIT_33_THEN_2_ELSE_0__q69,
	       IF_theResult___snd7814_BIT_33_THEN_2_ELSE_0__q63,
	       IF_x5999_BIT_24_THEN_2_ELSE_0__q31,
	       IF_x7039_BIT_24_THEN_2_ELSE_0__q32,
	       IF_x7920_BIT_53_THEN_2_ELSE_0__q58,
	       IF_x8943_BIT_53_THEN_2_ELSE_0__q59,
	       guard__h110776,
	       guard__h120084,
	       guard__h129151,
	       guard__h13641,
	       guard__h14167,
	       guard__h15256,
	       guard__h15810,
	       guard__h16818,
	       guard__h35519,
	       guard__h36249,
	       guard__h45160,
	       guard__h45889,
	       guard__h47177,
	       guard__h47731,
	       guard__h48722,
	       guard__h61080,
	       guard__h69815,
	       guard__h7519,
	       guard__h78804,
	       guard__h8049,
	       guard__h87668;
  wire IF_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_7_ETC___d2831,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1301,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1416,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d345,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d495,
       IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_T_ETC___d1598,
       IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_T_ETC___d808,
       IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_19_ETC___d3648,
       IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3656,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3660,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3695,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3698,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3705,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3719,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3731,
       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3743,
       IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d926,
       IF_NEG_SEXT_requestR_3_BITS_190_TO_180_609_MIN_ETC___d1712,
       IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT__ETC___d1302,
       IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BI_ETC___d3640,
       IF_NOT_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1040,
       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3658,
       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3717,
       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3729,
       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3741,
       IF_SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1_ETC___d2849,
       IF_SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1_ETC___d2927,
       IF_SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1_ETC___d2940,
       IF_SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1_ETC___d2953,
       IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_ETC___d1020,
       IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2851,
       IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2902,
       IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2913,
       IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2929,
       IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2942,
       IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2955,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1006,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1016,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1029,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1030,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1031,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1034,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1036,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1054,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1087,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1098,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1102,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d832,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d973,
       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d984,
       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1648,
       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1680,
       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1741,
       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d862,
       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d894,
       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d955,
       IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d486,
       IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d489,
       IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d498,
       IF_requestR_3_BIT_191_202_THEN_NOT_requestR_3__ETC___d3795,
       NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d873,
       NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d936,
       NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1659,
       NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1722,
       NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d2921,
       NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d2949,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1043,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1044,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1097,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1103,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1119,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d3057,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d915,
       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d978,
       NOT_IF_requestR_3_BIT_159_6_THEN_NEG_requestR__ETC___d283,
       NOT_requestR_3_BITS_159_TO_128_44_EQ_0_45_46_A_ETC___d800,
       NOT_requestR_3_BITS_190_TO_180_609_EQ_0_620_62_ETC___d1701,
       NOT_requestR_3_BITS_190_TO_180_609_EQ_0_620_62_ETC___d1764,
       NOT_requestR_3_BITS_190_TO_180_609_EQ_2047_610_ETC___d3799,
       NOT_requestR_3_BITS_190_TO_180_609_EQ_2047_610_ETC___d3860,
       NOT_requestR_3_BITS_190_TO_180_609_ULT_request_ETC___d3839,
       NOT_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1101,
       NOT_requestR_3_BIT_158_07_08_AND_NOT_requestR__ETC___d598,
       NOT_requestR_3_BIT_179_778_153_AND_NOT_request_ETC___d2192,
       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3156,
       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3157,
       SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2323,
       SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2324,
       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2087,
       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3406,
       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2571,
       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3086,
       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3479,
       _0_CONCAT_IF_requestR_3_BITS_190_TO_180_609_EQ__ETC___d2249,
       _0_CONCAT_IF_requestR_3_BITS_190_TO_180_609_EQ__ETC___d2644,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1852,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1853,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d2884,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d2909,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d2936,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1246,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1248,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1250,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d279,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d281,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d284,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1460,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1461,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1462,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d636,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d637,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d638,
       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3013,
       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3014,
       guard__h120682,
       guard__h79402,
       requestR_3_BITS_126_TO_116_754_EQ_0_768_AND_re_ETC___d3775,
       requestR_3_BITS_179_TO_128_611_ULE_requestR_3__ETC___d3787,
       requestR_3_BITS_179_TO_128_611_ULT_requestR_3__ETC___d3792,
       requestR_3_BITS_190_TO_180_609_EQ_0_620_AND_re_ETC___d3771,
       requestR_3_BITS_190_TO_180_609_EQ_0_620_AND_re_ETC___d3843,
       requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d1759,
       requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d1770,
       requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d3763,
       requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d3808,
       requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d3828,
       requestR_3_BITS_190_TO_180_609_EQ_requestR_3_B_ETC___d3786,
       requestR_3_BITS_190_TO_180_609_ULE_requestR_3__ETC___d3784,
       requestR_3_BITS_190_TO_180_609_ULE_requestR_3__ETC___d3838,
       requestR_3_BITS_190_TO_180_609_ULT_requestR_3__ETC___d3791,
       requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_A_ETC___d1042,
       requestR_3_BIT_158_07_OR_requestR_3_BIT_157_09_ETC___d789,
       requestR_3_BIT_159_6_OR_requestR_3_BIT_158_07__ETC___d811;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = resetReqsF$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = resetReqsF$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get = resetRspsF$EMPTY_N ;
  assign CAN_FIRE_server_reset_response_get = resetRspsF$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // value method valid
  assign valid = dw_valid$whas && dw_valid$wget ;

  // value method word_fst
  assign word_fst = dw_result$wget[68:5] ;

  // value method word_snd
  assign word_snd = dw_result$wget[4:0] ;

  // submodule fpu
  mkFPU fpu(.CLK(CLK),
	    .RST_N(RST_N),
	    .server_core_request_put(fpu$server_core_request_put),
	    .EN_server_core_request_put(fpu$EN_server_core_request_put),
	    .EN_server_core_response_get(fpu$EN_server_core_response_get),
	    .EN_server_reset_request_put(fpu$EN_server_reset_request_put),
	    .EN_server_reset_response_get(fpu$EN_server_reset_response_get),
	    .RDY_server_core_request_put(fpu$RDY_server_core_request_put),
	    .server_core_response_get(fpu$server_core_response_get),
	    .RDY_server_core_response_get(fpu$RDY_server_core_response_get),
	    .RDY_server_reset_request_put(fpu$RDY_server_reset_request_put),
	    .RDY_server_reset_response_get(fpu$RDY_server_reset_response_get));

  // submodule frmFpuF
  FIFO2 #(.width(32'd1), .guarded(32'd1)) frmFpuF(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(frmFpuF$D_IN),
						  .ENQ(frmFpuF$ENQ),
						  .DEQ(frmFpuF$DEQ),
						  .CLR(frmFpuF$CLR),
						  .D_OUT(),
						  .FULL_N(),
						  .EMPTY_N());

  // submodule resetReqsF
  FIFO20 #(.guarded(32'd1)) resetReqsF(.RST(RST_N),
				       .CLK(CLK),
				       .ENQ(resetReqsF$ENQ),
				       .DEQ(resetReqsF$DEQ),
				       .CLR(resetReqsF$CLR),
				       .FULL_N(resetReqsF$FULL_N),
				       .EMPTY_N(resetReqsF$EMPTY_N));

  // submodule resetRspsF
  FIFO20 #(.guarded(32'd1)) resetRspsF(.RST(RST_N),
				       .CLK(CLK),
				       .ENQ(resetRspsF$ENQ),
				       .DEQ(resetRspsF$DEQ),
				       .CLR(resetRspsF$CLR),
				       .FULL_N(resetRspsF$FULL_N),
				       .EMPTY_N(resetRspsF$EMPTY_N));

  // rule RL_rl_reset_end
  assign CAN_FIRE_RL_rl_reset_end =
	     fpu$RDY_server_reset_response_get && resetRspsF$FULL_N &&
	     stateR == 2'd0 ;
  assign WILL_FIRE_RL_rl_reset_end = CAN_FIRE_RL_rl_reset_end ;

  // rule RL_doFADD_S
  assign CAN_FIRE_RL_doFADD_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h0 ;
  assign WILL_FIRE_RL_doFADD_S = CAN_FIRE_RL_doFADD_S ;

  // rule RL_doFSUB_S
  assign CAN_FIRE_RL_doFSUB_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h04 ;
  assign WILL_FIRE_RL_doFSUB_S = CAN_FIRE_RL_doFSUB_S ;

  // rule RL_doFMUL_S
  assign CAN_FIRE_RL_doFMUL_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h08 ;
  assign WILL_FIRE_RL_doFMUL_S = CAN_FIRE_RL_doFMUL_S ;

  // rule RL_doFMADD_S
  assign CAN_FIRE_RL_doFMADD_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFMADD_S = CAN_FIRE_RL_doFMADD_S ;

  // rule RL_doFMSUB_S
  assign CAN_FIRE_RL_doFMSUB_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFMSUB_S = CAN_FIRE_RL_doFMSUB_S ;

  // rule RL_doFNMADD_S
  assign CAN_FIRE_RL_doFNMADD_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFNMADD_S = CAN_FIRE_RL_doFNMADD_S ;

  // rule RL_doFNMSUB_S
  assign CAN_FIRE_RL_doFNMSUB_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFNMSUB_S = CAN_FIRE_RL_doFNMSUB_S ;

  // rule RL_doFDIV_S
  assign CAN_FIRE_RL_doFDIV_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h0C ;
  assign WILL_FIRE_RL_doFDIV_S = CAN_FIRE_RL_doFDIV_S ;

  // rule RL_doFSQRT_S
  assign CAN_FIRE_RL_doFSQRT_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h2C ;
  assign WILL_FIRE_RL_doFSQRT_S = CAN_FIRE_RL_doFSQRT_S ;

  // rule RL_doFSGNJ_S
  assign CAN_FIRE_RL_doFSGNJ_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFSGNJ_S = CAN_FIRE_RL_doFSGNJ_S ;

  // rule RL_doFSGNJN_S
  assign CAN_FIRE_RL_doFSGNJN_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFSGNJN_S = CAN_FIRE_RL_doFSGNJN_S ;

  // rule RL_doFSGNJX_S
  assign CAN_FIRE_RL_doFSGNJX_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFSGNJX_S = CAN_FIRE_RL_doFSGNJX_S ;

  // rule RL_doFCVT_S_W
  assign CAN_FIRE_RL_doFCVT_S_W =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_S_W = CAN_FIRE_RL_doFCVT_S_W ;

  // rule RL_doFCVT_S_WU
  assign CAN_FIRE_RL_doFCVT_S_WU =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_S_WU = CAN_FIRE_RL_doFCVT_S_WU ;

  // rule RL_doFCVT_W_S
  assign CAN_FIRE_RL_doFCVT_W_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_W_S = CAN_FIRE_RL_doFCVT_W_S ;

  // rule RL_doFCVT_WU_S
  assign CAN_FIRE_RL_doFCVT_WU_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_WU_S = CAN_FIRE_RL_doFCVT_WU_S ;

  // rule RL_doFMIN_S
  assign CAN_FIRE_RL_doFMIN_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMIN_S = CAN_FIRE_RL_doFMIN_S ;

  // rule RL_doFMAX_S
  assign CAN_FIRE_RL_doFMAX_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFMAX_S = CAN_FIRE_RL_doFMAX_S ;

  // rule RL_doFMV_W_X
  assign CAN_FIRE_RL_doFMV_W_X =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h78 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_W_X = CAN_FIRE_RL_doFMV_W_X ;

  // rule RL_doFMV_X_W
  assign CAN_FIRE_RL_doFMV_X_W =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_X_W = CAN_FIRE_RL_doFMV_X_W ;

  // rule RL_doFEQ_S
  assign CAN_FIRE_RL_doFEQ_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFEQ_S = CAN_FIRE_RL_doFEQ_S ;

  // rule RL_doFLT_S
  assign CAN_FIRE_RL_doFLT_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFLT_S = CAN_FIRE_RL_doFLT_S ;

  // rule RL_doFLE_S
  assign CAN_FIRE_RL_doFLE_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFLE_S = CAN_FIRE_RL_doFLE_S ;

  // rule RL_doFCLASS_S
  assign CAN_FIRE_RL_doFCLASS_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFCLASS_S = CAN_FIRE_RL_doFCLASS_S ;

  // rule RL_doFADD_D
  assign CAN_FIRE_RL_doFADD_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h01 ;
  assign WILL_FIRE_RL_doFADD_D = CAN_FIRE_RL_doFADD_D ;

  // rule RL_doFSUB_D
  assign CAN_FIRE_RL_doFSUB_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h05 ;
  assign WILL_FIRE_RL_doFSUB_D = CAN_FIRE_RL_doFSUB_D ;

  // rule RL_doFMUL_D
  assign CAN_FIRE_RL_doFMUL_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h09 ;
  assign WILL_FIRE_RL_doFMUL_D = CAN_FIRE_RL_doFMUL_D ;

  // rule RL_doFMADD_D
  assign CAN_FIRE_RL_doFMADD_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFMADD_D = CAN_FIRE_RL_doFMADD_D ;

  // rule RL_doFMSUB_D
  assign CAN_FIRE_RL_doFMSUB_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFMSUB_D = CAN_FIRE_RL_doFMSUB_D ;

  // rule RL_doFNMADD_D
  assign CAN_FIRE_RL_doFNMADD_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFNMADD_D = CAN_FIRE_RL_doFNMADD_D ;

  // rule RL_doFNMSUB_D
  assign CAN_FIRE_RL_doFNMSUB_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFNMSUB_D = CAN_FIRE_RL_doFNMSUB_D ;

  // rule RL_doFDIV_D
  assign CAN_FIRE_RL_doFDIV_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h0D ;
  assign WILL_FIRE_RL_doFDIV_D = CAN_FIRE_RL_doFDIV_D ;

  // rule RL_doFSQRT_D
  assign CAN_FIRE_RL_doFSQRT_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h2D ;
  assign WILL_FIRE_RL_doFSQRT_D = CAN_FIRE_RL_doFSQRT_D ;

  // rule RL_doFSGNJ_D
  assign CAN_FIRE_RL_doFSGNJ_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFSGNJ_D = CAN_FIRE_RL_doFSGNJ_D ;

  // rule RL_doFSGNJN_D
  assign CAN_FIRE_RL_doFSGNJN_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFSGNJN_D = CAN_FIRE_RL_doFSGNJN_D ;

  // rule RL_doFSGNJX_D
  assign CAN_FIRE_RL_doFSGNJX_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFSGNJX_D = CAN_FIRE_RL_doFSGNJX_D ;

  // rule RL_doFCVT_D_W
  assign CAN_FIRE_RL_doFCVT_D_W =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_D_W = CAN_FIRE_RL_doFCVT_D_W ;

  // rule RL_doFCVT_D_WU
  assign CAN_FIRE_RL_doFCVT_D_WU =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_D_WU = CAN_FIRE_RL_doFCVT_D_WU ;

  // rule RL_doFCVT_W_D
  assign CAN_FIRE_RL_doFCVT_W_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_W_D = CAN_FIRE_RL_doFCVT_W_D ;

  // rule RL_doFCVT_WU_D
  assign CAN_FIRE_RL_doFCVT_WU_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_WU_D = CAN_FIRE_RL_doFCVT_WU_D ;

  // rule RL_doFCVT_S_D
  assign CAN_FIRE_RL_doFCVT_S_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h20 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_S_D = CAN_FIRE_RL_doFCVT_S_D ;

  // rule RL_doFCVT_D_S
  assign CAN_FIRE_RL_doFCVT_D_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h21 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_D_S = CAN_FIRE_RL_doFCVT_D_S ;

  // rule RL_doFMIN_D
  assign CAN_FIRE_RL_doFMIN_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h15 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMIN_D = CAN_FIRE_RL_doFMIN_D ;

  // rule RL_doFMAX_D
  assign CAN_FIRE_RL_doFMAX_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h15 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFMAX_D = CAN_FIRE_RL_doFMAX_D ;

  // rule RL_doFEQ_D
  assign CAN_FIRE_RL_doFEQ_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFEQ_D = CAN_FIRE_RL_doFEQ_D ;

  // rule RL_doFLT_D
  assign CAN_FIRE_RL_doFLT_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFLT_D = CAN_FIRE_RL_doFLT_D ;

  // rule RL_doFLE_D
  assign CAN_FIRE_RL_doFLE_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFLE_D = CAN_FIRE_RL_doFLE_D ;

  // rule RL_doFMV_D_X
  assign CAN_FIRE_RL_doFMV_D_X =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h79 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_D_X = CAN_FIRE_RL_doFMV_D_X ;

  // rule RL_doFMV_X_D
  assign CAN_FIRE_RL_doFMV_X_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h71 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_X_D = CAN_FIRE_RL_doFMV_X_D ;

  // rule RL_doFCLASS_D
  assign CAN_FIRE_RL_doFCLASS_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h71 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFCLASS_D = CAN_FIRE_RL_doFCLASS_D ;

  // rule RL_rl_get_fpu_result
  assign CAN_FIRE_RL_rl_get_fpu_result = MUX_dw_result$wset_1__SEL_1 ;
  assign WILL_FIRE_RL_rl_get_fpu_result = MUX_dw_result$wset_1__SEL_1 ;

  // rule RL_rl_drive_fpu_result
  assign CAN_FIRE_RL_rl_drive_fpu_result = stateR == 2'd3 ;
  assign WILL_FIRE_RL_rl_drive_fpu_result = stateR == 2'd3 ;

  // rule RL_rl_reset_begin
  assign CAN_FIRE_RL_rl_reset_begin =
	     fpu$RDY_server_reset_request_put && resetReqsF$EMPTY_N ;
  assign WILL_FIRE_RL_rl_reset_begin = CAN_FIRE_RL_rl_reset_begin ;

  // inputs to muxes for submodule ports
  assign MUX_dw_result$wset_1__SEL_1 =
	     fpu$RDY_server_core_response_get && stateR == 2'd2 ;
  assign MUX_dw_result$wset_1__VAL_1 =
	     { x__h155457, fpu$server_core_response_get[4:0] } ;
  assign MUX_fpu$server_core_request_put_1__VAL_1 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd0 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_2 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd1 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_3 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd2 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_4 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d78,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd5 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_5 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d78,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd6 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_6 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d78,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd7 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_7 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d78,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd8 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_8 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd3 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_9 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29,
	       130'h15555555555555554AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd4 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_10 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd0 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_11 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd1 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_12 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd2 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_13 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd5 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_14 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd6 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_15 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd7 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_16 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd8 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_17 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd3 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_18 =
	     { 1'd0,
	       requestR[191:128],
	       130'h15555555555555554AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50,
	       4'd4 } ;
  assign MUX_requestR$write_1__VAL_2 =
	     { 1'd1,
	       req_opcode,
	       req_f7,
	       req_rs2,
	       req_rm,
	       req_v1,
	       req_v2,
	       req_v3 } ;
  assign MUX_resultR$write_1__VAL_3 =
	     { 1'd1, x__h155457, fpu$server_core_response_get[4:0] } ;
  assign MUX_resultR$write_1__VAL_4 = { 1'd1, x__h154833, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_5 = { 1'd1, requestR[191:128], 5'd0 } ;
  assign MUX_resultR$write_1__VAL_7 = { 1'd1, x__h152874, x__h152749 } ;
  assign MUX_resultR$write_1__VAL_8 = { 1'd1, x__h151052, x__h152749 } ;
  assign MUX_resultR$write_1__VAL_9 = { 1'd1, x__h148412, x__h143080 } ;
  assign MUX_resultR$write_1__VAL_10 = { 1'd1, x__h144023, x__h143080 } ;
  assign MUX_resultR$write_1__VAL_11 = { 1'd1, x__h139530, x__h143080 } ;
  assign MUX_resultR$write_1__VAL_12 = { 1'd1, x__h97859, x__h138663 } ;
  assign MUX_resultR$write_1__VAL_13 = { 1'd1, x__h49209, x__h96932 } ;
  assign MUX_resultR$write_1__VAL_14 = { 1'd1, x__h48519, x__h49021 } ;
  assign MUX_resultR$write_1__VAL_15 = { 1'd1, x__h46998, x__h48317 } ;
  assign MUX_resultR$write_1__VAL_16 = { 1'd1, x__h37386, x__h46769 } ;
  assign MUX_resultR$write_1__VAL_17 = { 1'd1, x__h27493, x__h37156 } ;
  assign MUX_resultR$write_1__VAL_18 = { 1'd1, x__h27418, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_19 = { 1'd1, x__h27350, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_20 = { 1'd1, x__h27284, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_21 = { 1'd1, x__h25977, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_22 = { 1'd1, x__h24947, x__h24822 } ;
  assign MUX_resultR$write_1__VAL_23 = { 1'd1, x__h23933, x__h24822 } ;
  assign MUX_resultR$write_1__VAL_24 = { 1'd1, x__h22505, x__h19349 } ;
  assign MUX_resultR$write_1__VAL_25 = { 1'd1, x__h22423, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_26 = { 1'd1, x__h22358, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_27 = { 1'd1, x__h19888, x__h19349 } ;
  assign MUX_resultR$write_1__VAL_28 = { 1'd1, x__h17309, x__h19349 } ;
  assign MUX_resultR$write_1__VAL_29 = { 1'd1, x__h16615, x__h17117 } ;
  assign MUX_resultR$write_1__VAL_30 = { 1'd1, x__h15077, x__h16413 } ;
  assign MUX_resultR$write_1__VAL_31 = { 1'd1, x__h8990, x__h14848 } ;
  assign MUX_resultR$write_1__VAL_32 = { 1'd1, x__h2584, x__h8757 } ;
  assign MUX_resultR$write_1__VAL_33 = { 1'd1, x__h2492, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_34 = { 1'd1, x__h2414, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_35 = { 1'd1, x__h2333, 5'd0 } ;

  // inlined wires
  assign dw_valid$wget = !WILL_FIRE_RL_rl_drive_fpu_result || resultR[69] ;
  assign dw_valid$whas =
	     WILL_FIRE_RL_rl_drive_fpu_result ||
	     WILL_FIRE_RL_rl_get_fpu_result ;
  assign dw_result$wget =
	     WILL_FIRE_RL_rl_get_fpu_result ?
	       MUX_dw_result$wset_1__VAL_1 :
	       resultR[68:0] ;

  // register requestR
  assign requestR$D_IN =
	     WILL_FIRE_RL_rl_reset_begin ?
	       215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       MUX_requestR$write_1__VAL_2 ;
  assign requestR$EN = WILL_FIRE_RL_rl_reset_begin || EN_req ;

  // register resultR
  always@(WILL_FIRE_RL_rl_reset_begin or
	  EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  MUX_resultR$write_1__VAL_3 or
	  WILL_FIRE_RL_doFCLASS_D or
	  MUX_resultR$write_1__VAL_4 or
	  WILL_FIRE_RL_doFMV_X_D or
	  MUX_resultR$write_1__VAL_5 or
	  WILL_FIRE_RL_doFMV_D_X or
	  WILL_FIRE_RL_doFLE_D or
	  MUX_resultR$write_1__VAL_7 or
	  WILL_FIRE_RL_doFLT_D or
	  MUX_resultR$write_1__VAL_8 or
	  WILL_FIRE_RL_doFEQ_D or
	  MUX_resultR$write_1__VAL_9 or
	  WILL_FIRE_RL_doFMAX_D or
	  MUX_resultR$write_1__VAL_10 or
	  WILL_FIRE_RL_doFMIN_D or
	  MUX_resultR$write_1__VAL_11 or
	  WILL_FIRE_RL_doFCVT_D_S or
	  MUX_resultR$write_1__VAL_12 or
	  WILL_FIRE_RL_doFCVT_S_D or
	  MUX_resultR$write_1__VAL_13 or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  MUX_resultR$write_1__VAL_14 or
	  WILL_FIRE_RL_doFCVT_W_D or
	  MUX_resultR$write_1__VAL_15 or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  MUX_resultR$write_1__VAL_16 or
	  WILL_FIRE_RL_doFCVT_D_W or
	  MUX_resultR$write_1__VAL_17 or
	  WILL_FIRE_RL_doFSGNJX_D or
	  MUX_resultR$write_1__VAL_18 or
	  WILL_FIRE_RL_doFSGNJN_D or
	  MUX_resultR$write_1__VAL_19 or
	  WILL_FIRE_RL_doFSGNJ_D or
	  MUX_resultR$write_1__VAL_20 or
	  WILL_FIRE_RL_doFCLASS_S or
	  MUX_resultR$write_1__VAL_21 or
	  WILL_FIRE_RL_doFLE_S or
	  MUX_resultR$write_1__VAL_22 or
	  WILL_FIRE_RL_doFLT_S or
	  MUX_resultR$write_1__VAL_23 or
	  WILL_FIRE_RL_doFEQ_S or
	  MUX_resultR$write_1__VAL_24 or
	  WILL_FIRE_RL_doFMV_X_W or
	  MUX_resultR$write_1__VAL_25 or
	  WILL_FIRE_RL_doFMV_W_X or
	  MUX_resultR$write_1__VAL_26 or
	  WILL_FIRE_RL_doFMAX_S or
	  MUX_resultR$write_1__VAL_27 or
	  WILL_FIRE_RL_doFMIN_S or
	  MUX_resultR$write_1__VAL_28 or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  MUX_resultR$write_1__VAL_29 or
	  WILL_FIRE_RL_doFCVT_W_S or
	  MUX_resultR$write_1__VAL_30 or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  MUX_resultR$write_1__VAL_31 or
	  WILL_FIRE_RL_doFCVT_S_W or
	  MUX_resultR$write_1__VAL_32 or
	  WILL_FIRE_RL_doFSGNJX_S or
	  MUX_resultR$write_1__VAL_33 or
	  WILL_FIRE_RL_doFSGNJN_S or
	  MUX_resultR$write_1__VAL_34 or
	  WILL_FIRE_RL_doFSGNJ_S or MUX_resultR$write_1__VAL_35)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_begin || EN_req:
	resultR$D_IN = 70'h0AAAAAAAAAAAAAAAAA;
    WILL_FIRE_RL_rl_get_fpu_result: resultR$D_IN = MUX_resultR$write_1__VAL_3;
    WILL_FIRE_RL_doFCLASS_D: resultR$D_IN = MUX_resultR$write_1__VAL_4;
    WILL_FIRE_RL_doFMV_X_D: resultR$D_IN = MUX_resultR$write_1__VAL_5;
    WILL_FIRE_RL_doFMV_D_X: resultR$D_IN = MUX_resultR$write_1__VAL_5;
    WILL_FIRE_RL_doFLE_D: resultR$D_IN = MUX_resultR$write_1__VAL_7;
    WILL_FIRE_RL_doFLT_D: resultR$D_IN = MUX_resultR$write_1__VAL_8;
    WILL_FIRE_RL_doFEQ_D: resultR$D_IN = MUX_resultR$write_1__VAL_9;
    WILL_FIRE_RL_doFMAX_D: resultR$D_IN = MUX_resultR$write_1__VAL_10;
    WILL_FIRE_RL_doFMIN_D: resultR$D_IN = MUX_resultR$write_1__VAL_11;
    WILL_FIRE_RL_doFCVT_D_S: resultR$D_IN = MUX_resultR$write_1__VAL_12;
    WILL_FIRE_RL_doFCVT_S_D: resultR$D_IN = MUX_resultR$write_1__VAL_13;
    WILL_FIRE_RL_doFCVT_WU_D: resultR$D_IN = MUX_resultR$write_1__VAL_14;
    WILL_FIRE_RL_doFCVT_W_D: resultR$D_IN = MUX_resultR$write_1__VAL_15;
    WILL_FIRE_RL_doFCVT_D_WU: resultR$D_IN = MUX_resultR$write_1__VAL_16;
    WILL_FIRE_RL_doFCVT_D_W: resultR$D_IN = MUX_resultR$write_1__VAL_17;
    WILL_FIRE_RL_doFSGNJX_D: resultR$D_IN = MUX_resultR$write_1__VAL_18;
    WILL_FIRE_RL_doFSGNJN_D: resultR$D_IN = MUX_resultR$write_1__VAL_19;
    WILL_FIRE_RL_doFSGNJ_D: resultR$D_IN = MUX_resultR$write_1__VAL_20;
    WILL_FIRE_RL_doFCLASS_S: resultR$D_IN = MUX_resultR$write_1__VAL_21;
    WILL_FIRE_RL_doFLE_S: resultR$D_IN = MUX_resultR$write_1__VAL_22;
    WILL_FIRE_RL_doFLT_S: resultR$D_IN = MUX_resultR$write_1__VAL_23;
    WILL_FIRE_RL_doFEQ_S: resultR$D_IN = MUX_resultR$write_1__VAL_24;
    WILL_FIRE_RL_doFMV_X_W: resultR$D_IN = MUX_resultR$write_1__VAL_25;
    WILL_FIRE_RL_doFMV_W_X: resultR$D_IN = MUX_resultR$write_1__VAL_26;
    WILL_FIRE_RL_doFMAX_S: resultR$D_IN = MUX_resultR$write_1__VAL_27;
    WILL_FIRE_RL_doFMIN_S: resultR$D_IN = MUX_resultR$write_1__VAL_28;
    WILL_FIRE_RL_doFCVT_WU_S: resultR$D_IN = MUX_resultR$write_1__VAL_29;
    WILL_FIRE_RL_doFCVT_W_S: resultR$D_IN = MUX_resultR$write_1__VAL_30;
    WILL_FIRE_RL_doFCVT_S_WU: resultR$D_IN = MUX_resultR$write_1__VAL_31;
    WILL_FIRE_RL_doFCVT_S_W: resultR$D_IN = MUX_resultR$write_1__VAL_32;
    WILL_FIRE_RL_doFSGNJX_S: resultR$D_IN = MUX_resultR$write_1__VAL_33;
    WILL_FIRE_RL_doFSGNJN_S: resultR$D_IN = MUX_resultR$write_1__VAL_34;
    WILL_FIRE_RL_doFSGNJ_S: resultR$D_IN = MUX_resultR$write_1__VAL_35;
    default: resultR$D_IN = 70'h2AAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign resultR$EN =
	     WILL_FIRE_RL_rl_reset_begin || EN_req ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFSGNJ_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_rl_get_fpu_result ;

  // register stateR
  always@(WILL_FIRE_RL_rl_reset_begin or
	  EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  WILL_FIRE_RL_doFCLASS_D or
	  WILL_FIRE_RL_doFMV_X_D or
	  WILL_FIRE_RL_doFMV_D_X or
	  WILL_FIRE_RL_doFLE_D or
	  WILL_FIRE_RL_doFLT_D or
	  WILL_FIRE_RL_doFEQ_D or
	  WILL_FIRE_RL_doFMAX_D or
	  WILL_FIRE_RL_doFMIN_D or
	  WILL_FIRE_RL_doFCVT_D_S or
	  WILL_FIRE_RL_doFCVT_S_D or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  WILL_FIRE_RL_doFCVT_W_D or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  WILL_FIRE_RL_doFCVT_D_W or
	  WILL_FIRE_RL_doFSGNJX_D or
	  WILL_FIRE_RL_doFSGNJN_D or
	  WILL_FIRE_RL_doFSGNJ_D or
	  WILL_FIRE_RL_doFSQRT_D or
	  WILL_FIRE_RL_doFDIV_D or
	  WILL_FIRE_RL_doFNMSUB_D or
	  WILL_FIRE_RL_doFNMADD_D or
	  WILL_FIRE_RL_doFMSUB_D or
	  WILL_FIRE_RL_doFMADD_D or
	  WILL_FIRE_RL_doFMUL_D or
	  WILL_FIRE_RL_doFSUB_D or
	  WILL_FIRE_RL_doFADD_D or
	  WILL_FIRE_RL_doFCLASS_S or
	  WILL_FIRE_RL_doFLE_S or
	  WILL_FIRE_RL_doFLT_S or
	  WILL_FIRE_RL_doFEQ_S or
	  WILL_FIRE_RL_doFMV_X_W or
	  WILL_FIRE_RL_doFMV_W_X or
	  WILL_FIRE_RL_doFMAX_S or
	  WILL_FIRE_RL_doFMIN_S or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  WILL_FIRE_RL_doFCVT_W_S or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  WILL_FIRE_RL_doFCVT_S_W or
	  WILL_FIRE_RL_doFSGNJX_S or
	  WILL_FIRE_RL_doFSGNJN_S or
	  WILL_FIRE_RL_doFSGNJ_S or
	  WILL_FIRE_RL_doFSQRT_S or
	  WILL_FIRE_RL_doFDIV_S or
	  WILL_FIRE_RL_doFNMSUB_S or
	  WILL_FIRE_RL_doFNMADD_S or
	  WILL_FIRE_RL_doFMSUB_S or
	  WILL_FIRE_RL_doFMADD_S or
	  WILL_FIRE_RL_doFMUL_S or
	  WILL_FIRE_RL_doFSUB_S or
	  WILL_FIRE_RL_doFADD_S or WILL_FIRE_RL_rl_reset_end)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_begin: stateR$D_IN = 2'd0;
    EN_req: stateR$D_IN = 2'd1;
    WILL_FIRE_RL_rl_get_fpu_result || WILL_FIRE_RL_doFCLASS_D ||
    WILL_FIRE_RL_doFMV_X_D ||
    WILL_FIRE_RL_doFMV_D_X ||
    WILL_FIRE_RL_doFLE_D ||
    WILL_FIRE_RL_doFLT_D ||
    WILL_FIRE_RL_doFEQ_D ||
    WILL_FIRE_RL_doFMAX_D ||
    WILL_FIRE_RL_doFMIN_D ||
    WILL_FIRE_RL_doFCVT_D_S ||
    WILL_FIRE_RL_doFCVT_S_D ||
    WILL_FIRE_RL_doFCVT_WU_D ||
    WILL_FIRE_RL_doFCVT_W_D ||
    WILL_FIRE_RL_doFCVT_D_WU ||
    WILL_FIRE_RL_doFCVT_D_W ||
    WILL_FIRE_RL_doFSGNJX_D ||
    WILL_FIRE_RL_doFSGNJN_D ||
    WILL_FIRE_RL_doFSGNJ_D:
	stateR$D_IN = 2'd3;
    WILL_FIRE_RL_doFSQRT_D || WILL_FIRE_RL_doFDIV_D ||
    WILL_FIRE_RL_doFNMSUB_D ||
    WILL_FIRE_RL_doFNMADD_D ||
    WILL_FIRE_RL_doFMSUB_D ||
    WILL_FIRE_RL_doFMADD_D ||
    WILL_FIRE_RL_doFMUL_D ||
    WILL_FIRE_RL_doFSUB_D ||
    WILL_FIRE_RL_doFADD_D:
	stateR$D_IN = 2'd2;
    WILL_FIRE_RL_doFCLASS_S || WILL_FIRE_RL_doFLE_S || WILL_FIRE_RL_doFLT_S ||
    WILL_FIRE_RL_doFEQ_S ||
    WILL_FIRE_RL_doFMV_X_W ||
    WILL_FIRE_RL_doFMV_W_X ||
    WILL_FIRE_RL_doFMAX_S ||
    WILL_FIRE_RL_doFMIN_S ||
    WILL_FIRE_RL_doFCVT_WU_S ||
    WILL_FIRE_RL_doFCVT_W_S ||
    WILL_FIRE_RL_doFCVT_S_WU ||
    WILL_FIRE_RL_doFCVT_S_W ||
    WILL_FIRE_RL_doFSGNJX_S ||
    WILL_FIRE_RL_doFSGNJN_S ||
    WILL_FIRE_RL_doFSGNJ_S:
	stateR$D_IN = 2'd3;
    WILL_FIRE_RL_doFSQRT_S || WILL_FIRE_RL_doFDIV_S ||
    WILL_FIRE_RL_doFNMSUB_S ||
    WILL_FIRE_RL_doFNMADD_S ||
    WILL_FIRE_RL_doFMSUB_S ||
    WILL_FIRE_RL_doFMADD_S ||
    WILL_FIRE_RL_doFMUL_S ||
    WILL_FIRE_RL_doFSUB_S ||
    WILL_FIRE_RL_doFADD_S:
	stateR$D_IN = 2'd2;
    WILL_FIRE_RL_rl_reset_end: stateR$D_IN = 2'd1;
    default: stateR$D_IN = 2'b10 /* unspecified value */ ;
  endcase
  assign stateR$EN =
	     WILL_FIRE_RL_rl_reset_begin || WILL_FIRE_RL_rl_reset_end ||
	     EN_req ||
	     WILL_FIRE_RL_doFSQRT_D ||
	     WILL_FIRE_RL_doFDIV_D ||
	     WILL_FIRE_RL_doFNMSUB_D ||
	     WILL_FIRE_RL_doFNMADD_D ||
	     WILL_FIRE_RL_doFMSUB_D ||
	     WILL_FIRE_RL_doFMADD_D ||
	     WILL_FIRE_RL_doFMUL_D ||
	     WILL_FIRE_RL_doFSUB_D ||
	     WILL_FIRE_RL_doFADD_D ||
	     WILL_FIRE_RL_doFSQRT_S ||
	     WILL_FIRE_RL_doFDIV_S ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFADD_S ||
	     WILL_FIRE_RL_rl_get_fpu_result ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJ_S ;

  // submodule fpu
  always@(WILL_FIRE_RL_doFADD_S or
	  MUX_fpu$server_core_request_put_1__VAL_1 or
	  WILL_FIRE_RL_doFSUB_S or
	  MUX_fpu$server_core_request_put_1__VAL_2 or
	  WILL_FIRE_RL_doFMUL_S or
	  MUX_fpu$server_core_request_put_1__VAL_3 or
	  WILL_FIRE_RL_doFMADD_S or
	  MUX_fpu$server_core_request_put_1__VAL_4 or
	  WILL_FIRE_RL_doFMSUB_S or
	  MUX_fpu$server_core_request_put_1__VAL_5 or
	  WILL_FIRE_RL_doFNMADD_S or
	  MUX_fpu$server_core_request_put_1__VAL_6 or
	  WILL_FIRE_RL_doFNMSUB_S or
	  MUX_fpu$server_core_request_put_1__VAL_7 or
	  WILL_FIRE_RL_doFDIV_S or
	  MUX_fpu$server_core_request_put_1__VAL_8 or
	  WILL_FIRE_RL_doFSQRT_S or
	  MUX_fpu$server_core_request_put_1__VAL_9 or
	  WILL_FIRE_RL_doFADD_D or
	  MUX_fpu$server_core_request_put_1__VAL_10 or
	  WILL_FIRE_RL_doFSUB_D or
	  MUX_fpu$server_core_request_put_1__VAL_11 or
	  WILL_FIRE_RL_doFMUL_D or
	  MUX_fpu$server_core_request_put_1__VAL_12 or
	  WILL_FIRE_RL_doFMADD_D or
	  MUX_fpu$server_core_request_put_1__VAL_13 or
	  WILL_FIRE_RL_doFMSUB_D or
	  MUX_fpu$server_core_request_put_1__VAL_14 or
	  WILL_FIRE_RL_doFNMADD_D or
	  MUX_fpu$server_core_request_put_1__VAL_15 or
	  WILL_FIRE_RL_doFNMSUB_D or
	  MUX_fpu$server_core_request_put_1__VAL_16 or
	  WILL_FIRE_RL_doFDIV_D or
	  MUX_fpu$server_core_request_put_1__VAL_17 or
	  WILL_FIRE_RL_doFSQRT_D or MUX_fpu$server_core_request_put_1__VAL_18)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_doFADD_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_1;
      WILL_FIRE_RL_doFSUB_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_2;
      WILL_FIRE_RL_doFMUL_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_3;
      WILL_FIRE_RL_doFMADD_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_4;
      WILL_FIRE_RL_doFMSUB_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_5;
      WILL_FIRE_RL_doFNMADD_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_6;
      WILL_FIRE_RL_doFNMSUB_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_7;
      WILL_FIRE_RL_doFDIV_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_8;
      WILL_FIRE_RL_doFSQRT_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_9;
      WILL_FIRE_RL_doFADD_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_10;
      WILL_FIRE_RL_doFSUB_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_11;
      WILL_FIRE_RL_doFMUL_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_12;
      WILL_FIRE_RL_doFMADD_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_13;
      WILL_FIRE_RL_doFMSUB_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_14;
      WILL_FIRE_RL_doFNMADD_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_15;
      WILL_FIRE_RL_doFNMSUB_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_16;
      WILL_FIRE_RL_doFDIV_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_17;
      WILL_FIRE_RL_doFSQRT_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_18;
      default: fpu$server_core_request_put =
		   202'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign fpu$EN_server_core_request_put =
	     WILL_FIRE_RL_doFADD_S || WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFDIV_S ||
	     WILL_FIRE_RL_doFSQRT_S ||
	     WILL_FIRE_RL_doFADD_D ||
	     WILL_FIRE_RL_doFSUB_D ||
	     WILL_FIRE_RL_doFMUL_D ||
	     WILL_FIRE_RL_doFMADD_D ||
	     WILL_FIRE_RL_doFMSUB_D ||
	     WILL_FIRE_RL_doFNMADD_D ||
	     WILL_FIRE_RL_doFNMSUB_D ||
	     WILL_FIRE_RL_doFDIV_D ||
	     WILL_FIRE_RL_doFSQRT_D ;
  assign fpu$EN_server_core_response_get = MUX_dw_result$wset_1__SEL_1 ;
  assign fpu$EN_server_reset_request_put = CAN_FIRE_RL_rl_reset_begin ;
  assign fpu$EN_server_reset_response_get = CAN_FIRE_RL_rl_reset_end ;

  // submodule frmFpuF
  assign frmFpuF$D_IN = 1'b0 ;
  assign frmFpuF$ENQ = 1'b0 ;
  assign frmFpuF$DEQ = 1'b0 ;
  assign frmFpuF$CLR = CAN_FIRE_RL_rl_reset_begin ;

  // submodule resetReqsF
  assign resetReqsF$ENQ = EN_server_reset_request_put ;
  assign resetReqsF$DEQ =
	     fpu$RDY_server_reset_request_put && resetReqsF$EMPTY_N ;
  assign resetReqsF$CLR = 1'b0 ;

  // submodule resetRspsF
  assign resetRspsF$ENQ =
	     fpu$RDY_server_reset_response_get && resetRspsF$FULL_N &&
	     stateR == 2'd0 ;
  assign resetRspsF$DEQ = EN_server_reset_response_get ;
  assign resetRspsF$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BI_ETC__q60 =
	     _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2087 ?
	       _theResult___snd__h69240 :
	       _theResult____h61070 ;
  assign IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q97 =
	     _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3406 ?
	       _theResult___snd__h128373 :
	       _theResult____h120074 ;
  assign IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_B_ETC__q65 =
	     _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2571 ?
	       _theResult___snd__h87093 :
	       _theResult____h78794 ;
  assign IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_ETC__q100 =
	     _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3479 ?
	       _theResult___snd__h118726 :
	       _theResult___snd__h137125 ;
  assign IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_ETC__q94 =
	     _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3086 ?
	       _theResult___snd__h118726 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_609__ETC__q62 =
	     _0_CONCAT_IF_requestR_3_BITS_190_TO_180_609_EQ__ETC___d2249 ?
	       _theResult___snd__h77852 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_609__ETC__q68 =
	     _0_CONCAT_IF_requestR_3_BITS_190_TO_180_609_EQ__ETC___d2644 ?
	       _theResult___snd__h77852 :
	       _theResult___snd__h95729 ;
  assign IF_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_7_ETC___d2831 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1853 ?
	       ((_theResult___fst_exp__h69177 == 8'd255) ?
		  requestR[191] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard1080_0b0_requestR_BIT_191_0b1_reques_ETC__q86 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87)) :
	       ((_theResult___fst_exp__h77863 == 8'd255) ?
		  requestR[191] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard9815_0b0_requestR_BIT_191_0b1_reques_ETC__q88 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89)) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1301 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1250 ?
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard5519_0b0_requestR_BIT_159_0b1_reques_ETC__q35 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36) :
	       ((x__h36264[10:0] == 11'd2047) ?
		  requestR[159] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard6249_0b0_requestR_BIT_159_0b1_reques_ETC__q37 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38)) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1416 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1250 ?
	       guard__h35519 != 2'b0 :
	       x__h36264[10:0] != 11'd2047 && guard__h36249 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d345 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d284 ?
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard519_0b0_requestR_BIT_159_0b1_request_ETC__q8 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q9) :
	       ((x__h8064[7:0] == 8'd255) ?
		  requestR[159] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard049_0b0_requestR_BIT_159_0b1_request_ETC__q10 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11)) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d495 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d284 ?
	       guard__h7519 != 2'b0 :
	       x__h8064[7:0] != 8'd255 && guard__h8049 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_T_ETC___d1598 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1462 ?
	       guard__h45160 != 2'b0 :
	       x__h45904[10:0] != 11'd2047 && guard__h45889 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_T_ETC___d808 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d638 ?
	       guard__h13641 != 2'b0 :
	       x__h14182[7:0] != 8'd255 && guard__h14167 != 2'b0 ;
  assign IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2085 =
	     (_theResult____h61070[56] ?
		6'd0 :
		(_theResult____h61070[55] ?
		   6'd1 :
		   (_theResult____h61070[54] ?
		      6'd2 :
		      (_theResult____h61070[53] ?
			 6'd3 :
			 (_theResult____h61070[52] ?
			    6'd4 :
			    (_theResult____h61070[51] ?
			       6'd5 :
			       (_theResult____h61070[50] ?
				  6'd6 :
				  (_theResult____h61070[49] ?
				     6'd7 :
				     (_theResult____h61070[48] ?
					6'd8 :
					(_theResult____h61070[47] ?
					   6'd9 :
					   (_theResult____h61070[46] ?
					      6'd10 :
					      (_theResult____h61070[45] ?
						 6'd11 :
						 (_theResult____h61070[44] ?
						    6'd12 :
						    (_theResult____h61070[43] ?
						       6'd13 :
						       (_theResult____h61070[42] ?
							  6'd14 :
							  (_theResult____h61070[41] ?
							     6'd15 :
							     (_theResult____h61070[40] ?
								6'd16 :
								(_theResult____h61070[39] ?
								   6'd17 :
								   (_theResult____h61070[38] ?
								      6'd18 :
								      (_theResult____h61070[37] ?
									 6'd19 :
									 (_theResult____h61070[36] ?
									    6'd20 :
									    (_theResult____h61070[35] ?
									       6'd21 :
									       (_theResult____h61070[34] ?
										  6'd22 :
										  (_theResult____h61070[33] ?
										     6'd23 :
										     (_theResult____h61070[32] ?
											6'd24 :
											(_theResult____h61070[31] ?
											   6'd25 :
											   (_theResult____h61070[30] ?
											      6'd26 :
											      (_theResult____h61070[29] ?
												 6'd27 :
												 (_theResult____h61070[28] ?
												    6'd28 :
												    (_theResult____h61070[27] ?
												       6'd29 :
												       (_theResult____h61070[26] ?
													  6'd30 :
													  (_theResult____h61070[25] ?
													     6'd31 :
													     (_theResult____h61070[24] ?
														6'd32 :
														(_theResult____h61070[23] ?
														   6'd33 :
														   (_theResult____h61070[22] ?
														      6'd34 :
														      (_theResult____h61070[21] ?
															 6'd35 :
															 (_theResult____h61070[20] ?
															    6'd36 :
															    (_theResult____h61070[19] ?
															       6'd37 :
															       (_theResult____h61070[18] ?
																  6'd38 :
																  (_theResult____h61070[17] ?
																     6'd39 :
																     (_theResult____h61070[16] ?
																	6'd40 :
																	(_theResult____h61070[15] ?
																	   6'd41 :
																	   (_theResult____h61070[14] ?
																	      6'd42 :
																	      (_theResult____h61070[13] ?
																		 6'd43 :
																		 (_theResult____h61070[12] ?
																		    6'd44 :
																		    (_theResult____h61070[11] ?
																		       6'd45 :
																		       (_theResult____h61070[10] ?
																			  6'd46 :
																			  (_theResult____h61070[9] ?
																			     6'd47 :
																			     (_theResult____h61070[8] ?
																				6'd48 :
																				(_theResult____h61070[7] ?
																				   6'd49 :
																				   (_theResult____h61070[6] ?
																				      6'd50 :
																				      (_theResult____h61070[5] ?
																					 6'd51 :
																					 (_theResult____h61070[4] ?
																					    6'd52 :
																					    (_theResult____h61070[3] ?
																					       6'd53 :
																					       (_theResult____h61070[2] ?
																						  6'd54 :
																						  (_theResult____h61070[1] ?
																						     6'd55 :
																						     (_theResult____h61070[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3404 =
	     (_theResult____h120074[56] ?
		6'd0 :
		(_theResult____h120074[55] ?
		   6'd1 :
		   (_theResult____h120074[54] ?
		      6'd2 :
		      (_theResult____h120074[53] ?
			 6'd3 :
			 (_theResult____h120074[52] ?
			    6'd4 :
			    (_theResult____h120074[51] ?
			       6'd5 :
			       (_theResult____h120074[50] ?
				  6'd6 :
				  (_theResult____h120074[49] ?
				     6'd7 :
				     (_theResult____h120074[48] ?
					6'd8 :
					(_theResult____h120074[47] ?
					   6'd9 :
					   (_theResult____h120074[46] ?
					      6'd10 :
					      (_theResult____h120074[45] ?
						 6'd11 :
						 (_theResult____h120074[44] ?
						    6'd12 :
						    (_theResult____h120074[43] ?
						       6'd13 :
						       (_theResult____h120074[42] ?
							  6'd14 :
							  (_theResult____h120074[41] ?
							     6'd15 :
							     (_theResult____h120074[40] ?
								6'd16 :
								(_theResult____h120074[39] ?
								   6'd17 :
								   (_theResult____h120074[38] ?
								      6'd18 :
								      (_theResult____h120074[37] ?
									 6'd19 :
									 (_theResult____h120074[36] ?
									    6'd20 :
									    (_theResult____h120074[35] ?
									       6'd21 :
									       (_theResult____h120074[34] ?
										  6'd22 :
										  (_theResult____h120074[33] ?
										     6'd23 :
										     (_theResult____h120074[32] ?
											6'd24 :
											(_theResult____h120074[31] ?
											   6'd25 :
											   (_theResult____h120074[30] ?
											      6'd26 :
											      (_theResult____h120074[29] ?
												 6'd27 :
												 (_theResult____h120074[28] ?
												    6'd28 :
												    (_theResult____h120074[27] ?
												       6'd29 :
												       (_theResult____h120074[26] ?
													  6'd30 :
													  (_theResult____h120074[25] ?
													     6'd31 :
													     (_theResult____h120074[24] ?
														6'd32 :
														(_theResult____h120074[23] ?
														   6'd33 :
														   (_theResult____h120074[22] ?
														      6'd34 :
														      (_theResult____h120074[21] ?
															 6'd35 :
															 (_theResult____h120074[20] ?
															    6'd36 :
															    (_theResult____h120074[19] ?
															       6'd37 :
															       (_theResult____h120074[18] ?
																  6'd38 :
																  (_theResult____h120074[17] ?
																     6'd39 :
																     (_theResult____h120074[16] ?
																	6'd40 :
																	(_theResult____h120074[15] ?
																	   6'd41 :
																	   (_theResult____h120074[14] ?
																	      6'd42 :
																	      (_theResult____h120074[13] ?
																		 6'd43 :
																		 (_theResult____h120074[12] ?
																		    6'd44 :
																		    (_theResult____h120074[11] ?
																		       6'd45 :
																		       (_theResult____h120074[10] ?
																			  6'd46 :
																			  (_theResult____h120074[9] ?
																			     6'd47 :
																			     (_theResult____h120074[8] ?
																				6'd48 :
																				(_theResult____h120074[7] ?
																				   6'd49 :
																				   (_theResult____h120074[6] ?
																				      6'd50 :
																				      (_theResult____h120074[5] ?
																					 6'd51 :
																					 (_theResult____h120074[4] ?
																					    6'd52 :
																					    (_theResult____h120074[3] ?
																					       6'd53 :
																					       (_theResult____h120074[2] ?
																						  6'd54 :
																						  (_theResult____h120074[1] ?
																						     6'd55 :
																						     (_theResult____h120074[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2569 =
	     (_theResult____h78794[56] ?
		6'd0 :
		(_theResult____h78794[55] ?
		   6'd1 :
		   (_theResult____h78794[54] ?
		      6'd2 :
		      (_theResult____h78794[53] ?
			 6'd3 :
			 (_theResult____h78794[52] ?
			    6'd4 :
			    (_theResult____h78794[51] ?
			       6'd5 :
			       (_theResult____h78794[50] ?
				  6'd6 :
				  (_theResult____h78794[49] ?
				     6'd7 :
				     (_theResult____h78794[48] ?
					6'd8 :
					(_theResult____h78794[47] ?
					   6'd9 :
					   (_theResult____h78794[46] ?
					      6'd10 :
					      (_theResult____h78794[45] ?
						 6'd11 :
						 (_theResult____h78794[44] ?
						    6'd12 :
						    (_theResult____h78794[43] ?
						       6'd13 :
						       (_theResult____h78794[42] ?
							  6'd14 :
							  (_theResult____h78794[41] ?
							     6'd15 :
							     (_theResult____h78794[40] ?
								6'd16 :
								(_theResult____h78794[39] ?
								   6'd17 :
								   (_theResult____h78794[38] ?
								      6'd18 :
								      (_theResult____h78794[37] ?
									 6'd19 :
									 (_theResult____h78794[36] ?
									    6'd20 :
									    (_theResult____h78794[35] ?
									       6'd21 :
									       (_theResult____h78794[34] ?
										  6'd22 :
										  (_theResult____h78794[33] ?
										     6'd23 :
										     (_theResult____h78794[32] ?
											6'd24 :
											(_theResult____h78794[31] ?
											   6'd25 :
											   (_theResult____h78794[30] ?
											      6'd26 :
											      (_theResult____h78794[29] ?
												 6'd27 :
												 (_theResult____h78794[28] ?
												    6'd28 :
												    (_theResult____h78794[27] ?
												       6'd29 :
												       (_theResult____h78794[26] ?
													  6'd30 :
													  (_theResult____h78794[25] ?
													     6'd31 :
													     (_theResult____h78794[24] ?
														6'd32 :
														(_theResult____h78794[23] ?
														   6'd33 :
														   (_theResult____h78794[22] ?
														      6'd34 :
														      (_theResult____h78794[21] ?
															 6'd35 :
															 (_theResult____h78794[20] ?
															    6'd36 :
															    (_theResult____h78794[19] ?
															       6'd37 :
															       (_theResult____h78794[18] ?
																  6'd38 :
																  (_theResult____h78794[17] ?
																     6'd39 :
																     (_theResult____h78794[16] ?
																	6'd40 :
																	(_theResult____h78794[15] ?
																	   6'd41 :
																	   (_theResult____h78794[14] ?
																	      6'd42 :
																	      (_theResult____h78794[13] ?
																		 6'd43 :
																		 (_theResult____h78794[12] ?
																		    6'd44 :
																		    (_theResult____h78794[11] ?
																		       6'd45 :
																		       (_theResult____h78794[10] ?
																			  6'd46 :
																			  (_theResult____h78794[9] ?
																			     6'd47 :
																			     (_theResult____h78794[8] ?
																				6'd48 :
																				(_theResult____h78794[7] ?
																				   6'd49 :
																				   (_theResult____h78794[6] ?
																				      6'd50 :
																				      (_theResult____h78794[5] ?
																					 6'd51 :
																					 (_theResult____h78794[4] ?
																					    6'd52 :
																					    (_theResult____h78794[3] ?
																					       6'd53 :
																					       (_theResult____h78794[2] ?
																						  6'd54 :
																						  (_theResult____h78794[1] ?
																						     6'd55 :
																						     (_theResult____h78794[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_19_ETC___d3648 =
	     (_theResult___fst_exp__h128310 == 11'd2047) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard20084_0b0_requestR_BITS_191_TO_160_E_ETC__q110 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2144 =
	     (guard__h61080 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h69177 :
	       _theResult___exp__h69703 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2146 =
	     (guard__h61080 == 2'b0) ?
	       _theResult___fst_exp__h69177 :
	       (requestR[191] ?
		  _theResult___exp__h69703 :
		  _theResult___fst_exp__h69177) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2731 =
	     (guard__h61080 == 2'b0 || requestR[191]) ?
	       sfdin__h69171[56:34] :
	       _theResult___sfd__h69704 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2733 =
	     (guard__h61080 == 2'b0) ?
	       sfdin__h69171[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h69704 :
		  sfdin__h69171[56:34]) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3463 =
	     (guard__h120084 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h128310 :
	       _theResult___exp__h129039 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3465 =
	     (guard__h120084 == 2'b0) ?
	       _theResult___fst_exp__h128310 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h129039 :
		  _theResult___fst_exp__h128310) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3592 =
	     (guard__h120084 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       sfdin__h128304[56:5] :
	       _theResult___sfd__h129040 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3594 =
	     (guard__h120084 == 2'b0) ?
	       sfdin__h128304[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h129040 :
		  sfdin__h128304[56:5]) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2628 =
	     (guard__h78804 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h87030 :
	       _theResult___exp__h87556 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2630 =
	     (guard__h78804 == 2'b0) ?
	       _theResult___fst_exp__h87030 :
	       (requestR[191] ?
		  _theResult___exp__h87556 :
		  _theResult___fst_exp__h87030) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2777 =
	     (guard__h78804 == 2'b0 || requestR[191]) ?
	       sfdin__h87024[56:34] :
	       _theResult___sfd__h87557 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2779 =
	     (guard__h78804 == 2'b0) ?
	       sfdin__h87024[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h87557 :
		  sfdin__h87024[56:34]) ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3138 =
	     (guard__h110776 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h118737 :
	       _theResult___exp__h119392 ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3140 =
	     (guard__h110776 == 2'b0) ?
	       _theResult___fst_exp__h118737 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h119392 :
		  _theResult___fst_exp__h118737) ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3532 =
	     (guard__h129151 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h137141 :
	       _theResult___exp__h137821 ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3534 =
	     (guard__h129151 == 2'b0) ?
	       _theResult___fst_exp__h137141 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h137821 :
		  _theResult___fst_exp__h137141) ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3565 =
	     (guard__h110776 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___snd__h118688[56:5] :
	       _theResult___sfd__h119393 ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3567 =
	     (guard__h110776 == 2'b0) ?
	       _theResult___snd__h118688[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h119393 :
		  _theResult___snd__h118688[56:5]) ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3611 =
	     (guard__h129151 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___snd__h137087[56:5] :
	       _theResult___sfd__h137822 ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3613 =
	     (guard__h129151 == 2'b0) ?
	       _theResult___snd__h137087[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h137822 :
		  _theResult___snd__h137087[56:5]) ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2301 =
	     (guard__h69815 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h77863 :
	       _theResult___exp__h78315 ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2303 =
	     (guard__h69815 == 2'b0) ?
	       _theResult___fst_exp__h77863 :
	       (requestR[191] ?
		  _theResult___exp__h78315 :
		  _theResult___fst_exp__h77863) ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2697 =
	     (guard__h87668 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h95745 :
	       _theResult___exp__h96222 ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2699 =
	     (guard__h87668 == 2'b0) ?
	       _theResult___fst_exp__h95745 :
	       (requestR[191] ?
		  _theResult___exp__h96222 :
		  _theResult___fst_exp__h95745) ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2750 =
	     (guard__h69815 == 2'b0 || requestR[191]) ?
	       _theResult___snd__h77814[56:34] :
	       _theResult___sfd__h78316 ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2752 =
	     (guard__h69815 == 2'b0) ?
	       _theResult___snd__h77814[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h78316 :
		  _theResult___snd__h77814[56:34]) ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2796 =
	     (guard__h87668 == 2'b0 || requestR[191]) ?
	       _theResult___snd__h95691[56:34] :
	       _theResult___sfd__h96223 ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2798 =
	     (guard__h87668 == 2'b0) ?
	       _theResult___snd__h95691[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h96223 :
		  _theResult___snd__h95691[56:34]) ;
  assign IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3656 =
	     (_theResult___fst_exp__h137141 == 11'd2047) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard29151_0b0_requestR_BITS_191_TO_160_E_ETC__q112 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1322 =
	     (guard__h35519 == 2'b0) ?
	       11'd0 :
	       (requestR[159] ? _theResult___exp__h36135 : 11'd0) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1348 =
	     (guard__h36249 == 2'b0 || requestR[159]) ?
	       x__h36264[10:0] :
	       _theResult___exp__h36891 ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1350 =
	     (guard__h36249 == 2'b0) ?
	       x__h36264[10:0] :
	       (requestR[159] ? _theResult___exp__h36891 : x__h36264[10:0]) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1371 =
	     (guard__h35519 == 2'b0 || requestR[159]) ?
	       sfd___3__h35509[54:3] :
	       _theResult___sfd__h36136 ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1373 =
	     (guard__h35519 == 2'b0) ?
	       sfd___3__h35509[54:3] :
	       (requestR[159] ?
		  _theResult___sfd__h36136 :
		  sfd___3__h35509[54:3]) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1389 =
	     (guard__h36249 == 2'b0 || requestR[159]) ?
	       sfd___3__h35509[53:2] :
	       _theResult___sfd__h36892 ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1391 =
	     (guard__h36249 == 2'b0) ?
	       sfd___3__h35509[53:2] :
	       (requestR[159] ?
		  _theResult___sfd__h36892 :
		  sfd___3__h35509[53:2]) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d367 =
	     (guard__h7519 == 2'b0) ?
	       8'd0 :
	       (requestR[159] ? _theResult___exp__h7935 : 8'd0) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d393 =
	     (guard__h8049 == 2'b0 || requestR[159]) ?
	       x__h8064[7:0] :
	       _theResult___exp__h8488 ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d395 =
	     (guard__h8049 == 2'b0) ?
	       x__h8064[7:0] :
	       (requestR[159] ? _theResult___exp__h8488 : x__h8064[7:0]) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d416 =
	     (guard__h7519 == 2'b0 || requestR[159]) ?
	       sfd___3__h7509[31:9] :
	       _theResult___sfd__h7936 ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d418 =
	     (guard__h7519 == 2'b0) ?
	       sfd___3__h7509[31:9] :
	       (requestR[159] ?
		  _theResult___sfd__h7936 :
		  sfd___3__h7509[31:9]) ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d434 =
	     (guard__h8049 == 2'b0 || requestR[159]) ?
	       sfd___3__h7509[30:8] :
	       _theResult___sfd__h8489 ;
  assign IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d436 =
	     (guard__h8049 == 2'b0) ?
	       sfd___3__h7509[30:8] :
	       (requestR[159] ?
		  _theResult___sfd__h8489 :
		  sfd___3__h7509[30:8]) ;
  assign IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1047 =
	     (sV2_exp__h1307 == 8'd255 && sV2_sfd__h1308[22] ||
	      IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1016) ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } :
	       (IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_ETC___d1020 ?
		  requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 :
		  IF_NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFF_ETC___d1045) ;
  assign IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1051 =
	     (sV2_exp__h1307 == 8'd255 && sV2_sfd__h1308 != 23'd0 &&
	      !sV2_sfd__h1308[22]) ?
	       res__h18225 :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1050 ;
  assign IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1060 =
	     IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_ETC___d1020 ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } :
	       IF_NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFF_ETC___d1059 ;
  assign IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1062 =
	     (sV2_exp__h1307 == 8'd255 && sV2_sfd__h1308[22]) ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } :
	       (IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1016 ?
		  requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 :
		  IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1060) ;
  assign IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1066 =
	     (sV2_exp__h1307 == 8'd255 && sV2_sfd__h1308 != 23'd0 &&
	      !sV2_sfd__h1308[22]) ?
	       res__h18225 :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1065 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1048 =
	     (sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205[22]) ?
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 :
	       IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1047 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1050 =
	     (sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205[22] &&
	      sV2_exp__h1307 == 8'd255 &&
	      sV2_sfd__h1308[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       { 32'hFFFFFFFF,
		 IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1048 } ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1052 =
	     (sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205 != 23'd0 &&
	      !sV1_sfd__h1205[22]) ?
	       res__h17988 :
	       IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1051 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1063 =
	     (sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205[22]) ?
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 :
	       IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1062 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1065 =
	     (sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205[22] &&
	      sV2_exp__h1307 == 8'd255 &&
	      sV2_sfd__h1308[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       { 32'hFFFFFFFF,
		 IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1063 } ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1067 =
	     (sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205 != 23'd0 &&
	      !sV1_sfd__h1205[22]) ?
	       res__h17988 :
	       IF_IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFF_ETC___d1066 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1131 =
	     (sV1_exp__h1204 == 8'd0 && sV1_sfd__h1205 == 23'd0) ?
	       res___1__h26243 :
	       ((sV1_exp__h1204 == 8'd0) ? res___1__h26262 : res__h26278) ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1132 =
	     (sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205 == 23'd0) ?
	       res___1__h26233 :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1131 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3084 =
	     ((sV1_exp__h1204 == 8'd0) ?
		(sV1_sfd__h1205[22] ?
		   6'd2 :
		   (sV1_sfd__h1205[21] ?
		      6'd3 :
		      (sV1_sfd__h1205[20] ?
			 6'd4 :
			 (sV1_sfd__h1205[19] ?
			    6'd5 :
			    (sV1_sfd__h1205[18] ?
			       6'd6 :
			       (sV1_sfd__h1205[17] ?
				  6'd7 :
				  (sV1_sfd__h1205[16] ?
				     6'd8 :
				     (sV1_sfd__h1205[15] ?
					6'd9 :
					(sV1_sfd__h1205[14] ?
					   6'd10 :
					   (sV1_sfd__h1205[13] ?
					      6'd11 :
					      (sV1_sfd__h1205[12] ?
						 6'd12 :
						 (sV1_sfd__h1205[11] ?
						    6'd13 :
						    (sV1_sfd__h1205[10] ?
						       6'd14 :
						       (sV1_sfd__h1205[9] ?
							  6'd15 :
							  (sV1_sfd__h1205[8] ?
							     6'd16 :
							     (sV1_sfd__h1205[7] ?
								6'd17 :
								(sV1_sfd__h1205[6] ?
								   6'd18 :
								   (sV1_sfd__h1205[5] ?
								      6'd19 :
								      (sV1_sfd__h1205[4] ?
									 6'd20 :
									 (sV1_sfd__h1205[3] ?
									    6'd21 :
									    (sV1_sfd__h1205[2] ?
									       6'd22 :
									       (sV1_sfd__h1205[1] ?
										  6'd23 :
										  (sV1_sfd__h1205[0] ?
										     6'd24 :
										     6'd57))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3624 =
	     (sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205 != 23'd0) ?
	       _theResult___snd_fst_sfd__h99811 :
	       _theResult___fst_sfd__h137938 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3660 =
	     (sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205 != 23'd0 ||
	      (sV1_exp__h1204 == 8'd255 || sV1_exp__h1204 == 8'd0) &&
	      sV1_sfd__h1205 == 23'd0) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((sV1_exp__h1204 == 8'd0) ?
		  IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BI_ETC___d3640 :
		  IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3658) ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3695 =
	     (sV1_exp__h1204 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3013 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3014 &&
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3674[4] :
	       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3156 &&
	       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3157 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3691[4] ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3698 =
	     (sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205 != 23'd0) ?
	       sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205 != 23'd0 &&
	       !sV1_sfd__h1205[22] :
	       (sV1_exp__h1204 != 8'd255 || sV1_sfd__h1205 != 23'd0) &&
	       (sV1_exp__h1204 != 8'd0 || sV1_sfd__h1205 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3695 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3705 =
	     (sV1_exp__h1204 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3013 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3014 &&
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3674[3] :
	       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3156 &&
	       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3157 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3691[3] ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3719 =
	     (sV1_exp__h1204 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3013 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3014 &&
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3674[2] :
	       !SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3156 ||
	       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3717 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3731 =
	     (sV1_exp__h1204 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3013 &&
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3014 ||
		_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3674[1]) :
	       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3156 &&
	       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3729 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3743 =
	     (sV1_exp__h1204 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3013 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3014 &&
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3674[0] :
	       !SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3156 ||
	       IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3741 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d904 =
	     (sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205 == 23'd0) ?
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d833 :
	       ((sV1_exp__h1204 == 8'd0 && sV1_sfd__h1205 == 23'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d902) ;
  assign IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d963 =
	     (sV1_exp__h1204 == 8'd0 && sV1_sfd__h1205 == 23'd0) ?
	       32'd0 :
	       (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d934[19] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d961) ;
  assign IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d1242 =
	     sfd__h2605[31] ?
	       6'd0 :
	       (sfd__h2605[30] ?
		  6'd1 :
		  (sfd__h2605[29] ?
		     6'd2 :
		     (sfd__h2605[28] ?
			6'd3 :
			(sfd__h2605[27] ?
			   6'd4 :
			   (sfd__h2605[26] ?
			      6'd5 :
			      (sfd__h2605[25] ?
				 6'd6 :
				 (sfd__h2605[24] ?
				    6'd7 :
				    (sfd__h2605[23] ?
				       6'd8 :
				       (sfd__h2605[22] ?
					  6'd9 :
					  (sfd__h2605[21] ?
					     6'd10 :
					     (sfd__h2605[20] ?
						6'd11 :
						(sfd__h2605[19] ?
						   6'd12 :
						   (sfd__h2605[18] ?
						      6'd13 :
						      (sfd__h2605[17] ?
							 6'd14 :
							 (sfd__h2605[16] ?
							    6'd15 :
							    (sfd__h2605[15] ?
							       6'd16 :
							       (sfd__h2605[14] ?
								  6'd17 :
								  (sfd__h2605[13] ?
								     6'd18 :
								     (sfd__h2605[12] ?
									6'd19 :
									(sfd__h2605[11] ?
									   6'd20 :
									   (sfd__h2605[10] ?
									      6'd21 :
									      (sfd__h2605[9] ?
										 6'd22 :
										 (sfd__h2605[8] ?
										    6'd23 :
										    (sfd__h2605[7] ?
										       6'd24 :
										       (sfd__h2605[6] ?
											  6'd25 :
											  (sfd__h2605[5] ?
											     6'd26 :
											     (sfd__h2605[4] ?
												6'd27 :
												(sfd__h2605[3] ?
												   6'd28 :
												   (sfd__h2605[2] ?
												      6'd29 :
												      (sfd__h2605[1] ?
													 6'd30 :
													 (sfd__h2605[0] ?
													    6'd31 :
													    6'd55))))))))))))))))))))))))))))))) ;
  assign IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d275 =
	     sfd__h2605[31] ?
	       6'd0 :
	       (sfd__h2605[30] ?
		  6'd1 :
		  (sfd__h2605[29] ?
		     6'd2 :
		     (sfd__h2605[28] ?
			6'd3 :
			(sfd__h2605[27] ?
			   6'd4 :
			   (sfd__h2605[26] ?
			      6'd5 :
			      (sfd__h2605[25] ?
				 6'd6 :
				 (sfd__h2605[24] ?
				    6'd7 :
				    (sfd__h2605[23] ?
				       6'd8 :
				       (sfd__h2605[22] ?
					  6'd9 :
					  (sfd__h2605[21] ?
					     6'd10 :
					     (sfd__h2605[20] ?
						6'd11 :
						(sfd__h2605[19] ?
						   6'd12 :
						   (sfd__h2605[18] ?
						      6'd13 :
						      (sfd__h2605[17] ?
							 6'd14 :
							 (sfd__h2605[16] ?
							    6'd15 :
							    (sfd__h2605[15] ?
							       6'd16 :
							       (sfd__h2605[14] ?
								  6'd17 :
								  (sfd__h2605[13] ?
								     6'd18 :
								     (sfd__h2605[12] ?
									6'd19 :
									(sfd__h2605[11] ?
									   6'd20 :
									   (sfd__h2605[10] ?
									      6'd21 :
									      (sfd__h2605[9] ?
										 6'd22 :
										 (sfd__h2605[8] ?
										    6'd23 :
										    (sfd__h2605[7] ?
										       6'd24 :
										       (sfd__h2605[6] ?
											  6'd25 :
											  (sfd__h2605[5] ?
											     6'd26 :
											     (sfd__h2605[4] ?
												6'd27 :
												(sfd__h2605[3] ?
												   6'd28 :
												   (sfd__h2605[2] ?
												      6'd29 :
												      (sfd__h2605[1] ?
													 6'd30 :
													 (sfd__h2605[0] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d900 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d873 ?
	       (IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d894 ?
		  ((x__h15999[56:25] == 32'h7FFFFFFF) ?
		     x__h15999[56:25] :
		     x__h15999[56:25] + 32'd1) :
		  x__h15999[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d902 =
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d838 ==
	      20'd1048545) ?
	       ((_theResult_____2__h15258[32:31] == 2'b11) ?
		  _theResult_____2__h15258[31:0] :
		  IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d833) :
	       (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d871[19] ?
		  IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d833 :
		  IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d900) ;
  assign IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d926 =
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d838 ==
	      20'd1048545) ?
	       _theResult_____2__h15258[32:31] == 2'b11 &&
	       guard__h15256 != 2'd0 :
	       !NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d871[19] &&
	       (!NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d873 ||
		guard__h15810 != 2'd0) ;
  assign IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d961 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d936 ?
	       (IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d955 ?
		  ((x__h17039[56:25] == 32'hFFFFFFFF) ?
		     x__h17039[56:25] :
		     x__h17039[56:25] + 32'd1) :
		  x__h17039[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_3_BITS_190_TO_180_609_MIN_ETC___d1686 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1659 ?
	       (IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1680 ?
		  ((x__h47920[85:54] == 32'h7FFFFFFF) ?
		     x__h47920[85:54] :
		     x__h47920[85:54] + 32'd1) :
		  x__h47920[85:54]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_3_BITS_190_TO_180_609_MIN_ETC___d1688 =
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1624 ==
	      24'd16777185) ?
	       ((_theResult_____2__h47179[32:31] == 2'b11) ?
		  _theResult_____2__h47179[31:0] :
		  IF_requestR_3_BIT_191_202_THEN_2147483648_ELSE_ETC___d1619) :
	       (NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1657[23] ?
		  IF_requestR_3_BIT_191_202_THEN_2147483648_ELSE_ETC___d1619 :
		  IF_NEG_SEXT_requestR_3_BITS_190_TO_180_609_MIN_ETC___d1686) ;
  assign IF_NEG_SEXT_requestR_3_BITS_190_TO_180_609_MIN_ETC___d1712 =
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1624 ==
	      24'd16777185) ?
	       _theResult_____2__h47179[32:31] == 2'b11 &&
	       guard__h47177 != 2'd0 :
	       !NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1657[23] &&
	       (!NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1659 ||
		guard__h47731 != 2'd0) ;
  assign IF_NEG_SEXT_requestR_3_BITS_190_TO_180_609_MIN_ETC___d1747 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1722 ?
	       (IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1741 ?
		  ((x__h48943[85:54] == 32'hFFFFFFFF) ?
		     x__h48943[85:54] :
		     x__h48943[85:54] + 32'd1) :
		  x__h48943[85:54]) :
	       32'd0 ;
  assign IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT__ETC___d1302 =
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1246 ||
	      _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1248) ?
	       requestR[159] :
	       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1301 ;
  assign IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BI_ETC___d3640 =
	     (!_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3013 ||
	      _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3014 ||
	      _theResult___fst_exp__h118737 == 11'd2047) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard10776_0b0_requestR_BITS_191_TO_160_E_ETC__q108 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109) ;
  assign IF_NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFF_ETC___d1045 =
	     NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1044 ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } :
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 ;
  assign IF_NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFF_ETC___d1059 =
	     NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1044 ?
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 :
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } ;
  assign IF_NOT_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1040 =
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ?
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1029 ||
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1030 &&
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1031 :
	       !IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1034 ||
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1030 &&
	       !IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1036 ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3478 =
	     ((SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96[10:0] ==
	       11'd0) ?
		12'd3074 :
		{ SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q99[10],
		  SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q99 }) -
	     12'd3074 ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3658 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3156 ?
	       (SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3157 ?
		  IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_19_ETC___d3648 :
		  IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFF_ETC___d3656) :
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3717 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3157 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3691[2] :
	       _theResult___fst_exp__h137922 == 11'd2047 &&
	       _theResult___fst_sfd__h137923 == 52'd0 ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3729 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3157 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3691[1] :
	       _theResult___fst_exp__h137141 == 11'd0 &&
	       guard__h129151 != 2'b0 ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3741 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3157 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3691[0] :
	       _theResult___fst_exp__h137141 != 11'd2047 &&
	       guard__h129151 != 2'b0 ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1_ETC___d2643 =
	     ((SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC__q64[7:0] ==
	       8'd0) ?
		9'd386 :
		{ SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC__q67[7],
		  SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC__q67 }) -
	     9'd386 ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1_ETC___d2849 =
	     SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2324 ?
	       ((_theResult___fst_exp__h87030 == 8'd255) ?
		  requestR[191] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard8804_0b0_requestR_BIT_191_0b1_reques_ETC__q90 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91)) :
	       ((_theResult___fst_exp__h95745 == 8'd255) ?
		  requestR[191] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard7668_0b0_requestR_BIT_191_0b1_reques_ETC__q92 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93)) ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1_ETC___d2927 =
	     SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2324 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2898[2] :
	       _theResult___fst_exp__h96323 == 8'd255 &&
	       _theResult___fst_sfd__h96324 == 23'd0 ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1_ETC___d2940 =
	     SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2324 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2898[1] :
	       _theResult___fst_exp__h95745 == 8'd0 && guard__h87668 != 2'b0 ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1_ETC___d2953 =
	     SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2324 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2898[0] :
	       _theResult___fst_exp__h95745 != 8'd255 &&
	       guard__h87668 != 2'b0 ;
  assign IF_requestR_3_BITS_126_TO_116_754_EQ_2047_755__ETC___d3802 =
	     (requestR[126:116] == 11'd2047 && requestR[115] ||
	      requestR_3_BITS_190_TO_180_609_EQ_0_620_AND_re_ETC___d3771) ?
	       requestR[191:128] :
	       (requestR_3_BITS_126_TO_116_754_EQ_0_768_AND_re_ETC___d3775 ?
		  requestR[127:64] :
		  res__h142948) ;
  assign IF_requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_ETC___d1020 =
	     sV2_exp__h1307 == 8'd0 && sV2_sfd__h1308 == 23'd0 &&
	     requestR[127:96] == 32'hFFFFFFFF &&
	     requestR[95] &&
	     sV1_exp__h1204 == 8'd0 &&
	     sV1_sfd__h1205 == 23'd0 &&
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ;
  assign IF_requestR_3_BITS_159_TO_128_44_EQ_0_45_OR_NO_ETC___d1399 =
	     (requestR[159:128] == 32'd0 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1246 ||
	      _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1248) ?
	       52'd0 :
	       _theResult___snd_fst_sfd__h36995 ;
  assign IF_requestR_3_BITS_159_TO_128_44_EQ_0_45_OR_NO_ETC___d1581 =
	     (requestR[159:128] == 32'd0 ||
	      !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1460 ||
	      _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1461) ?
	       52'd0 :
	       _theResult___snd_fst_sfd__h46634 ;
  assign IF_requestR_3_BITS_159_TO_128_44_EQ_0_45_OR_NO_ETC___d405 =
	     (requestR[159:128] == 32'd0 ||
	      !sfd__h2605[31] && !sfd__h2605[30] && !sfd__h2605[29] &&
	      !sfd__h2605[28] &&
	      !sfd__h2605[27] &&
	      !sfd__h2605[26] &&
	      !sfd__h2605[25] &&
	      !sfd__h2605[24] &&
	      !sfd__h2605[23] &&
	      !sfd__h2605[22] &&
	      !sfd__h2605[21] &&
	      !sfd__h2605[20] &&
	      !sfd__h2605[19] &&
	      !sfd__h2605[18] &&
	      !sfd__h2605[17] &&
	      !sfd__h2605[16] &&
	      !sfd__h2605[15] &&
	      !sfd__h2605[14] &&
	      !sfd__h2605[13] &&
	      !sfd__h2605[12] &&
	      !sfd__h2605[11] &&
	      !sfd__h2605[10] &&
	      !sfd__h2605[9] &&
	      !sfd__h2605[8] &&
	      !sfd__h2605[7] &&
	      !sfd__h2605[6] &&
	      !sfd__h2605[5] &&
	      !sfd__h2605[4] &&
	      !sfd__h2605[3] &&
	      !sfd__h2605[2] &&
	      !sfd__h2605[1] &&
	      !sfd__h2605[0]) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h8597 ;
  assign IF_requestR_3_BITS_159_TO_128_44_EQ_0_45_OR_NO_ETC___d722 =
	     (requestR[159:128] == 32'd0 ||
	      !requestR[159] &&
	      NOT_requestR_3_BIT_158_07_08_AND_NOT_requestR__ETC___d598) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h14714 ;
  assign IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_AND_ETC___d1749 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       32'd0 :
	       (NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1720[23] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_requestR_3_BITS_190_TO_180_609_MIN_ETC___d1747) ;
  assign IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_AND_ETC___d3815 =
	     requestR_3_BITS_190_TO_180_609_EQ_0_620_AND_re_ETC___d3771 ?
	       requestR[127:64] :
	       (requestR_3_BITS_126_TO_116_754_EQ_0_768_AND_re_ETC___d3775 ?
		  requestR[191:128] :
		  res__h147441) ;
  assign IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_AND_ETC___d3881 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       res___1__h155301 :
	       ((requestR[190:180] == 11'd0) ?
		  res___1__h155320 :
		  res__h155336) ;
  assign IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2247 =
	     ((requestR[190:180] == 11'd0) ?
		(requestR[179] ?
		   6'd2 :
		   (requestR[178] ?
		      6'd3 :
		      (requestR[177] ?
			 6'd4 :
			 (requestR[176] ?
			    6'd5 :
			    (requestR[175] ?
			       6'd6 :
			       (requestR[174] ?
				  6'd7 :
				  (requestR[173] ?
				     6'd8 :
				     (requestR[172] ?
					6'd9 :
					(requestR[171] ?
					   6'd10 :
					   (requestR[170] ?
					      6'd11 :
					      (requestR[169] ?
						 6'd12 :
						 (requestR[168] ?
						    6'd13 :
						    (requestR[167] ?
						       6'd14 :
						       (requestR[166] ?
							  6'd15 :
							  (requestR[165] ?
							     6'd16 :
							     (requestR[164] ?
								6'd17 :
								(requestR[163] ?
								   6'd18 :
								   (requestR[162] ?
								      6'd19 :
								      (requestR[161] ?
									 6'd20 :
									 (requestR[160] ?
									    6'd21 :
									    (requestR[159] ?
									       6'd22 :
									       (requestR[158] ?
										  6'd23 :
										  (requestR[157] ?
										     6'd24 :
										     (requestR[156] ?
											6'd25 :
											(requestR[155] ?
											   6'd26 :
											   (requestR[154] ?
											      6'd27 :
											      (requestR[153] ?
												 6'd28 :
												 (requestR[152] ?
												    6'd29 :
												    (requestR[151] ?
												       6'd30 :
												       (requestR[150] ?
													  6'd31 :
													  (requestR[149] ?
													     6'd32 :
													     (requestR[148] ?
														6'd33 :
														(requestR[147] ?
														   6'd34 :
														   (requestR[146] ?
														      6'd35 :
														      (requestR[145] ?
															 6'd36 :
															 (requestR[144] ?
															    6'd37 :
															    (requestR[143] ?
															       6'd38 :
															       (requestR[142] ?
																  6'd39 :
																  (requestR[141] ?
																     6'd40 :
																     (requestR[140] ?
																	6'd41 :
																	(requestR[139] ?
																	   6'd42 :
																	   (requestR[138] ?
																	      6'd43 :
																	      (requestR[137] ?
																		 6'd44 :
																		 (requestR[136] ?
																		    6'd45 :
																		    (requestR[135] ?
																		       6'd46 :
																		       (requestR[134] ?
																			  6'd47 :
																			  (requestR[133] ?
																			     6'd48 :
																			     (requestR[132] ?
																				6'd49 :
																				(requestR[131] ?
																				   6'd50 :
																				   (requestR[130] ?
																				      6'd51 :
																				      (requestR[129] ?
																					 6'd52 :
																					 (requestR[128] ?
																					    6'd53 :
																					    6'd57)))))))))))))))))))))))))))))))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2851 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1852 ?
		  IF_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_7_ETC___d2831 :
		  requestR[191]) :
	       (SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2323 ?
		  IF_SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1_ETC___d2849 :
		  requestR[191]) ;
  assign IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2902 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d2884 :
	       SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2323 &&
	       SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2324 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2898[4] ;
  assign IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2913 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d2909 :
	       SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2323 &&
	       SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2324 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2898[3] ;
  assign IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2929 =
	     (requestR[190:180] == 11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d2921 :
	       !SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2323 ||
	       IF_SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1_ETC___d2927 ;
  assign IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2942 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d2936 :
	       SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2323 &&
	       IF_SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1_ETC___d2940 ;
  assign IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2955 =
	     (requestR[190:180] == 11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d2949 :
	       !SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2323 ||
	       IF_SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1_ETC___d2953 ;
  assign IF_requestR_3_BITS_190_TO_180_609_EQ_2047_610__ETC___d1690 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0) ?
	       IF_requestR_3_BIT_191_202_THEN_2147483648_ELSE_ETC___d1619 :
	       ((requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_requestR_3_BITS_190_TO_180_609_MIN_ETC___d1688) ;
  assign IF_requestR_3_BITS_190_TO_180_609_EQ_2047_610__ETC___d2809 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       _theResult___snd_fst_sfd__h53394 :
	       _theResult___fst_sfd__h96339 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1006 =
	     sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205 != 23'd0 &&
	     !sV1_sfd__h1205[22] &&
	     sV2_exp__h1307 == 8'd255 &&
	     sV2_sfd__h1308 != 23'd0 &&
	     !sV2_sfd__h1308[22] ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1016 =
	     sV1_exp__h1204 == 8'd0 && sV1_sfd__h1205 == 23'd0 &&
	     requestR[191:160] == 32'hFFFFFFFF &&
	     requestR[159] &&
	     sV2_exp__h1307 == 8'd0 &&
	     sV2_sfd__h1308 == 23'd0 &&
	     (requestR[127:96] != 32'hFFFFFFFF || !requestR[95]) ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1029 =
	     sV1_exp__h1204 < sV2_exp__h1307 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1030 =
	     sV1_exp__h1204 == sV2_exp__h1307 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1031 =
	     sV1_sfd__h1205 < sV2_sfd__h1308 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1034 =
	     sV1_exp__h1204 <= sV2_exp__h1307 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1036 =
	     sV1_sfd__h1205 <= sV2_sfd__h1308 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1054 =
	     sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205 != 23'd0 &&
	     !sV1_sfd__h1205[22] ||
	     sV2_exp__h1307 == 8'd255 && sV2_sfd__h1308 != 23'd0 &&
	     !sV2_sfd__h1308[22] ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1087 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1054 ||
	     sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205[22] ||
	     sV2_exp__h1307 == 8'd255 && sV2_sfd__h1308[22] ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1098 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1034 &&
	     (!IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1030 ||
	      IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1036) &&
	     !IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1029 &&
	     (!IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1030 ||
	      !IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1031) ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1102 =
	     sV1_exp__h1204 == 8'd0 && sV1_sfd__h1205 == 23'd0 &&
	     sV2_exp__h1307 == 8'd0 &&
	     sV2_sfd__h1308 == 23'd0 ||
	     NOT_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1101 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[158:128] :
	       31'h7FC00000 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d832 =
	     sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205 != 23'd0 ||
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) &&
	     sV1_exp__h1204 == 8'd255 &&
	     sV1_sfd__h1205 == 23'd0 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d833 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       32'h80000000 :
	       32'h7FFFFFFF ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d836 =
	     sV1_exp__h1204 - 8'd127 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d845 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       -b__h15323 :
	       b__h15323 ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d965 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       32'd0 :
	       ((sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205 == 23'd0) ?
		  32'hFFFFFFFF :
		  IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d963) ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d973 =
	     sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205 != 23'd0 ||
	     sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205 == 23'd0 ||
	     (sV1_exp__h1204 != 8'd0 || sV1_sfd__h1205 != 23'd0) &&
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d934[19] ||
	      NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d936 &&
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d955 &&
	      x__h17039[56:25] == 32'hFFFFFFFF) ;
  assign IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d984 =
	     { IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d973,
	       3'd0,
	       (sV1_exp__h1204 != 8'd255 || sV1_sfd__h1205 == 23'd0) &&
	       (sV1_exp__h1204 != 8'd255 || sV1_sfd__h1205 != 23'd0) &&
	       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d978 } ==
	     5'd0 ||
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d973 ;
  assign IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1648 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h47177 == 2'b10) ?
		  IF_requestR_3_BIT_191_202_THEN_NEG_0b0_CONCAT__ETC___d1631[53] :
		  guard__h47177 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h47177 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_3_BIT_191_202_THEN_NEG_0b0_CONCAT__ETC___d1631[85] &&
		  guard__h47177 != 2'd0) ;
  assign IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1680 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h47731 == 2'b10) ?
		  x__h47920[54] :
		  guard__h47731 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h47731 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h47920[85] &&
		  guard__h47731 != 2'd0) ;
  assign IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1741 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h48722 == 2'b10) ?
		  x__h48943[54] :
		  guard__h48722 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h48722 != 2'd0 ;
  assign IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d862 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h15256 == 2'b10) ?
		  IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d845[24] :
		  guard__h15256 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h15256 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d845[56] &&
		  guard__h15256 != 2'd0) ;
  assign IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d894 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h15810 == 2'b10) ?
		  x__h15999[25] :
		  guard__h15810 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h15810 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h15999[56] &&
		  guard__h15810 != 2'd0) ;
  assign IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d955 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h16818 == 2'b10) ?
		  x__h17039[25] :
		  guard__h16818 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h16818 != 2'd0 ;
  assign IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d1456 =
	     requestR[159] ?
	       6'd0 :
	       (requestR[158] ?
		  6'd1 :
		  (requestR[157] ?
		     6'd2 :
		     (requestR[156] ?
			6'd3 :
			(requestR[155] ?
			   6'd4 :
			   (requestR[154] ?
			      6'd5 :
			      (requestR[153] ?
				 6'd6 :
				 (requestR[152] ?
				    6'd7 :
				    (requestR[151] ?
				       6'd8 :
				       (requestR[150] ?
					  6'd9 :
					  (requestR[149] ?
					     6'd10 :
					     (requestR[148] ?
						6'd11 :
						(requestR[147] ?
						   6'd12 :
						   (requestR[146] ?
						      6'd13 :
						      (requestR[145] ?
							 6'd14 :
							 (requestR[144] ?
							    6'd15 :
							    (requestR[143] ?
							       6'd16 :
							       (requestR[142] ?
								  6'd17 :
								  (requestR[141] ?
								     6'd18 :
								     (requestR[140] ?
									6'd19 :
									(requestR[139] ?
									   6'd20 :
									   (requestR[138] ?
									      6'd21 :
									      (requestR[137] ?
										 6'd22 :
										 (requestR[136] ?
										    6'd23 :
										    (requestR[135] ?
										       6'd24 :
										       (requestR[134] ?
											  6'd25 :
											  (requestR[133] ?
											     6'd26 :
											     (requestR[132] ?
												6'd27 :
												(requestR[131] ?
												   6'd28 :
												   (requestR[130] ?
												      6'd29 :
												      (requestR[129] ?
													 6'd30 :
													 (requestR[128] ?
													    6'd31 :
													    6'd55))))))))))))))))))))))))))))))) ;
  assign IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d632 =
	     requestR[159] ?
	       6'd0 :
	       (requestR[158] ?
		  6'd1 :
		  (requestR[157] ?
		     6'd2 :
		     (requestR[156] ?
			6'd3 :
			(requestR[155] ?
			   6'd4 :
			   (requestR[154] ?
			      6'd5 :
			      (requestR[153] ?
				 6'd6 :
				 (requestR[152] ?
				    6'd7 :
				    (requestR[151] ?
				       6'd8 :
				       (requestR[150] ?
					  6'd9 :
					  (requestR[149] ?
					     6'd10 :
					     (requestR[148] ?
						6'd11 :
						(requestR[147] ?
						   6'd12 :
						   (requestR[146] ?
						      6'd13 :
						      (requestR[145] ?
							 6'd14 :
							 (requestR[144] ?
							    6'd15 :
							    (requestR[143] ?
							       6'd16 :
							       (requestR[142] ?
								  6'd17 :
								  (requestR[141] ?
								     6'd18 :
								     (requestR[140] ?
									6'd19 :
									(requestR[139] ?
									   6'd20 :
									   (requestR[138] ?
									      6'd21 :
									      (requestR[137] ?
										 6'd22 :
										 (requestR[136] ?
										    6'd23 :
										    (requestR[135] ?
										       6'd24 :
										       (requestR[134] ?
											  6'd25 :
											  (requestR[133] ?
											     6'd26 :
											     (requestR[132] ?
												6'd27 :
												(requestR[131] ?
												   6'd28 :
												   (requestR[130] ?
												      6'd29 :
												      (requestR[129] ?
													 6'd30 :
													 (requestR[128] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d486 =
	     (sfd__h2605[31] || sfd__h2605[30] || sfd__h2605[29] ||
	      sfd__h2605[28] ||
	      sfd__h2605[27] ||
	      sfd__h2605[26] ||
	      sfd__h2605[25] ||
	      sfd__h2605[24] ||
	      sfd__h2605[23] ||
	      sfd__h2605[22] ||
	      sfd__h2605[21] ||
	      sfd__h2605[20] ||
	      sfd__h2605[19] ||
	      sfd__h2605[18] ||
	      sfd__h2605[17] ||
	      sfd__h2605[16] ||
	      sfd__h2605[15] ||
	      sfd__h2605[14] ||
	      sfd__h2605[13] ||
	      sfd__h2605[12] ||
	      sfd__h2605[11] ||
	      sfd__h2605[10] ||
	      sfd__h2605[9] ||
	      sfd__h2605[8] ||
	      sfd__h2605[7] ||
	      sfd__h2605[6] ||
	      sfd__h2605[5] ||
	      sfd__h2605[4] ||
	      sfd__h2605[3] ||
	      sfd__h2605[2] ||
	      sfd__h2605[1] ||
	      sfd__h2605[0]) &&
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d279 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d281 &&
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d284 &&
	      _theResult___fst_exp__h8588 == 8'd255 &&
	      _theResult___fst_sfd__h8589 == 23'd0) ;
  assign IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d489 =
	     (sfd__h2605[31] || sfd__h2605[30] || sfd__h2605[29] ||
	      sfd__h2605[28] ||
	      sfd__h2605[27] ||
	      sfd__h2605[26] ||
	      sfd__h2605[25] ||
	      sfd__h2605[24] ||
	      sfd__h2605[23] ||
	      sfd__h2605[22] ||
	      sfd__h2605[21] ||
	      sfd__h2605[20] ||
	      sfd__h2605[19] ||
	      sfd__h2605[18] ||
	      sfd__h2605[17] ||
	      sfd__h2605[16] ||
	      sfd__h2605[15] ||
	      sfd__h2605[14] ||
	      sfd__h2605[13] ||
	      sfd__h2605[12] ||
	      sfd__h2605[11] ||
	      sfd__h2605[10] ||
	      sfd__h2605[9] ||
	      sfd__h2605[8] ||
	      sfd__h2605[7] ||
	      sfd__h2605[6] ||
	      sfd__h2605[5] ||
	      sfd__h2605[4] ||
	      sfd__h2605[3] ||
	      sfd__h2605[2] ||
	      sfd__h2605[1] ||
	      sfd__h2605[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d279 &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d281 ;
  assign IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d498 =
	     (sfd__h2605[31] || sfd__h2605[30] || sfd__h2605[29] ||
	      sfd__h2605[28] ||
	      sfd__h2605[27] ||
	      sfd__h2605[26] ||
	      sfd__h2605[25] ||
	      sfd__h2605[24] ||
	      sfd__h2605[23] ||
	      sfd__h2605[22] ||
	      sfd__h2605[21] ||
	      sfd__h2605[20] ||
	      sfd__h2605[19] ||
	      sfd__h2605[18] ||
	      sfd__h2605[17] ||
	      sfd__h2605[16] ||
	      sfd__h2605[15] ||
	      sfd__h2605[14] ||
	      sfd__h2605[13] ||
	      sfd__h2605[12] ||
	      sfd__h2605[11] ||
	      sfd__h2605[10] ||
	      sfd__h2605[9] ||
	      sfd__h2605[8] ||
	      sfd__h2605[7] ||
	      sfd__h2605[6] ||
	      sfd__h2605[5] ||
	      sfd__h2605[4] ||
	      sfd__h2605[3] ||
	      sfd__h2605[2] ||
	      sfd__h2605[1] ||
	      sfd__h2605[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d279 &&
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d281 &&
	     IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d495 ;
  assign IF_requestR_3_BIT_191_202_THEN_2147483648_ELSE_ETC___d1619 =
	     requestR[191] ? 32'h80000000 : 32'h7FFFFFFF ;
  assign IF_requestR_3_BIT_191_202_THEN_NEG_0b0_CONCAT__ETC___d1631 =
	     requestR[191] ? -b__h47244 : b__h47244 ;
  assign IF_requestR_3_BIT_191_202_THEN_NOT_requestR_3__ETC___d3795 =
	     requestR[191] ?
	       !requestR_3_BITS_190_TO_180_609_ULE_requestR_3__ETC___d3784 ||
	       requestR_3_BITS_190_TO_180_609_EQ_requestR_3_B_ETC___d3786 &&
	       !requestR_3_BITS_179_TO_128_611_ULE_requestR_3__ETC___d3787 :
	       requestR_3_BITS_190_TO_180_609_ULT_requestR_3__ETC___d3791 ||
	       requestR_3_BITS_190_TO_180_609_EQ_requestR_3_B_ETC___d3786 &&
	       requestR_3_BITS_179_TO_128_611_ULT_requestR_3__ETC___d3792 ;
  assign IF_sfd___33631_BIT_7_THEN_2_ELSE_0__q21 =
	     sfd___3__h13631[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___33631_BIT_8_THEN_2_ELSE_0__q20 =
	     sfd___3__h13631[8] ? 2'd2 : 2'd0 ;
  assign IF_sfd___3509_BIT_7_THEN_2_ELSE_0__q7 =
	     sfd___3__h7509[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___3509_BIT_8_THEN_2_ELSE_0__q6 =
	     sfd___3__h7509[8] ? 2'd2 : 2'd0 ;
  assign IF_sfd___35150_BIT_1_THEN_2_ELSE_0__q48 =
	     sfd___3__h45150[1] ? 2'd2 : 2'd0 ;
  assign IF_sfd___35150_BIT_2_THEN_2_ELSE_0__q47 =
	     sfd___3__h45150[2] ? 2'd2 : 2'd0 ;
  assign IF_sfd___35509_BIT_1_THEN_2_ELSE_0__q34 =
	     sfd___3__h35509[1] ? 2'd2 : 2'd0 ;
  assign IF_sfd___35509_BIT_2_THEN_2_ELSE_0__q33 =
	     sfd___3__h35509[2] ? 2'd2 : 2'd0 ;
  assign IF_sfdin28304_BIT_4_THEN_2_ELSE_0__q98 =
	     sfdin__h128304[4] ? 2'd2 : 2'd0 ;
  assign IF_sfdin7024_BIT_33_THEN_2_ELSE_0__q66 =
	     sfdin__h87024[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin9171_BIT_33_THEN_2_ELSE_0__q61 =
	     sfdin__h69171[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd18688_BIT_4_THEN_2_ELSE_0__q95 =
	     _theResult___snd__h118688[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd37087_BIT_4_THEN_2_ELSE_0__q101 =
	     _theResult___snd__h137087[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd5691_BIT_33_THEN_2_ELSE_0__q69 =
	     _theResult___snd__h95691[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd7814_BIT_33_THEN_2_ELSE_0__q63 =
	     _theResult___snd__h77814[33] ? 2'd2 : 2'd0 ;
  assign IF_x5999_BIT_24_THEN_2_ELSE_0__q31 = x__h15999[24] ? 2'd2 : 2'd0 ;
  assign IF_x7039_BIT_24_THEN_2_ELSE_0__q32 = x__h17039[24] ? 2'd2 : 2'd0 ;
  assign IF_x7920_BIT_53_THEN_2_ELSE_0__q58 = x__h47920[53] ? 2'd2 : 2'd0 ;
  assign IF_x8943_BIT_53_THEN_2_ELSE_0__q59 = x__h48943[53] ? 2'd2 : 2'd0 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d838 =
	     -{ {12{IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d836[7]}},
		IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d836 } ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d870 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d838 +
	     20'd32 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d871 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d870 -
	     20'd2 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d873 =
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d871 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d934 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d870 -
	     20'd1 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d936 =
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d934 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1624 =
	     -{ {13{requestR_3_BITS_190_TO_180_609_MINUS_1023___d1622[10]}},
		requestR_3_BITS_190_TO_180_609_MINUS_1023___d1622 } ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1656 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1624 +
	     24'd32 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1657 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1656 -
	     24'd2 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1659 =
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1657 ^
	      24'h800000) <=
	     24'd8388640 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1720 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1656 -
	     24'd1 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1722 =
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1720 ^
	      24'h800000) <=
	     24'd8388640 ;
  assign NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d2921 =
	     !_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1852 ||
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1853 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2869[2] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_609_EQ__ETC___d2881[2]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d2949 =
	     !_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1852 ||
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1853 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2869[0] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_609_EQ__ETC___d2881[0]) ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1043 =
	     (sV1_exp__h1204 != 8'd0 || sV1_sfd__h1205 != 23'd0 ||
	      sV2_exp__h1307 != 8'd0 ||
	      sV2_sfd__h1308 != 23'd0) &&
	     requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_A_ETC___d1042 ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1044 =
	     (sV1_exp__h1204 != 8'd255 || sV1_sfd__h1205 == 23'd0) &&
	     (sV2_exp__h1307 != 8'd255 || sV2_sfd__h1308 == 23'd0) &&
	     NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1043 ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1097 =
	     !IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1029 &&
	     (!IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1030 ||
	      !IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1031) &&
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1034 &&
	     (!IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1030 ||
	      IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1036) ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1103 =
	     (sV1_exp__h1204 != 8'd255 || sV1_sfd__h1205 == 23'd0) &&
	     (sV2_exp__h1307 != 8'd255 || sV2_sfd__h1308 == 23'd0) &&
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1102 ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1119 =
	     (sV1_exp__h1204 != 8'd255 || sV1_sfd__h1205 == 23'd0) &&
	     (sV2_exp__h1307 != 8'd255 || sV2_sfd__h1308 == 23'd0) &&
	     (requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_A_ETC___d1042 ||
	      IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1102) ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d3057 =
	     !sV1_sfd__h1205[21] && !sV1_sfd__h1205[20] &&
	     !sV1_sfd__h1205[19] &&
	     !sV1_sfd__h1205[18] &&
	     !sV1_sfd__h1205[17] &&
	     !sV1_sfd__h1205[16] &&
	     !sV1_sfd__h1205[15] &&
	     !sV1_sfd__h1205[14] &&
	     !sV1_sfd__h1205[13] &&
	     !sV1_sfd__h1205[12] &&
	     !sV1_sfd__h1205[11] &&
	     !sV1_sfd__h1205[10] &&
	     !sV1_sfd__h1205[9] &&
	     !sV1_sfd__h1205[8] &&
	     !sV1_sfd__h1205[7] &&
	     !sV1_sfd__h1205[6] &&
	     !sV1_sfd__h1205[5] &&
	     !sV1_sfd__h1205[4] &&
	     !sV1_sfd__h1205[3] &&
	     !sV1_sfd__h1205[2] &&
	     !sV1_sfd__h1205[1] &&
	     !sV1_sfd__h1205[0] ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d915 =
	     (sV1_exp__h1204 != 8'd0 || sV1_sfd__h1205 != 23'd0) &&
	     ((NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d838 ==
	       20'd1048545) ?
		_theResult_____2__h15258[32:31] != 2'b11 :
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d871[19] ||
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d873 &&
		IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d894 &&
		x__h15999[56:25] == 32'h7FFFFFFF) ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d978 =
	     (sV1_exp__h1204 != 8'd0 || sV1_sfd__h1205 != 23'd0) &&
	     !NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d934[19] &&
	     (!NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d936 ||
	      guard__h16818 != 2'd0) ;
  assign NOT_IF_requestR_3_BIT_159_6_THEN_NEG_requestR__ETC___d283 =
	     !sfd__h2605[31] && !sfd__h2605[30] && !sfd__h2605[29] &&
	     !sfd__h2605[28] &&
	     !sfd__h2605[27] &&
	     !sfd__h2605[26] &&
	     !sfd__h2605[25] &&
	     !sfd__h2605[24] &&
	     !sfd__h2605[23] &&
	     !sfd__h2605[22] &&
	     !sfd__h2605[21] &&
	     !sfd__h2605[20] &&
	     !sfd__h2605[19] &&
	     !sfd__h2605[18] &&
	     !sfd__h2605[17] &&
	     !sfd__h2605[16] &&
	     !sfd__h2605[15] &&
	     !sfd__h2605[14] &&
	     !sfd__h2605[13] &&
	     !sfd__h2605[12] &&
	     !sfd__h2605[11] &&
	     !sfd__h2605[10] &&
	     !sfd__h2605[9] &&
	     !sfd__h2605[8] &&
	     !sfd__h2605[7] &&
	     !sfd__h2605[6] &&
	     !sfd__h2605[5] &&
	     !sfd__h2605[4] &&
	     !sfd__h2605[3] &&
	     !sfd__h2605[2] &&
	     !sfd__h2605[1] &&
	     !sfd__h2605[0] ||
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d279 ||
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d281 ;
  assign NOT_requestR_3_BITS_159_TO_128_44_EQ_0_45_46_A_ETC___d800 =
	     requestR[159:128] != 32'd0 &&
	     (requestR[159] ||
	      requestR_3_BIT_158_07_OR_requestR_3_BIT_157_09_ETC___d789) &&
	     (!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d636 ||
	      !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d637 &&
	      !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d638 &&
	      _theResult___fst_exp__h14705 == 8'd255 &&
	      _theResult___fst_sfd__h14706 == 23'd0) ;
  assign NOT_requestR_3_BITS_190_TO_180_609_EQ_0_620_62_ETC___d1701 =
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     ((NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1624 ==
	       24'd16777185) ?
		_theResult_____2__h47179[32:31] != 2'b11 :
		NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1657[23] ||
		NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1659 &&
		IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1680 &&
		x__h47920[85:54] == 32'h7FFFFFFF) ;
  assign NOT_requestR_3_BITS_190_TO_180_609_EQ_0_620_62_ETC___d1764 =
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     !NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1720[23] &&
	     (!NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1722 ||
	      guard__h48722 != 2'd0) ;
  assign NOT_requestR_3_BITS_190_TO_180_609_EQ_2047_610_ETC___d3799 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0 ||
	      requestR[126:116] != 11'd0 ||
	      requestR[115:64] != 52'd0) &&
	     (requestR[191] && !requestR[127] ||
	      (requestR[191] || !requestR[127]) &&
	      IF_requestR_3_BIT_191_202_THEN_NOT_requestR_3__ETC___d3795) ;
  assign NOT_requestR_3_BITS_190_TO_180_609_EQ_2047_610_ETC___d3860 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	     (requestR[191] && !requestR[127] ||
	      (requestR[191] || !requestR[127]) &&
	      IF_requestR_3_BIT_191_202_THEN_NOT_requestR_3__ETC___d3795 ||
	      requestR_3_BITS_190_TO_180_609_EQ_0_620_AND_re_ETC___d3843) ;
  assign NOT_requestR_3_BITS_190_TO_180_609_ULT_request_ETC___d3839 =
	     !requestR_3_BITS_190_TO_180_609_ULT_requestR_3__ETC___d3791 &&
	     (!requestR_3_BITS_190_TO_180_609_EQ_requestR_3_B_ETC___d3786 ||
	      !requestR_3_BITS_179_TO_128_611_ULT_requestR_3__ETC___d3792) &&
	     requestR_3_BITS_190_TO_180_609_ULE_requestR_3__ETC___d3784 &&
	     (!requestR_3_BITS_190_TO_180_609_EQ_requestR_3_B_ETC___d3786 ||
	      requestR_3_BITS_179_TO_128_611_ULE_requestR_3__ETC___d3787) ;
  assign NOT_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_ETC___d1101 =
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159] ||
	      requestR[127:96] == 32'hFFFFFFFF && requestR[95]) &&
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      requestR[127:96] != 32'hFFFFFFFF ||
	      !requestR[95]) &&
	     ((requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ?
		NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1097 :
		IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1098) ;
  assign NOT_requestR_3_BIT_158_07_08_AND_NOT_requestR__ETC___d598 =
	     !requestR[158] && !requestR[157] && !requestR[156] &&
	     !requestR[155] &&
	     !requestR[154] &&
	     !requestR[153] &&
	     !requestR[152] &&
	     !requestR[151] &&
	     !requestR[150] &&
	     !requestR[149] &&
	     !requestR[148] &&
	     !requestR[147] &&
	     !requestR[146] &&
	     !requestR[145] &&
	     !requestR[144] &&
	     !requestR[143] &&
	     !requestR[142] &&
	     !requestR[141] &&
	     !requestR[140] &&
	     !requestR[139] &&
	     !requestR[138] &&
	     !requestR[137] &&
	     !requestR[136] &&
	     !requestR[135] &&
	     !requestR[134] &&
	     !requestR[133] &&
	     !requestR[132] &&
	     !requestR[131] &&
	     !requestR[130] &&
	     !requestR[129] &&
	     !requestR[128] ;
  assign NOT_requestR_3_BIT_179_778_153_AND_NOT_request_ETC___d2192 =
	     !requestR[179] && !requestR[178] && !requestR[177] &&
	     !requestR[176] &&
	     !requestR[175] &&
	     !requestR[174] &&
	     !requestR[173] &&
	     !requestR[172] &&
	     !requestR[171] &&
	     !requestR[170] &&
	     !requestR[169] &&
	     !requestR[168] &&
	     !requestR[167] &&
	     !requestR[166] &&
	     !requestR[165] &&
	     !requestR[164] &&
	     !requestR[163] &&
	     !requestR[162] &&
	     !requestR[161] &&
	     !requestR[160] &&
	     !requestR[159] &&
	     NOT_requestR_3_BIT_158_07_08_AND_NOT_requestR__ETC___d598 ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3155 =
	     { {4{IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d836[7]}},
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d836 } ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3156 =
	     (SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3155 ^
	      12'h800) <=
	     12'd3071 ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3157 =
	     (SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3155 ^
	      12'h800) <
	     12'd1026 ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3155 +
	     12'd1023 ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q99 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96[10:0] -
	     11'd1023 ;
  assign SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2322 =
	     { requestR_3_BITS_190_TO_180_609_MINUS_1023___d1622[10],
	       requestR_3_BITS_190_TO_180_609_MINUS_1023___d1622 } ;
  assign SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2323 =
	     (SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2322 ^
	      12'h800) <=
	     12'd2175 ;
  assign SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2324 =
	     (SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2322 ^
	      12'h800) <
	     12'd1922 ;
  assign SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC__q64 =
	     SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2322 +
	     12'd127 ;
  assign SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC__q67 =
	     SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC__q64[7:0] -
	     8'd127 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2087 =
	     ({ 3'd0,
		IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2085 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2869 =
	     { 3'd0,
	       _theResult___fst_exp__h69177 == 8'd0 &&
	       (sfdin__h69171[56:34] == 23'd0 || guard__h61080 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h69804 == 8'd255 &&
	       _theResult___fst_sfd__h69805 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h69177 != 8'd255 &&
	       guard__h61080 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3406 =
	     ({ 6'd0,
		IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3404 } ^
	      12'h800) <=
	     12'd2048 ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3691 =
	     { 3'd0,
	       _theResult___fst_exp__h128310 == 11'd0 &&
	       (sfdin__h128304[56:5] == 52'd0 || guard__h120084 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h129140 == 11'd2047 &&
	       _theResult___fst_sfd__h129141 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h128310 != 11'd2047 &&
	       guard__h120084 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2571 =
	     ({ 3'd0,
		IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2569 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2898 =
	     { 3'd0,
	       _theResult___fst_exp__h87030 == 8'd0 &&
	       (sfdin__h87024[56:34] == 23'd0 || guard__h78804 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h87657 == 8'd255 &&
	       _theResult___fst_sfd__h87658 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h87030 != 8'd255 &&
	       guard__h78804 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3086 =
	     ({ 6'd0,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3084 } ^
	      12'h800) <=
	     12'd2944 ;
  assign _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3479 =
	     ({ 6'd0,
		IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3084 } ^
	      12'h800) <=
	     (IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3478 ^
	      12'h800) ;
  assign _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3674 =
	     { 3'd0,
	       _theResult___fst_exp__h118737 == 11'd0 &&
	       guard__h110776 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h119493 == 11'd2047 &&
	       _theResult___fst_sfd__h119494 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h118737 != 11'd2047 &&
	       guard__h110776 != 2'b0 } ;
  assign _0_CONCAT_IF_requestR_3_BITS_190_TO_180_609_EQ__ETC___d2249 =
	     ({ 3'd0,
		IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2247 } ^
	      9'h100) <=
	     9'd384 ;
  assign _0_CONCAT_IF_requestR_3_BITS_190_TO_180_609_EQ__ETC___d2644 =
	     ({ 3'd0,
		IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2247 } ^
	      9'h100) <=
	     (IF_SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1_ETC___d2643 ^
	      9'h100) ;
  assign _0_CONCAT_IF_requestR_3_BITS_190_TO_180_609_EQ__ETC___d2881 =
	     { 3'd0,
	       _theResult___fst_exp__h77863 == 8'd0 && guard__h69815 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h78416 == 8'd255 &&
	       _theResult___fst_sfd__h78417 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h77863 != 8'd255 &&
	       guard__h69815 != 2'b0 } ;
  assign _0b0_CONCAT_NOT_IF_requestR_3_BITS_191_TO_160_4_ETC___d3162 =
	     b__h15323 >>
	     _3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3158 ;
  assign _0b0_CONCAT_NOT_requestR_3_BITS_190_TO_180_609__ETC___d2329 =
	     sfd__h53440 >>
	     _3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_609_ETC___d2325 ;
  assign _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d78 =
	     { 33'h1AAAAAAAA,
	       requestR[63:32] == 32'hFFFFFFFF && requestR[31],
	       (requestR[63:32] == 32'hFFFFFFFF) ?
		 requestR[30:0] :
		 31'h7FC00000 } ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1851 =
	     12'd3074 -
	     { 6'd0,
	       requestR[179] ?
		 6'd0 :
		 (requestR[178] ?
		    6'd1 :
		    (requestR[177] ?
		       6'd2 :
		       (requestR[176] ?
			  6'd3 :
			  (requestR[175] ?
			     6'd4 :
			     (requestR[174] ?
				6'd5 :
				(requestR[173] ?
				   6'd6 :
				   (requestR[172] ?
				      6'd7 :
				      (requestR[171] ?
					 6'd8 :
					 (requestR[170] ?
					    6'd9 :
					    (requestR[169] ?
					       6'd10 :
					       (requestR[168] ?
						  6'd11 :
						  (requestR[167] ?
						     6'd12 :
						     (requestR[166] ?
							6'd13 :
							(requestR[165] ?
							   6'd14 :
							   (requestR[164] ?
							      6'd15 :
							      (requestR[163] ?
								 6'd16 :
								 (requestR[162] ?
								    6'd17 :
								    (requestR[161] ?
								       6'd18 :
								       (requestR[160] ?
									  6'd19 :
									  (requestR[159] ?
									     6'd20 :
									     (requestR[158] ?
										6'd21 :
										(requestR[157] ?
										   6'd22 :
										   (requestR[156] ?
										      6'd23 :
										      (requestR[155] ?
											 6'd24 :
											 (requestR[154] ?
											    6'd25 :
											    (requestR[153] ?
											       6'd26 :
											       (requestR[152] ?
												  6'd27 :
												  (requestR[151] ?
												     6'd28 :
												     (requestR[150] ?
													6'd29 :
													(requestR[149] ?
													   6'd30 :
													   (requestR[148] ?
													      6'd31 :
													      (requestR[147] ?
														 6'd32 :
														 (requestR[146] ?
														    6'd33 :
														    (requestR[145] ?
														       6'd34 :
														       (requestR[144] ?
															  6'd35 :
															  (requestR[143] ?
															     6'd36 :
															     (requestR[142] ?
																6'd37 :
																(requestR[141] ?
																   6'd38 :
																   (requestR[140] ?
																      6'd39 :
																      (requestR[139] ?
																	 6'd40 :
																	 (requestR[138] ?
																	    6'd41 :
																	    (requestR[137] ?
																	       6'd42 :
																	       (requestR[136] ?
																		  6'd43 :
																		  (requestR[135] ?
																		     6'd44 :
																		     (requestR[134] ?
																			6'd45 :
																			(requestR[133] ?
																			   6'd46 :
																			   (requestR[132] ?
																			      6'd47 :
																			      (requestR[131] ?
																				 6'd48 :
																				 (requestR[130] ?
																				    6'd49 :
																				    (requestR[129] ?
																				       6'd50 :
																				       (requestR[128] ?
																					  6'd51 :
																					  6'd52))))))))))))))))))))))))))))))))))))))))))))))))))) } ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1852 =
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1851 ^
	      12'h800) <=
	     12'd2175 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1853 =
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1851 ^
	      12'h800) <
	     12'd1922 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d2884 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1852 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1853 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2869[4] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_609_EQ__ETC___d2881[4]) ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d2909 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1852 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1853 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2869[3] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_609_EQ__ETC___d2881[3]) ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d2936 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1852 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1853 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2869[1] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_609_EQ__ETC___d2881[1]) ;
  assign _3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3158 =
	     12'd3074 -
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3155 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1245 =
	     (12'd32 -
	      { 6'd0,
		IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d1242 }) -
	     12'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1246 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1245 ^
	      12'h800) <=
	     12'd3071 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1248 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1245 ^
	      12'h800) <
	     12'd974 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1250 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1245 ^
	      12'h800) <
	     12'd1026 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d278 =
	     (9'd32 -
	      { 3'd0,
		IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d275 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d279 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d278 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d281 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d278 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d284 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d278 ^
	      9'h100) <
	     9'd130 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1459 =
	     (12'd32 -
	      { 6'd0,
		IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d1456 }) -
	     12'd1 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1460 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1459 ^
	      12'h800) <=
	     12'd3071 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1461 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1459 ^
	      12'h800) <
	     12'd974 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1462 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1459 ^
	      12'h800) <
	     12'd1026 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d635 =
	     (9'd32 -
	      { 3'd0,
		IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d632 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d636 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d635 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d637 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d635 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d638 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d635 ^
	      9'h100) <
	     9'd130 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3012 =
	     12'd3970 -
	     { 7'd0,
	       sV1_sfd__h1205[22] ?
		 5'd0 :
		 (sV1_sfd__h1205[21] ?
		    5'd1 :
		    (sV1_sfd__h1205[20] ?
		       5'd2 :
		       (sV1_sfd__h1205[19] ?
			  5'd3 :
			  (sV1_sfd__h1205[18] ?
			     5'd4 :
			     (sV1_sfd__h1205[17] ?
				5'd5 :
				(sV1_sfd__h1205[16] ?
				   5'd6 :
				   (sV1_sfd__h1205[15] ?
				      5'd7 :
				      (sV1_sfd__h1205[14] ?
					 5'd8 :
					 (sV1_sfd__h1205[13] ?
					    5'd9 :
					    (sV1_sfd__h1205[12] ?
					       5'd10 :
					       (sV1_sfd__h1205[11] ?
						  5'd11 :
						  (sV1_sfd__h1205[10] ?
						     5'd12 :
						     (sV1_sfd__h1205[9] ?
							5'd13 :
							(sV1_sfd__h1205[8] ?
							   5'd14 :
							   (sV1_sfd__h1205[7] ?
							      5'd15 :
							      (sV1_sfd__h1205[6] ?
								 5'd16 :
								 (sV1_sfd__h1205[5] ?
								    5'd17 :
								    (sV1_sfd__h1205[4] ?
								       5'd18 :
								       (sV1_sfd__h1205[3] ?
									  5'd19 :
									  (sV1_sfd__h1205[2] ?
									     5'd20 :
									     (sV1_sfd__h1205[1] ?
										5'd21 :
										(sV1_sfd__h1205[0] ?
										   5'd22 :
										   5'd23)))))))))))))))))))))) } ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3013 =
	     (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3012 ^
	      12'h800) <=
	     12'd3071 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3014 =
	     (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3012 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_609_ETC___d2325 =
	     12'd3970 -
	     SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2322 ;
  assign _theResult_____2__h15258 =
	     IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d862 ?
	       out1___1__h15750 :
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d845[56:24] ;
  assign _theResult_____2__h47179 =
	     IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1648 ?
	       out1___1__h47671 :
	       IF_requestR_3_BIT_191_202_THEN_NEG_0b0_CONCAT__ETC___d1631[85:53] ;
  assign _theResult____h120074 =
	     ((_3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3158 ^
	       12'h800) <
	      12'd2105) ?
	       result__h120687 :
	       ((value__h15325 == 25'd0) ? b__h15323 : 57'd1) ;
  assign _theResult____h61070 =
	     (value__h47246 == 54'd0) ? sfd__h53440 : 57'd1 ;
  assign _theResult____h78794 =
	     ((_3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_609_ETC___d2325 ^
	       12'h800) <
	      12'd2105) ?
	       result__h79407 :
	       _theResult____h61070 ;
  assign _theResult___exp__h119392 =
	     sfd__h118755[53] ?
	       ((_theResult___fst_exp__h118737 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h137957) :
	       ((_theResult___fst_exp__h118737 == 11'd0 &&
		 sfd__h118755[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h118737) ;
  assign _theResult___exp__h129039 =
	     sfd__h128402[53] ?
	       ((_theResult___fst_exp__h128310 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h137987) :
	       ((_theResult___fst_exp__h128310 == 11'd0 &&
		 sfd__h128402[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h128310) ;
  assign _theResult___exp__h137821 =
	     sfd__h137160[53] ?
	       ((_theResult___fst_exp__h137141 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h138011) :
	       ((_theResult___fst_exp__h137141 == 11'd0 &&
		 sfd__h137160[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h137141) ;
  assign _theResult___exp__h14054 =
	     (sfd__h13658[24] || sfd__h13658[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h14606 =
	     sfd__h14197[24] ?
	       ((x__h14182[7:0] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h14744) :
	       ((x__h14182[7:0] == 8'd0 && sfd__h14197[24:23] == 2'b01) ?
		  8'd1 :
		  x__h14182[7:0]) ;
  assign _theResult___exp__h36135 =
	     (sfd__h35536[53] || sfd__h35536[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h36891 =
	     sfd__h36279[53] ?
	       ((x__h36264[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h37034) :
	       ((x__h36264[10:0] == 11'd0 && sfd__h36279[53:52] == 2'b01) ?
		  11'd1 :
		  x__h36264[10:0]) ;
  assign _theResult___exp__h45776 =
	     (sfd__h45177[53] || sfd__h45177[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h46531 =
	     sfd__h45919[53] ?
	       ((x__h45904[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h46669) :
	       ((x__h45904[10:0] == 11'd0 && sfd__h45919[53:52] == 2'b01) ?
		  11'd1 :
		  x__h45904[10:0]) ;
  assign _theResult___exp__h69703 =
	     sfd__h69269[24] ?
	       ((_theResult___fst_exp__h69177 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h96354) :
	       ((_theResult___fst_exp__h69177 == 8'd0 &&
		 sfd__h69269[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h69177) ;
  assign _theResult___exp__h78315 =
	     sfd__h77881[24] ?
	       ((_theResult___fst_exp__h77863 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h96378) :
	       ((_theResult___fst_exp__h77863 == 8'd0 &&
		 sfd__h77881[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h77863) ;
  assign _theResult___exp__h7935 =
	     (sfd__h7536[24] || sfd__h7536[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h8488 =
	     sfd__h8079[24] ?
	       ((x__h8064[7:0] == 8'd254) ? 8'd255 : din_inc___2_exp__h8631) :
	       ((x__h8064[7:0] == 8'd0 && sfd__h8079[24:23] == 2'b01) ?
		  8'd1 :
		  x__h8064[7:0]) ;
  assign _theResult___exp__h87556 =
	     sfd__h87122[24] ?
	       ((_theResult___fst_exp__h87030 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h96408) :
	       ((_theResult___fst_exp__h87030 == 8'd0 &&
		 sfd__h87122[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h87030) ;
  assign _theResult___exp__h96222 =
	     sfd__h95764[24] ?
	       ((_theResult___fst_exp__h95745 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h96432) :
	       ((_theResult___fst_exp__h95745 == 8'd0 &&
		 sfd__h95764[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h95745) ;
  assign _theResult___fst_exp__h103664 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       11'd2047 :
	       CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 ;
  assign _theResult___fst_exp__h118728 =
	     11'd897 -
	     { 5'd0,
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3084 } ;
  assign _theResult___fst_exp__h118734 =
	     (sV1_exp__h1204 == 8'd0 && !sV1_sfd__h1205[22] &&
	      NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d3057 ||
	      !_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3086) ?
	       11'd0 :
	       _theResult___fst_exp__h118728 ;
  assign _theResult___fst_exp__h118737 =
	     (sV1_exp__h1204 == 8'd0) ?
	       _theResult___fst_exp__h118734 :
	       11'd897 ;
  assign _theResult___fst_exp__h119490 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard10776_0b0_theResult___fst_exp18737_0_ETC__q103 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3144 ;
  assign _theResult___fst_exp__h119493 =
	     (_theResult___fst_exp__h118737 == 11'd2047) ?
	       _theResult___fst_exp__h118737 :
	       _theResult___fst_exp__h119490 ;
  assign _theResult___fst_exp__h128310 =
	     _theResult____h120074[56] ?
	       11'd2 :
	       _theResult___fst_exp__h128384 ;
  assign _theResult___fst_exp__h128375 =
	     11'd0 -
	     { 5'd0,
	       IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3404 } ;
  assign _theResult___fst_exp__h128381 =
	     (!_theResult____h120074[56] && !_theResult____h120074[55] &&
	      !_theResult____h120074[54] &&
	      !_theResult____h120074[53] &&
	      !_theResult____h120074[52] &&
	      !_theResult____h120074[51] &&
	      !_theResult____h120074[50] &&
	      !_theResult____h120074[49] &&
	      !_theResult____h120074[48] &&
	      !_theResult____h120074[47] &&
	      !_theResult____h120074[46] &&
	      !_theResult____h120074[45] &&
	      !_theResult____h120074[44] &&
	      !_theResult____h120074[43] &&
	      !_theResult____h120074[42] &&
	      !_theResult____h120074[41] &&
	      !_theResult____h120074[40] &&
	      !_theResult____h120074[39] &&
	      !_theResult____h120074[38] &&
	      !_theResult____h120074[37] &&
	      !_theResult____h120074[36] &&
	      !_theResult____h120074[35] &&
	      !_theResult____h120074[34] &&
	      !_theResult____h120074[33] &&
	      !_theResult____h120074[32] &&
	      !_theResult____h120074[31] &&
	      !_theResult____h120074[30] &&
	      !_theResult____h120074[29] &&
	      !_theResult____h120074[28] &&
	      !_theResult____h120074[27] &&
	      !_theResult____h120074[26] &&
	      !_theResult____h120074[25] &&
	      !_theResult____h120074[24] &&
	      !_theResult____h120074[23] &&
	      !_theResult____h120074[22] &&
	      !_theResult____h120074[21] &&
	      !_theResult____h120074[20] &&
	      !_theResult____h120074[19] &&
	      !_theResult____h120074[18] &&
	      !_theResult____h120074[17] &&
	      !_theResult____h120074[16] &&
	      !_theResult____h120074[15] &&
	      !_theResult____h120074[14] &&
	      !_theResult____h120074[13] &&
	      !_theResult____h120074[12] &&
	      !_theResult____h120074[11] &&
	      !_theResult____h120074[10] &&
	      !_theResult____h120074[9] &&
	      !_theResult____h120074[8] &&
	      !_theResult____h120074[7] &&
	      !_theResult____h120074[6] &&
	      !_theResult____h120074[5] &&
	      !_theResult____h120074[4] &&
	      !_theResult____h120074[3] &&
	      !_theResult____h120074[2] &&
	      !_theResult____h120074[1] &&
	      !_theResult____h120074[0] ||
	      !_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3406) ?
	       11'd0 :
	       _theResult___fst_exp__h128375 ;
  assign _theResult___fst_exp__h128384 =
	     (!_theResult____h120074[56] && _theResult____h120074[55]) ?
	       11'd1 :
	       _theResult___fst_exp__h128381 ;
  assign _theResult___fst_exp__h129137 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard20084_0b0_theResult___fst_exp28310_0_ETC__q105 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3469 ;
  assign _theResult___fst_exp__h129140 =
	     (_theResult___fst_exp__h128310 == 11'd2047) ?
	       _theResult___fst_exp__h128310 :
	       _theResult___fst_exp__h129137 ;
  assign _theResult___fst_exp__h137093 =
	     (SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96[10:0] ==
	      11'd0) ?
	       11'd1 :
	       SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96[10:0] ;
  assign _theResult___fst_exp__h137132 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC__q96[10:0] -
	     { 5'd0,
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3084 } ;
  assign _theResult___fst_exp__h137138 =
	     (sV1_exp__h1204 == 8'd0 && !sV1_sfd__h1205[22] &&
	      NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d3057 ||
	      !_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d3479) ?
	       11'd0 :
	       _theResult___fst_exp__h137132 ;
  assign _theResult___fst_exp__h137141 =
	     (sV1_exp__h1204 == 8'd0) ?
	       _theResult___fst_exp__h137138 :
	       _theResult___fst_exp__h137093 ;
  assign _theResult___fst_exp__h137919 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard29151_0b0_theResult___fst_exp37141_0_ETC__q107 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3538 ;
  assign _theResult___fst_exp__h137922 =
	     (_theResult___fst_exp__h137141 == 11'd2047) ?
	       _theResult___fst_exp__h137141 :
	       _theResult___fst_exp__h137919 ;
  assign _theResult___fst_exp__h137931 =
	     (sV1_exp__h1204 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3013 ?
		  _theResult___snd_fst_exp__h119496 :
		  _theResult___fst_exp__h103664) :
	       (SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3156 ?
		  _theResult___snd_fst_exp__h137925 :
		  _theResult___fst_exp__h103664) ;
  assign _theResult___fst_exp__h137934 =
	     (sV1_exp__h1204 == 8'd0 && sV1_sfd__h1205 == 23'd0) ?
	       11'd0 :
	       _theResult___fst_exp__h137931 ;
  assign _theResult___fst_exp__h14150 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard3641_0b0_0_0b1_0_0b10_out_exp4057_0b_ETC__q22 :
	       CASE_requestR_BITS_194_TO_192_0x3_IF_guard3641_ETC__q24 ;
  assign _theResult___fst_exp__h14702 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard4167_0b0_x4182_BITS_7_TO_0_0b1_x4182_ETC__q26 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d716 ;
  assign _theResult___fst_exp__h14705 =
	     (x__h14182[7:0] == 8'd255) ?
	       x__h14182[7:0] :
	       _theResult___fst_exp__h14702 ;
  assign _theResult___fst_exp__h36232 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard5519_0b0_0_0b1_0_0b10_out_exp6138_0b_ETC__q44 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1325 ;
  assign _theResult___fst_exp__h36988 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard6249_0b0_x6264_BITS_10_TO_0_0b1_x626_ETC__q40 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1354 ;
  assign _theResult___fst_exp__h36991 =
	     (x__h36264[10:0] == 11'd2047) ?
	       x__h36264[10:0] :
	       _theResult___fst_exp__h36988 ;
  assign _theResult___fst_exp__h45872 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard5160_0b0_0_0b1_0_0b10_out_exp5779_0b_ETC__q49 :
	       CASE_requestR_BITS_194_TO_192_0x3_IF_guard5160_ETC__q51 ;
  assign _theResult___fst_exp__h46627 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard5889_0b0_x5904_BITS_10_TO_0_0b1_x590_ETC__q53 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1540 ;
  assign _theResult___fst_exp__h46630 =
	     (x__h45904[10:0] == 11'd2047) ?
	       x__h45904[10:0] :
	       _theResult___fst_exp__h46627 ;
  assign _theResult___fst_exp__h61052 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       8'd255 :
	       CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 ;
  assign _theResult___fst_exp__h69177 =
	     _theResult____h61070[56] ? 8'd2 : _theResult___fst_exp__h69251 ;
  assign _theResult___fst_exp__h69242 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2085 } ;
  assign _theResult___fst_exp__h69248 =
	     (!_theResult____h61070[56] && !_theResult____h61070[55] &&
	      !_theResult____h61070[54] &&
	      !_theResult____h61070[53] &&
	      !_theResult____h61070[52] &&
	      !_theResult____h61070[51] &&
	      !_theResult____h61070[50] &&
	      !_theResult____h61070[49] &&
	      !_theResult____h61070[48] &&
	      !_theResult____h61070[47] &&
	      !_theResult____h61070[46] &&
	      !_theResult____h61070[45] &&
	      !_theResult____h61070[44] &&
	      !_theResult____h61070[43] &&
	      !_theResult____h61070[42] &&
	      !_theResult____h61070[41] &&
	      !_theResult____h61070[40] &&
	      !_theResult____h61070[39] &&
	      !_theResult____h61070[38] &&
	      !_theResult____h61070[37] &&
	      !_theResult____h61070[36] &&
	      !_theResult____h61070[35] &&
	      !_theResult____h61070[34] &&
	      !_theResult____h61070[33] &&
	      !_theResult____h61070[32] &&
	      !_theResult____h61070[31] &&
	      !_theResult____h61070[30] &&
	      !_theResult____h61070[29] &&
	      !_theResult____h61070[28] &&
	      !_theResult____h61070[27] &&
	      !_theResult____h61070[26] &&
	      !_theResult____h61070[25] &&
	      !_theResult____h61070[24] &&
	      !_theResult____h61070[23] &&
	      !_theResult____h61070[22] &&
	      !_theResult____h61070[21] &&
	      !_theResult____h61070[20] &&
	      !_theResult____h61070[19] &&
	      !_theResult____h61070[18] &&
	      !_theResult____h61070[17] &&
	      !_theResult____h61070[16] &&
	      !_theResult____h61070[15] &&
	      !_theResult____h61070[14] &&
	      !_theResult____h61070[13] &&
	      !_theResult____h61070[12] &&
	      !_theResult____h61070[11] &&
	      !_theResult____h61070[10] &&
	      !_theResult____h61070[9] &&
	      !_theResult____h61070[8] &&
	      !_theResult____h61070[7] &&
	      !_theResult____h61070[6] &&
	      !_theResult____h61070[5] &&
	      !_theResult____h61070[4] &&
	      !_theResult____h61070[3] &&
	      !_theResult____h61070[2] &&
	      !_theResult____h61070[1] &&
	      !_theResult____h61070[0] ||
	      !_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2087) ?
	       8'd0 :
	       _theResult___fst_exp__h69242 ;
  assign _theResult___fst_exp__h69251 =
	     (!_theResult____h61070[56] && _theResult____h61070[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h69248 ;
  assign _theResult___fst_exp__h69801 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard1080_0b0_theResult___fst_exp9177_0b1_ETC__q71 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2150 ;
  assign _theResult___fst_exp__h69804 =
	     (_theResult___fst_exp__h69177 == 8'd255) ?
	       _theResult___fst_exp__h69177 :
	       _theResult___fst_exp__h69801 ;
  assign _theResult___fst_exp__h77854 =
	     8'd129 -
	     { 2'd0,
	       IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2247 } ;
  assign _theResult___fst_exp__h77860 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_3_BIT_179_778_153_AND_NOT_request_ETC___d2192 ||
	      !_0_CONCAT_IF_requestR_3_BITS_190_TO_180_609_EQ__ETC___d2249) ?
	       8'd0 :
	       _theResult___fst_exp__h77854 ;
  assign _theResult___fst_exp__h77863 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___fst_exp__h77860 :
	       8'd129 ;
  assign _theResult___fst_exp__h78413 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard9815_0b0_theResult___fst_exp7863_0b1_ETC__q73 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2307 ;
  assign _theResult___fst_exp__h78416 =
	     (_theResult___fst_exp__h77863 == 8'd255) ?
	       _theResult___fst_exp__h77863 :
	       _theResult___fst_exp__h78413 ;
  assign _theResult___fst_exp__h8032 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard519_0b0_0_0b1_0_0b10_out_exp938_0b11_ETC__q13 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d370 ;
  assign _theResult___fst_exp__h8585 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard049_0b0_x064_BITS_7_TO_0_0b1_x064_BI_ETC__q15 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d399 ;
  assign _theResult___fst_exp__h8588 =
	     (x__h8064[7:0] == 8'd255) ?
	       x__h8064[7:0] :
	       _theResult___fst_exp__h8585 ;
  assign _theResult___fst_exp__h87030 =
	     _theResult____h78794[56] ? 8'd2 : _theResult___fst_exp__h87104 ;
  assign _theResult___fst_exp__h87095 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2569 } ;
  assign _theResult___fst_exp__h87101 =
	     (!_theResult____h78794[56] && !_theResult____h78794[55] &&
	      !_theResult____h78794[54] &&
	      !_theResult____h78794[53] &&
	      !_theResult____h78794[52] &&
	      !_theResult____h78794[51] &&
	      !_theResult____h78794[50] &&
	      !_theResult____h78794[49] &&
	      !_theResult____h78794[48] &&
	      !_theResult____h78794[47] &&
	      !_theResult____h78794[46] &&
	      !_theResult____h78794[45] &&
	      !_theResult____h78794[44] &&
	      !_theResult____h78794[43] &&
	      !_theResult____h78794[42] &&
	      !_theResult____h78794[41] &&
	      !_theResult____h78794[40] &&
	      !_theResult____h78794[39] &&
	      !_theResult____h78794[38] &&
	      !_theResult____h78794[37] &&
	      !_theResult____h78794[36] &&
	      !_theResult____h78794[35] &&
	      !_theResult____h78794[34] &&
	      !_theResult____h78794[33] &&
	      !_theResult____h78794[32] &&
	      !_theResult____h78794[31] &&
	      !_theResult____h78794[30] &&
	      !_theResult____h78794[29] &&
	      !_theResult____h78794[28] &&
	      !_theResult____h78794[27] &&
	      !_theResult____h78794[26] &&
	      !_theResult____h78794[25] &&
	      !_theResult____h78794[24] &&
	      !_theResult____h78794[23] &&
	      !_theResult____h78794[22] &&
	      !_theResult____h78794[21] &&
	      !_theResult____h78794[20] &&
	      !_theResult____h78794[19] &&
	      !_theResult____h78794[18] &&
	      !_theResult____h78794[17] &&
	      !_theResult____h78794[16] &&
	      !_theResult____h78794[15] &&
	      !_theResult____h78794[14] &&
	      !_theResult____h78794[13] &&
	      !_theResult____h78794[12] &&
	      !_theResult____h78794[11] &&
	      !_theResult____h78794[10] &&
	      !_theResult____h78794[9] &&
	      !_theResult____h78794[8] &&
	      !_theResult____h78794[7] &&
	      !_theResult____h78794[6] &&
	      !_theResult____h78794[5] &&
	      !_theResult____h78794[4] &&
	      !_theResult____h78794[3] &&
	      !_theResult____h78794[2] &&
	      !_theResult____h78794[1] &&
	      !_theResult____h78794[0] ||
	      !_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2571) ?
	       8'd0 :
	       _theResult___fst_exp__h87095 ;
  assign _theResult___fst_exp__h87104 =
	     (!_theResult____h78794[56] && _theResult____h78794[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h87101 ;
  assign _theResult___fst_exp__h87654 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard8804_0b0_theResult___fst_exp7030_0b1_ETC__q75 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2634 ;
  assign _theResult___fst_exp__h87657 =
	     (_theResult___fst_exp__h87030 == 8'd255) ?
	       _theResult___fst_exp__h87030 :
	       _theResult___fst_exp__h87654 ;
  assign _theResult___fst_exp__h95697 =
	     (SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC__q64[7:0] ==
	      8'd0) ?
	       8'd1 :
	       SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC__q64[7:0] ;
  assign _theResult___fst_exp__h95736 =
	     SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC__q64[7:0] -
	     { 2'd0,
	       IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2247 } ;
  assign _theResult___fst_exp__h95742 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_3_BIT_179_778_153_AND_NOT_request_ETC___d2192 ||
	      !_0_CONCAT_IF_requestR_3_BITS_190_TO_180_609_EQ__ETC___d2644) ?
	       8'd0 :
	       _theResult___fst_exp__h95736 ;
  assign _theResult___fst_exp__h95745 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___fst_exp__h95742 :
	       _theResult___fst_exp__h95697 ;
  assign _theResult___fst_exp__h96320 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard7668_0b0_theResult___fst_exp5745_0b1_ETC__q77 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2703 ;
  assign _theResult___fst_exp__h96323 =
	     (_theResult___fst_exp__h95745 == 8'd255) ?
	       _theResult___fst_exp__h95745 :
	       _theResult___fst_exp__h96320 ;
  assign _theResult___fst_exp__h96332 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1852 ?
		  _theResult___snd_fst_exp__h78419 :
		  _theResult___fst_exp__h61052) :
	       (SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2323 ?
		  _theResult___snd_fst_exp__h96326 :
		  _theResult___fst_exp__h61052) ;
  assign _theResult___fst_exp__h96335 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       8'd0 :
	       _theResult___fst_exp__h96332 ;
  assign _theResult___fst_sfd__h103665 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       52'd0 :
	       CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 ;
  assign _theResult___fst_sfd__h119491 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard10776_0b0_theResult___snd18688_BITS__ETC__q115 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3571 ;
  assign _theResult___fst_sfd__h119494 =
	     (_theResult___fst_exp__h118737 == 11'd2047) ?
	       _theResult___snd__h118688[56:5] :
	       _theResult___fst_sfd__h119491 ;
  assign _theResult___fst_sfd__h129138 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard20084_0b0_sfdin28304_BITS_56_TO_5_0b_ETC__q117 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3598 ;
  assign _theResult___fst_sfd__h129141 =
	     (_theResult___fst_exp__h128310 == 11'd2047) ?
	       sfdin__h128304[56:5] :
	       _theResult___fst_sfd__h129138 ;
  assign _theResult___fst_sfd__h137920 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard29151_0b0_theResult___snd37087_BITS__ETC__q119 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3617 ;
  assign _theResult___fst_sfd__h137923 =
	     (_theResult___fst_exp__h137141 == 11'd2047) ?
	       _theResult___snd__h137087[56:5] :
	       _theResult___fst_sfd__h137920 ;
  assign _theResult___fst_sfd__h137932 =
	     (sV1_exp__h1204 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3013 ?
		  _theResult___snd_fst_sfd__h119497 :
		  _theResult___fst_sfd__h103665) :
	       (SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3156 ?
		  _theResult___snd_fst_sfd__h137926 :
		  _theResult___fst_sfd__h103665) ;
  assign _theResult___fst_sfd__h137938 =
	     ((sV1_exp__h1204 == 8'd255 || sV1_exp__h1204 == 8'd0) &&
	      sV1_sfd__h1205 == 23'd0) ?
	       52'd0 :
	       _theResult___fst_sfd__h137932 ;
  assign _theResult___fst_sfd__h14151 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard3641_0b0_sfd___33631_BITS_31_TO_9_0b_ETC__q30 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d739 ;
  assign _theResult___fst_sfd__h14703 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard4167_0b0_sfd___33631_BITS_30_TO_8_0b_ETC__q28 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d754 ;
  assign _theResult___fst_sfd__h14706 =
	     (x__h14182[7:0] == 8'd255) ?
	       sfd___3__h13631[30:8] :
	       _theResult___fst_sfd__h14703 ;
  assign _theResult___fst_sfd__h36233 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard5519_0b0_sfd___35509_BITS_54_TO_3_0b_ETC__q46 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1377 ;
  assign _theResult___fst_sfd__h36989 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard6249_0b0_sfd___35509_BITS_53_TO_2_0b_ETC__q42 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1395 ;
  assign _theResult___fst_sfd__h36992 =
	     (x__h36264[10:0] == 11'd2047) ?
	       sfd___3__h35509[53:2] :
	       _theResult___fst_sfd__h36989 ;
  assign _theResult___fst_sfd__h45873 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard5160_0b0_sfd___35150_BITS_54_TO_3_0b_ETC__q57 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1562 ;
  assign _theResult___fst_sfd__h46628 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard5889_0b0_sfd___35150_BITS_53_TO_2_0b_ETC__q55 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1577 ;
  assign _theResult___fst_sfd__h46631 =
	     (x__h45904[10:0] == 11'd2047) ?
	       sfd___3__h45150[53:2] :
	       _theResult___fst_sfd__h46628 ;
  assign _theResult___fst_sfd__h49736 = { 1'd1, requestR[178:128] } ;
  assign _theResult___fst_sfd__h61053 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       23'd0 :
	       CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 ;
  assign _theResult___fst_sfd__h69802 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard1080_0b0_sfdin9171_BITS_56_TO_34_0b1_ETC__q79 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2737 ;
  assign _theResult___fst_sfd__h69805 =
	     (_theResult___fst_exp__h69177 == 8'd255) ?
	       sfdin__h69171[56:34] :
	       _theResult___fst_sfd__h69802 ;
  assign _theResult___fst_sfd__h78414 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard9815_0b0_theResult___snd7814_BITS_56_ETC__q81 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2756 ;
  assign _theResult___fst_sfd__h78417 =
	     (_theResult___fst_exp__h77863 == 8'd255) ?
	       _theResult___snd__h77814[56:34] :
	       _theResult___fst_sfd__h78414 ;
  assign _theResult___fst_sfd__h8033 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard519_0b0_sfd___3509_BITS_31_TO_9_0b1__ETC__q17 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d422 ;
  assign _theResult___fst_sfd__h8586 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard049_0b0_sfd___3509_BITS_30_TO_8_0b1__ETC__q19 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d440 ;
  assign _theResult___fst_sfd__h8589 =
	     (x__h8064[7:0] == 8'd255) ?
	       sfd___3__h7509[30:8] :
	       _theResult___fst_sfd__h8586 ;
  assign _theResult___fst_sfd__h87655 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard8804_0b0_sfdin7024_BITS_56_TO_34_0b1_ETC__q83 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2783 ;
  assign _theResult___fst_sfd__h87658 =
	     (_theResult___fst_exp__h87030 == 8'd255) ?
	       sfdin__h87024[56:34] :
	       _theResult___fst_sfd__h87655 ;
  assign _theResult___fst_sfd__h96321 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard7668_0b0_theResult___snd5691_BITS_56_ETC__q85 :
	       IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2802 ;
  assign _theResult___fst_sfd__h96324 =
	     (_theResult___fst_exp__h95745 == 8'd255) ?
	       _theResult___snd__h95691[56:34] :
	       _theResult___fst_sfd__h96321 ;
  assign _theResult___fst_sfd__h96333 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1852 ?
		  _theResult___snd_fst_sfd__h78420 :
		  _theResult___fst_sfd__h61053) :
	       (SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2323 ?
		  _theResult___snd_fst_sfd__h96327 :
		  _theResult___fst_sfd__h61053) ;
  assign _theResult___fst_sfd__h96339 =
	     ((requestR[190:180] == 11'd2047 || requestR[190:180] == 11'd0) &&
	      requestR[179:128] == 52'd0) ?
	       23'd0 :
	       _theResult___fst_sfd__h96333 ;
  assign _theResult___fst_sfd__h98183 = { 1'd1, sV1_sfd__h1205[21:0] } ;
  assign _theResult___sfd__h119393 =
	     sfd__h118755[53] ?
	       ((_theResult___fst_exp__h118737 == 11'd2046) ?
		  52'd0 :
		  sfd__h118755[52:1]) :
	       sfd__h118755[51:0] ;
  assign _theResult___sfd__h129040 =
	     sfd__h128402[53] ?
	       ((_theResult___fst_exp__h128310 == 11'd2046) ?
		  52'd0 :
		  sfd__h128402[52:1]) :
	       sfd__h128402[51:0] ;
  assign _theResult___sfd__h137822 =
	     sfd__h137160[53] ?
	       ((_theResult___fst_exp__h137141 == 11'd2046) ?
		  52'd0 :
		  sfd__h137160[52:1]) :
	       sfd__h137160[51:0] ;
  assign _theResult___sfd__h14055 =
	     sfd__h13658[24] ? sfd__h13658[23:1] : sfd__h13658[22:0] ;
  assign _theResult___sfd__h14607 =
	     sfd__h14197[24] ?
	       ((x__h14182[7:0] == 8'd254) ? 23'd0 : sfd__h14197[23:1]) :
	       sfd__h14197[22:0] ;
  assign _theResult___sfd__h36136 =
	     sfd__h35536[53] ? sfd__h35536[52:1] : sfd__h35536[51:0] ;
  assign _theResult___sfd__h36892 =
	     sfd__h36279[53] ?
	       ((x__h36264[10:0] == 11'd2046) ? 52'd0 : sfd__h36279[52:1]) :
	       sfd__h36279[51:0] ;
  assign _theResult___sfd__h45777 =
	     sfd__h45177[53] ? sfd__h45177[52:1] : sfd__h45177[51:0] ;
  assign _theResult___sfd__h46532 =
	     sfd__h45919[53] ?
	       ((x__h45904[10:0] == 11'd2046) ? 52'd0 : sfd__h45919[52:1]) :
	       sfd__h45919[51:0] ;
  assign _theResult___sfd__h69704 =
	     sfd__h69269[24] ?
	       ((_theResult___fst_exp__h69177 == 8'd254) ?
		  23'd0 :
		  sfd__h69269[23:1]) :
	       sfd__h69269[22:0] ;
  assign _theResult___sfd__h78316 =
	     sfd__h77881[24] ?
	       ((_theResult___fst_exp__h77863 == 8'd254) ?
		  23'd0 :
		  sfd__h77881[23:1]) :
	       sfd__h77881[22:0] ;
  assign _theResult___sfd__h7936 =
	     sfd__h7536[24] ? sfd__h7536[23:1] : sfd__h7536[22:0] ;
  assign _theResult___sfd__h8489 =
	     sfd__h8079[24] ?
	       ((x__h8064[7:0] == 8'd254) ? 23'd0 : sfd__h8079[23:1]) :
	       sfd__h8079[22:0] ;
  assign _theResult___sfd__h87557 =
	     sfd__h87122[24] ?
	       ((_theResult___fst_exp__h87030 == 8'd254) ?
		  23'd0 :
		  sfd__h87122[23:1]) :
	       sfd__h87122[22:0] ;
  assign _theResult___sfd__h96223 =
	     sfd__h95764[24] ?
	       ((_theResult___fst_exp__h95745 == 8'd254) ?
		  23'd0 :
		  sfd__h95764[23:1]) :
	       sfd__h95764[22:0] ;
  assign _theResult___snd__h118688 =
	     (sV1_exp__h1204 == 8'd0) ?
	       _theResult___snd__h118697 :
	       _theResult___snd__h118690 ;
  assign _theResult___snd__h118690 = { sV1_sfd__h1205, 34'd0 } ;
  assign _theResult___snd__h118697 =
	     (sV1_exp__h1204 == 8'd0 && !sV1_sfd__h1205[22] &&
	      NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d3057) ?
	       b__h15323 :
	       _theResult___snd__h118703 ;
  assign _theResult___snd__h118703 =
	     { IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_ETC__q94[54:0],
	       2'd0 } ;
  assign _theResult___snd__h118726 =
	     b__h15323 <<
	     IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3084 ;
  assign _theResult___snd__h128321 = { _theResult____h120074[55:0], 1'd0 } ;
  assign _theResult___snd__h128332 =
	     (!_theResult____h120074[56] && _theResult____h120074[55]) ?
	       _theResult___snd__h128334 :
	       _theResult___snd__h128344 ;
  assign _theResult___snd__h128334 = { _theResult____h120074[54:0], 2'd0 } ;
  assign _theResult___snd__h128344 =
	     (!_theResult____h120074[56] && !_theResult____h120074[55] &&
	      !_theResult____h120074[54] &&
	      !_theResult____h120074[53] &&
	      !_theResult____h120074[52] &&
	      !_theResult____h120074[51] &&
	      !_theResult____h120074[50] &&
	      !_theResult____h120074[49] &&
	      !_theResult____h120074[48] &&
	      !_theResult____h120074[47] &&
	      !_theResult____h120074[46] &&
	      !_theResult____h120074[45] &&
	      !_theResult____h120074[44] &&
	      !_theResult____h120074[43] &&
	      !_theResult____h120074[42] &&
	      !_theResult____h120074[41] &&
	      !_theResult____h120074[40] &&
	      !_theResult____h120074[39] &&
	      !_theResult____h120074[38] &&
	      !_theResult____h120074[37] &&
	      !_theResult____h120074[36] &&
	      !_theResult____h120074[35] &&
	      !_theResult____h120074[34] &&
	      !_theResult____h120074[33] &&
	      !_theResult____h120074[32] &&
	      !_theResult____h120074[31] &&
	      !_theResult____h120074[30] &&
	      !_theResult____h120074[29] &&
	      !_theResult____h120074[28] &&
	      !_theResult____h120074[27] &&
	      !_theResult____h120074[26] &&
	      !_theResult____h120074[25] &&
	      !_theResult____h120074[24] &&
	      !_theResult____h120074[23] &&
	      !_theResult____h120074[22] &&
	      !_theResult____h120074[21] &&
	      !_theResult____h120074[20] &&
	      !_theResult____h120074[19] &&
	      !_theResult____h120074[18] &&
	      !_theResult____h120074[17] &&
	      !_theResult____h120074[16] &&
	      !_theResult____h120074[15] &&
	      !_theResult____h120074[14] &&
	      !_theResult____h120074[13] &&
	      !_theResult____h120074[12] &&
	      !_theResult____h120074[11] &&
	      !_theResult____h120074[10] &&
	      !_theResult____h120074[9] &&
	      !_theResult____h120074[8] &&
	      !_theResult____h120074[7] &&
	      !_theResult____h120074[6] &&
	      !_theResult____h120074[5] &&
	      !_theResult____h120074[4] &&
	      !_theResult____h120074[3] &&
	      !_theResult____h120074[2] &&
	      !_theResult____h120074[1] &&
	      !_theResult____h120074[0]) ?
	       _theResult____h120074 :
	       _theResult___snd__h128350 ;
  assign _theResult___snd__h128350 =
	     { IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q97[54:0],
	       2'd0 } ;
  assign _theResult___snd__h128373 =
	     _theResult____h120074 <<
	     IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3404 ;
  assign _theResult___snd__h137087 =
	     (sV1_exp__h1204 == 8'd0) ?
	       _theResult___snd__h137101 :
	       _theResult___snd__h118690 ;
  assign _theResult___snd__h137101 =
	     (sV1_exp__h1204 == 8'd0 && !sV1_sfd__h1205[22] &&
	      NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d3057) ?
	       b__h15323 :
	       _theResult___snd__h137107 ;
  assign _theResult___snd__h137107 =
	     { IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_4_ETC__q100[54:0],
	       2'd0 } ;
  assign _theResult___snd__h137125 =
	     b__h15323 <<
	     IF_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xF_ETC___d3478 ;
  assign _theResult___snd__h69188 = { _theResult____h61070[55:0], 1'd0 } ;
  assign _theResult___snd__h69199 =
	     (!_theResult____h61070[56] && _theResult____h61070[55]) ?
	       _theResult___snd__h69201 :
	       _theResult___snd__h69211 ;
  assign _theResult___snd__h69201 = { _theResult____h61070[54:0], 2'd0 } ;
  assign _theResult___snd__h69211 =
	     (!_theResult____h61070[56] && !_theResult____h61070[55] &&
	      !_theResult____h61070[54] &&
	      !_theResult____h61070[53] &&
	      !_theResult____h61070[52] &&
	      !_theResult____h61070[51] &&
	      !_theResult____h61070[50] &&
	      !_theResult____h61070[49] &&
	      !_theResult____h61070[48] &&
	      !_theResult____h61070[47] &&
	      !_theResult____h61070[46] &&
	      !_theResult____h61070[45] &&
	      !_theResult____h61070[44] &&
	      !_theResult____h61070[43] &&
	      !_theResult____h61070[42] &&
	      !_theResult____h61070[41] &&
	      !_theResult____h61070[40] &&
	      !_theResult____h61070[39] &&
	      !_theResult____h61070[38] &&
	      !_theResult____h61070[37] &&
	      !_theResult____h61070[36] &&
	      !_theResult____h61070[35] &&
	      !_theResult____h61070[34] &&
	      !_theResult____h61070[33] &&
	      !_theResult____h61070[32] &&
	      !_theResult____h61070[31] &&
	      !_theResult____h61070[30] &&
	      !_theResult____h61070[29] &&
	      !_theResult____h61070[28] &&
	      !_theResult____h61070[27] &&
	      !_theResult____h61070[26] &&
	      !_theResult____h61070[25] &&
	      !_theResult____h61070[24] &&
	      !_theResult____h61070[23] &&
	      !_theResult____h61070[22] &&
	      !_theResult____h61070[21] &&
	      !_theResult____h61070[20] &&
	      !_theResult____h61070[19] &&
	      !_theResult____h61070[18] &&
	      !_theResult____h61070[17] &&
	      !_theResult____h61070[16] &&
	      !_theResult____h61070[15] &&
	      !_theResult____h61070[14] &&
	      !_theResult____h61070[13] &&
	      !_theResult____h61070[12] &&
	      !_theResult____h61070[11] &&
	      !_theResult____h61070[10] &&
	      !_theResult____h61070[9] &&
	      !_theResult____h61070[8] &&
	      !_theResult____h61070[7] &&
	      !_theResult____h61070[6] &&
	      !_theResult____h61070[5] &&
	      !_theResult____h61070[4] &&
	      !_theResult____h61070[3] &&
	      !_theResult____h61070[2] &&
	      !_theResult____h61070[1] &&
	      !_theResult____h61070[0]) ?
	       _theResult____h61070 :
	       _theResult___snd__h69217 ;
  assign _theResult___snd__h69217 =
	     { IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BI_ETC__q60[54:0],
	       2'd0 } ;
  assign _theResult___snd__h69240 =
	     _theResult____h61070 <<
	     IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2085 ;
  assign _theResult___snd__h77814 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___snd__h77823 :
	       _theResult___snd__h77816 ;
  assign _theResult___snd__h77816 = { requestR[179:128], 5'd0 } ;
  assign _theResult___snd__h77823 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_3_BIT_179_778_153_AND_NOT_request_ETC___d2192) ?
	       sfd__h53440 :
	       _theResult___snd__h77829 ;
  assign _theResult___snd__h77829 =
	     { IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_609__ETC__q62[54:0],
	       2'd0 } ;
  assign _theResult___snd__h77852 =
	     sfd__h53440 <<
	     IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2247 ;
  assign _theResult___snd__h87041 = { _theResult____h78794[55:0], 1'd0 } ;
  assign _theResult___snd__h87052 =
	     (!_theResult____h78794[56] && _theResult____h78794[55]) ?
	       _theResult___snd__h87054 :
	       _theResult___snd__h87064 ;
  assign _theResult___snd__h87054 = { _theResult____h78794[54:0], 2'd0 } ;
  assign _theResult___snd__h87064 =
	     (!_theResult____h78794[56] && !_theResult____h78794[55] &&
	      !_theResult____h78794[54] &&
	      !_theResult____h78794[53] &&
	      !_theResult____h78794[52] &&
	      !_theResult____h78794[51] &&
	      !_theResult____h78794[50] &&
	      !_theResult____h78794[49] &&
	      !_theResult____h78794[48] &&
	      !_theResult____h78794[47] &&
	      !_theResult____h78794[46] &&
	      !_theResult____h78794[45] &&
	      !_theResult____h78794[44] &&
	      !_theResult____h78794[43] &&
	      !_theResult____h78794[42] &&
	      !_theResult____h78794[41] &&
	      !_theResult____h78794[40] &&
	      !_theResult____h78794[39] &&
	      !_theResult____h78794[38] &&
	      !_theResult____h78794[37] &&
	      !_theResult____h78794[36] &&
	      !_theResult____h78794[35] &&
	      !_theResult____h78794[34] &&
	      !_theResult____h78794[33] &&
	      !_theResult____h78794[32] &&
	      !_theResult____h78794[31] &&
	      !_theResult____h78794[30] &&
	      !_theResult____h78794[29] &&
	      !_theResult____h78794[28] &&
	      !_theResult____h78794[27] &&
	      !_theResult____h78794[26] &&
	      !_theResult____h78794[25] &&
	      !_theResult____h78794[24] &&
	      !_theResult____h78794[23] &&
	      !_theResult____h78794[22] &&
	      !_theResult____h78794[21] &&
	      !_theResult____h78794[20] &&
	      !_theResult____h78794[19] &&
	      !_theResult____h78794[18] &&
	      !_theResult____h78794[17] &&
	      !_theResult____h78794[16] &&
	      !_theResult____h78794[15] &&
	      !_theResult____h78794[14] &&
	      !_theResult____h78794[13] &&
	      !_theResult____h78794[12] &&
	      !_theResult____h78794[11] &&
	      !_theResult____h78794[10] &&
	      !_theResult____h78794[9] &&
	      !_theResult____h78794[8] &&
	      !_theResult____h78794[7] &&
	      !_theResult____h78794[6] &&
	      !_theResult____h78794[5] &&
	      !_theResult____h78794[4] &&
	      !_theResult____h78794[3] &&
	      !_theResult____h78794[2] &&
	      !_theResult____h78794[1] &&
	      !_theResult____h78794[0]) ?
	       _theResult____h78794 :
	       _theResult___snd__h87070 ;
  assign _theResult___snd__h87070 =
	     { IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_B_ETC__q65[54:0],
	       2'd0 } ;
  assign _theResult___snd__h87093 =
	     _theResult____h78794 <<
	     IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2569 ;
  assign _theResult___snd__h95691 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___snd__h95705 :
	       _theResult___snd__h77816 ;
  assign _theResult___snd__h95705 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_3_BIT_179_778_153_AND_NOT_request_ETC___d2192) ?
	       sfd__h53440 :
	       _theResult___snd__h95711 ;
  assign _theResult___snd__h95711 =
	     { IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_609__ETC__q68[54:0],
	       2'd0 } ;
  assign _theResult___snd__h95729 =
	     sfd__h53440 <<
	     IF_SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1_ETC___d2643 ;
  assign _theResult___snd_fst_exp__h119496 =
	     _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3014 ?
	       11'd0 :
	       _theResult___fst_exp__h119493 ;
  assign _theResult___snd_fst_exp__h137925 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3157 ?
	       _theResult___fst_exp__h129140 :
	       _theResult___fst_exp__h137922 ;
  assign _theResult___snd_fst_exp__h14708 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d638 ?
	       _theResult___fst_exp__h14150 :
	       _theResult___fst_exp__h14705 ;
  assign _theResult___snd_fst_exp__h14711 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d637 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h14708 ;
  assign _theResult___snd_fst_exp__h14714 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d636 ?
	       _theResult___snd_fst_exp__h14711 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h36994 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1250 ?
	       _theResult___fst_exp__h36232 :
	       _theResult___fst_exp__h36991 ;
  assign _theResult___snd_fst_exp__h36997 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1248 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h36994 ;
  assign _theResult___snd_fst_exp__h37000 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1246 ?
	       _theResult___snd_fst_exp__h36997 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h46633 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1462 ?
	       _theResult___fst_exp__h45872 :
	       _theResult___fst_exp__h46630 ;
  assign _theResult___snd_fst_exp__h46636 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1461 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h46633 ;
  assign _theResult___snd_fst_exp__h46639 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1460 ?
	       _theResult___snd_fst_exp__h46636 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h78419 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1853 ?
	       _theResult___fst_exp__h69804 :
	       _theResult___fst_exp__h78416 ;
  assign _theResult___snd_fst_exp__h8591 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d284 ?
	       _theResult___fst_exp__h8032 :
	       _theResult___fst_exp__h8588 ;
  assign _theResult___snd_fst_exp__h8594 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d281 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h8591 ;
  assign _theResult___snd_fst_exp__h8597 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d279 ?
	       _theResult___snd_fst_exp__h8594 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h96326 =
	     SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2324 ?
	       _theResult___fst_exp__h87657 :
	       _theResult___fst_exp__h96323 ;
  assign _theResult___snd_fst_sfd__h119497 =
	     _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3014 ?
	       52'd0 :
	       _theResult___fst_sfd__h119494 ;
  assign _theResult___snd_fst_sfd__h137926 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFF_ETC___d3157 ?
	       _theResult___fst_sfd__h129141 :
	       _theResult___fst_sfd__h137923 ;
  assign _theResult___snd_fst_sfd__h14709 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d638 ?
	       _theResult___fst_sfd__h14151 :
	       _theResult___fst_sfd__h14706 ;
  assign _theResult___snd_fst_sfd__h36995 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1250 ?
	       _theResult___fst_sfd__h36233 :
	       _theResult___fst_sfd__h36992 ;
  assign _theResult___snd_fst_sfd__h46634 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1462 ?
	       _theResult___fst_sfd__h45873 :
	       _theResult___fst_sfd__h46631 ;
  assign _theResult___snd_fst_sfd__h53394 =
	     (value__h49279[51:29] == 23'd0) ?
	       23'd2097152 :
	       value__h49279[51:29] ;
  assign _theResult___snd_fst_sfd__h78420 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_778__ETC___d1853 ?
	       _theResult___fst_sfd__h69805 :
	       _theResult___fst_sfd__h78417 ;
  assign _theResult___snd_fst_sfd__h8592 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d284 ?
	       _theResult___fst_sfd__h8033 :
	       _theResult___fst_sfd__h8589 ;
  assign _theResult___snd_fst_sfd__h96327 =
	     SEXT_requestR_3_BITS_190_TO_180_609_MINUS_1023_ETC___d2324 ?
	       _theResult___fst_sfd__h87658 :
	       _theResult___fst_sfd__h96324 ;
  assign _theResult___snd_fst_sfd__h99811 =
	     (value__h97928 == 23'd0) ?
	       52'h4000000000000 :
	       out___1_sfd__h97925 ;
  assign b__h15323 = { value__h15325, 32'd0 } ;
  assign b__h47244 = { value__h47246, 32'd0 } ;
  assign din_inc___2_exp__h137957 = _theResult___fst_exp__h118737 + 11'd1 ;
  assign din_inc___2_exp__h137987 = _theResult___fst_exp__h128310 + 11'd1 ;
  assign din_inc___2_exp__h138011 = _theResult___fst_exp__h137141 + 11'd1 ;
  assign din_inc___2_exp__h14744 = x__h14182[7:0] + 8'd1 ;
  assign din_inc___2_exp__h37034 = x__h36264[10:0] + 11'd1 ;
  assign din_inc___2_exp__h46669 = x__h45904[10:0] + 11'd1 ;
  assign din_inc___2_exp__h8631 = x__h8064[7:0] + 8'd1 ;
  assign din_inc___2_exp__h96354 = _theResult___fst_exp__h69177 + 8'd1 ;
  assign din_inc___2_exp__h96378 = _theResult___fst_exp__h77863 + 8'd1 ;
  assign din_inc___2_exp__h96408 = _theResult___fst_exp__h87030 + 8'd1 ;
  assign din_inc___2_exp__h96432 = _theResult___fst_exp__h95745 + 8'd1 ;
  assign guard__h110776 =
	     { IF_theResult___snd18688_BIT_4_THEN_2_ELSE_0__q95[1],
	       { _theResult___snd__h118688[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h120084 =
	     { IF_sfdin28304_BIT_4_THEN_2_ELSE_0__q98[1],
	       { sfdin__h128304[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h120682 = x__h120782 != 57'd0 ;
  assign guard__h129151 =
	     { IF_theResult___snd37087_BIT_4_THEN_2_ELSE_0__q101[1],
	       { _theResult___snd__h137087[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h13641 =
	     { IF_sfd___33631_BIT_8_THEN_2_ELSE_0__q20[1],
	       { sfd___3__h13631[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h14167 =
	     { IF_sfd___33631_BIT_7_THEN_2_ELSE_0__q21[1],
	       { sfd___3__h13631[6:0], 24'd0 } != 31'd0 } ;
  assign guard__h15256 =
	     { IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d845[23],
	       { IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d845[22:0],
		 33'd0 } !=
	       56'd0 } ;
  assign guard__h15810 =
	     { IF_x5999_BIT_24_THEN_2_ELSE_0__q31[1],
	       { x__h15999[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h16818 =
	     { IF_x7039_BIT_24_THEN_2_ELSE_0__q32[1],
	       { x__h17039[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h35519 =
	     { IF_sfd___35509_BIT_2_THEN_2_ELSE_0__q33[1],
	       { sfd___3__h35509[1:0], 52'd0 } != 54'd0 } ;
  assign guard__h36249 =
	     { IF_sfd___35509_BIT_1_THEN_2_ELSE_0__q34[1],
	       { sfd___3__h35509[0], 53'd0 } != 54'd0 } ;
  assign guard__h45160 =
	     { IF_sfd___35150_BIT_2_THEN_2_ELSE_0__q47[1],
	       { sfd___3__h45150[1:0], 52'd0 } != 54'd0 } ;
  assign guard__h45889 =
	     { IF_sfd___35150_BIT_1_THEN_2_ELSE_0__q48[1],
	       { sfd___3__h45150[0], 53'd0 } != 54'd0 } ;
  assign guard__h47177 =
	     { IF_requestR_3_BIT_191_202_THEN_NEG_0b0_CONCAT__ETC___d1631[52],
	       { IF_requestR_3_BIT_191_202_THEN_NEG_0b0_CONCAT__ETC___d1631[51:0],
		 33'd0 } !=
	       85'd0 } ;
  assign guard__h47731 =
	     { IF_x7920_BIT_53_THEN_2_ELSE_0__q58[1],
	       { x__h47920[52:0], 32'd0 } != 85'd0 } ;
  assign guard__h48722 =
	     { IF_x8943_BIT_53_THEN_2_ELSE_0__q59[1],
	       { x__h48943[52:0], 32'd0 } != 85'd0 } ;
  assign guard__h61080 =
	     { IF_sfdin9171_BIT_33_THEN_2_ELSE_0__q61[1],
	       { sfdin__h69171[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h69815 =
	     { IF_theResult___snd7814_BIT_33_THEN_2_ELSE_0__q63[1],
	       { _theResult___snd__h77814[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h7519 =
	     { IF_sfd___3509_BIT_8_THEN_2_ELSE_0__q6[1],
	       { sfd___3__h7509[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h78804 =
	     { IF_sfdin7024_BIT_33_THEN_2_ELSE_0__q66[1],
	       { sfdin__h87024[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h79402 = x__h79502 != 57'd0 ;
  assign guard__h8049 =
	     { IF_sfd___3509_BIT_7_THEN_2_ELSE_0__q7[1],
	       { sfd___3__h7509[6:0], 24'd0 } != 31'd0 } ;
  assign guard__h87668 =
	     { IF_theResult___snd5691_BIT_33_THEN_2_ELSE_0__q69[1],
	       { _theResult___snd__h95691[32:0], 23'd0 } != 56'd0 } ;
  assign out1___1__h15750 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d845[56:24] +
	     33'd1 ;
  assign out1___1__h47671 =
	     IF_requestR_3_BIT_191_202_THEN_NEG_0b0_CONCAT__ETC___d1631[85:53] +
	     33'd1 ;
  assign out___1_sfd__h97925 = { value__h97928, 29'd0 } ;
  assign out_exp__h119395 =
	     _theResult___snd__h118688[5] ?
	       _theResult___exp__h119392 :
	       _theResult___fst_exp__h118737 ;
  assign out_exp__h129042 =
	     sfdin__h128304[5] ?
	       _theResult___exp__h129039 :
	       _theResult___fst_exp__h128310 ;
  assign out_exp__h137824 =
	     _theResult___snd__h137087[5] ?
	       _theResult___exp__h137821 :
	       _theResult___fst_exp__h137141 ;
  assign out_exp__h14057 =
	     sfd___3__h13631[9] ? _theResult___exp__h14054 : 8'd0 ;
  assign out_exp__h14609 =
	     sfd___3__h13631[8] ? _theResult___exp__h14606 : x__h14182[7:0] ;
  assign out_exp__h36138 =
	     sfd___3__h35509[3] ? _theResult___exp__h36135 : 11'd0 ;
  assign out_exp__h36894 =
	     sfd___3__h35509[2] ? _theResult___exp__h36891 : x__h36264[10:0] ;
  assign out_exp__h45779 =
	     sfd___3__h45150[3] ? _theResult___exp__h45776 : 11'd0 ;
  assign out_exp__h46534 =
	     sfd___3__h45150[2] ? _theResult___exp__h46531 : x__h45904[10:0] ;
  assign out_exp__h69706 =
	     sfdin__h69171[34] ?
	       _theResult___exp__h69703 :
	       _theResult___fst_exp__h69177 ;
  assign out_exp__h78318 =
	     _theResult___snd__h77814[34] ?
	       _theResult___exp__h78315 :
	       _theResult___fst_exp__h77863 ;
  assign out_exp__h7938 = sfd___3__h7509[9] ? _theResult___exp__h7935 : 8'd0 ;
  assign out_exp__h8491 =
	     sfd___3__h7509[8] ? _theResult___exp__h8488 : x__h8064[7:0] ;
  assign out_exp__h87559 =
	     sfdin__h87024[34] ?
	       _theResult___exp__h87556 :
	       _theResult___fst_exp__h87030 ;
  assign out_exp__h96225 =
	     _theResult___snd__h95691[34] ?
	       _theResult___exp__h96222 :
	       _theResult___fst_exp__h95745 ;
  assign out_sfd__h119396 =
	     _theResult___snd__h118688[5] ?
	       _theResult___sfd__h119393 :
	       _theResult___snd__h118688[56:5] ;
  assign out_sfd__h129043 =
	     sfdin__h128304[5] ?
	       _theResult___sfd__h129040 :
	       sfdin__h128304[56:5] ;
  assign out_sfd__h137825 =
	     _theResult___snd__h137087[5] ?
	       _theResult___sfd__h137822 :
	       _theResult___snd__h137087[56:5] ;
  assign out_sfd__h14058 =
	     sfd___3__h13631[9] ?
	       _theResult___sfd__h14055 :
	       sfd___3__h13631[31:9] ;
  assign out_sfd__h14610 =
	     sfd___3__h13631[8] ?
	       _theResult___sfd__h14607 :
	       sfd___3__h13631[30:8] ;
  assign out_sfd__h36139 =
	     sfd___3__h35509[3] ?
	       _theResult___sfd__h36136 :
	       sfd___3__h35509[54:3] ;
  assign out_sfd__h36895 =
	     sfd___3__h35509[2] ?
	       _theResult___sfd__h36892 :
	       sfd___3__h35509[53:2] ;
  assign out_sfd__h45780 =
	     sfd___3__h45150[3] ?
	       _theResult___sfd__h45777 :
	       sfd___3__h45150[54:3] ;
  assign out_sfd__h46535 =
	     sfd___3__h45150[2] ?
	       _theResult___sfd__h46532 :
	       sfd___3__h45150[53:2] ;
  assign out_sfd__h69707 =
	     sfdin__h69171[34] ?
	       _theResult___sfd__h69704 :
	       sfdin__h69171[56:34] ;
  assign out_sfd__h78319 =
	     _theResult___snd__h77814[34] ?
	       _theResult___sfd__h78316 :
	       _theResult___snd__h77814[56:34] ;
  assign out_sfd__h7939 =
	     sfd___3__h7509[9] ?
	       _theResult___sfd__h7936 :
	       sfd___3__h7509[31:9] ;
  assign out_sfd__h8492 =
	     sfd___3__h7509[8] ?
	       _theResult___sfd__h8489 :
	       sfd___3__h7509[30:8] ;
  assign out_sfd__h87560 =
	     sfdin__h87024[34] ?
	       _theResult___sfd__h87557 :
	       sfdin__h87024[56:34] ;
  assign out_sfd__h96226 =
	     _theResult___snd__h95691[34] ?
	       _theResult___sfd__h96223 :
	       _theResult___snd__h95691[56:34] ;
  assign requestR_3_BITS_126_TO_116_754_EQ_0_768_AND_re_ETC___d3775 =
	     requestR[126:116] == 11'd0 && requestR[115:64] == 52'd0 &&
	     requestR[127] &&
	     requestR[190:180] == 11'd0 &&
	     requestR[179:128] == 52'd0 &&
	     !requestR[191] ;
  assign requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 =
	     { requestR[127:96] == 32'hFFFFFFFF && requestR[95],
	       (requestR[127:96] == 32'hFFFFFFFF) ?
		 requestR[94:64] :
		 31'h7FC00000 } ;
  assign requestR_3_BITS_179_TO_128_611_ULE_requestR_3__ETC___d3787 =
	     requestR[179:128] <= requestR[115:64] ;
  assign requestR_3_BITS_179_TO_128_611_ULT_requestR_3__ETC___d3792 =
	     requestR[179:128] < requestR[115:64] ;
  assign requestR_3_BITS_190_TO_180_609_EQ_0_620_AND_re_ETC___d3771 =
	     requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0 &&
	     requestR[191] &&
	     requestR[126:116] == 11'd0 &&
	     requestR[115:64] == 52'd0 &&
	     !requestR[127] ;
  assign requestR_3_BITS_190_TO_180_609_EQ_0_620_AND_re_ETC___d3843 =
	     requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0 &&
	     requestR[126:116] == 11'd0 &&
	     requestR[115:64] == 52'd0 ||
	     (!requestR[191] || requestR[127]) &&
	     (requestR[191] || !requestR[127]) &&
	     (requestR[191] ?
		requestR_3_BITS_190_TO_180_609_ULE_requestR_3__ETC___d3838 :
		NOT_requestR_3_BITS_190_TO_180_609_ULT_request_ETC___d3839) ;
  assign requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d1759 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	     requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1720[23] ||
	      NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1722 &&
	      IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_OR_NO_ETC___d1741 &&
	      x__h48943[85:54] == 32'hFFFFFFFF) ;
  assign requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d1770 =
	     { requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d1759,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       NOT_requestR_3_BITS_190_TO_180_609_EQ_0_620_62_ETC___d1764 } ==
	     5'd0 ||
	     requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d1759 ;
  assign requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d3763 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	     !requestR[179] &&
	     requestR[126:116] == 11'd2047 &&
	     requestR[115:64] != 52'd0 &&
	     !requestR[115] ;
  assign requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d3808 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	     !requestR[179] ||
	     requestR[126:116] == 11'd2047 && requestR[115:64] != 52'd0 &&
	     !requestR[115] ;
  assign requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d3828 =
	     requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d3808 ||
	     requestR[190:180] == 11'd2047 && requestR[179] ||
	     requestR[126:116] == 11'd2047 && requestR[115] ;
  assign requestR_3_BITS_190_TO_180_609_EQ_requestR_3_B_ETC___d3786 =
	     requestR[190:180] == requestR[126:116] ;
  assign requestR_3_BITS_190_TO_180_609_MINUS_1023___d1622 =
	     requestR[190:180] - 11'd1023 ;
  assign requestR_3_BITS_190_TO_180_609_ULE_requestR_3__ETC___d3784 =
	     requestR[190:180] <= requestR[126:116] ;
  assign requestR_3_BITS_190_TO_180_609_ULE_requestR_3__ETC___d3838 =
	     requestR_3_BITS_190_TO_180_609_ULE_requestR_3__ETC___d3784 &&
	     (!requestR_3_BITS_190_TO_180_609_EQ_requestR_3_B_ETC___d3786 ||
	      requestR_3_BITS_179_TO_128_611_ULE_requestR_3__ETC___d3787) &&
	     !requestR_3_BITS_190_TO_180_609_ULT_requestR_3__ETC___d3791 &&
	     (!requestR_3_BITS_190_TO_180_609_EQ_requestR_3_B_ETC___d3786 ||
	      !requestR_3_BITS_179_TO_128_611_ULT_requestR_3__ETC___d3792) ;
  assign requestR_3_BITS_190_TO_180_609_ULT_requestR_3__ETC___d3791 =
	     requestR[190:180] < requestR[126:116] ;
  assign requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF_5_A_ETC___d1042 =
	     requestR[191:160] == 32'hFFFFFFFF && requestR[159] &&
	     (requestR[127:96] != 32'hFFFFFFFF || !requestR[95]) ||
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      requestR[127:96] != 32'hFFFFFFFF ||
	      !requestR[95]) &&
	     IF_NOT_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1040 ;
  assign requestR_3_BIT_158_07_OR_requestR_3_BIT_157_09_ETC___d789 =
	     requestR[158] || requestR[157] || requestR[156] ||
	     requestR[155] ||
	     requestR[154] ||
	     requestR[153] ||
	     requestR[152] ||
	     requestR[151] ||
	     requestR[150] ||
	     requestR[149] ||
	     requestR[148] ||
	     requestR[147] ||
	     requestR[146] ||
	     requestR[145] ||
	     requestR[144] ||
	     requestR[143] ||
	     requestR[142] ||
	     requestR[141] ||
	     requestR[140] ||
	     requestR[139] ||
	     requestR[138] ||
	     requestR[137] ||
	     requestR[136] ||
	     requestR[135] ||
	     requestR[134] ||
	     requestR[133] ||
	     requestR[132] ||
	     requestR[131] ||
	     requestR[130] ||
	     requestR[129] ||
	     requestR[128] ;
  assign requestR_3_BIT_159_6_OR_requestR_3_BIT_158_07__ETC___d811 =
	     (requestR[159] ||
	      requestR_3_BIT_158_07_OR_requestR_3_BIT_157_09_ETC___d789) &&
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d636 &&
	     !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d637 &&
	     IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_T_ETC___d808 ;
  assign requestR_BITS_159_TO_128__q1 = requestR[159:128] ;
  assign res___1__h154853 =
	     (requestR[190:180] == 11'd2047 && requestR[179]) ?
	       64'd512 :
	       64'd256 ;
  assign res___1__h155291 = requestR[191] ? 64'd1 : 64'd128 ;
  assign res___1__h155301 = requestR[191] ? 64'd8 : 64'd16 ;
  assign res___1__h155320 = requestR[191] ? 64'd4 : 64'd32 ;
  assign res___1__h25997 =
	     (sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205[22]) ?
	       64'd512 :
	       64'd256 ;
  assign res___1__h26233 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd1 :
	       64'd128 ;
  assign res___1__h26243 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd8 :
	       64'd16 ;
  assign res___1__h26262 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd4 :
	       64'd32 ;
  assign res__h138561 =
	     { IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3660,
	       x__h97869,
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3624 } ;
  assign res__h142948 =
	     NOT_requestR_3_BITS_190_TO_180_609_EQ_2047_610_ETC___d3799 ?
	       requestR[191:128] :
	       requestR[127:64] ;
  assign res__h147441 =
	     NOT_requestR_3_BITS_190_TO_180_609_EQ_2047_610_ETC___d3799 ?
	       requestR[127:64] :
	       requestR[191:128] ;
  assign res__h150090 =
	     ((requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	      (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	      requestR_3_BITS_190_TO_180_609_EQ_0_620_AND_re_ETC___d3843) ?
	       64'd1 :
	       64'd0 ;
  assign res__h152730 =
	     NOT_requestR_3_BITS_190_TO_180_609_EQ_2047_610_ETC___d3799 ?
	       64'd1 :
	       64'd0 ;
  assign res__h154552 =
	     NOT_requestR_3_BITS_190_TO_180_609_EQ_2047_610_ETC___d3860 ?
	       64'd1 :
	       64'd0 ;
  assign res__h155336 = requestR[191] ? 64'd2 : 64'd64 ;
  assign res__h155490 = { 32'hFFFFFFFF, fpu$server_core_response_get[36:5] } ;
  assign res__h17988 =
	     { 32'hFFFFFFFF,
	       requestR_3_BITS_127_TO_96_2_EQ_0xFFFFFFFF_3_AN_ETC___d38 } ;
  assign res__h18225 =
	     { 32'hFFFFFFFF,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } ;
  assign res__h23375 =
	     NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1103 ?
	       64'd1 :
	       64'd0 ;
  assign res__h24803 =
	     NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1044 ?
	       64'd1 :
	       64'd0 ;
  assign res__h25817 =
	     NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d1119 ?
	       64'd1 :
	       64'd0 ;
  assign res__h26278 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd2 :
	       64'd64 ;
  assign res__h96811 = { 32'hFFFFFFFF, x__h96817 } ;
  assign result__h120687 =
	     { _0b0_CONCAT_NOT_IF_requestR_3_BITS_191_TO_160_4_ETC___d3162[56:1],
	       _0b0_CONCAT_NOT_IF_requestR_3_BITS_191_TO_160_4_ETC___d3162[0] |
	       guard__h120682 } ;
  assign result__h79407 =
	     { _0b0_CONCAT_NOT_requestR_3_BITS_190_TO_180_609__ETC___d2329[56:1],
	       _0b0_CONCAT_NOT_requestR_3_BITS_190_TO_180_609__ETC___d2329[0] |
	       guard__h79402 } ;
  assign sV1_exp__h1204 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[158:151] :
	       8'd255 ;
  assign sV1_sfd__h1205 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[150:128] :
	       23'd4194304 ;
  assign sV2_exp__h1307 =
	     (requestR[127:96] == 32'hFFFFFFFF) ? requestR[94:87] : 8'd255 ;
  assign sV2_sfd__h1308 =
	     (requestR[127:96] == 32'hFFFFFFFF) ?
	       requestR[86:64] :
	       23'd4194304 ;
  assign sfd___3__h13631 =
	     requestR[159:128] <<
	     IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d632 ;
  assign sfd___3__h35509 =
	     sfd__h27508 <<
	     IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d1242 ;
  assign sfd___3__h45150 =
	     sfd__h37398 <<
	     IF_requestR_3_BIT_159_6_THEN_0_ELSE_IF_request_ETC___d1456 ;
  assign sfd___3__h7509 =
	     sfd__h2605 <<
	     IF_IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_ETC___d275 ;
  assign sfd__h118755 =
	     { 1'b0,
	       _theResult___fst_exp__h118737 != 11'd0,
	       _theResult___snd__h118688[56:5] } +
	     54'd1 ;
  assign sfd__h128402 =
	     { 1'b0,
	       _theResult___fst_exp__h128310 != 11'd0,
	       sfdin__h128304[56:5] } +
	     54'd1 ;
  assign sfd__h13658 = { 2'd0, sfd___3__h13631[31:9] } + 25'd1 ;
  assign sfd__h137160 =
	     { 1'b0,
	       _theResult___fst_exp__h137141 != 11'd0,
	       _theResult___snd__h137087[56:5] } +
	     54'd1 ;
  assign sfd__h14197 =
	     { 1'b0, x__h14182[7:0] != 8'd0, sfd___3__h13631[30:8] } + 25'd1 ;
  assign sfd__h2605 = requestR[159] ? -requestR[159:128] : requestR[159:128] ;
  assign sfd__h27508 = { sfd__h2605, 23'd0 } ;
  assign sfd__h35536 = { 2'd0, sfd___3__h35509[54:3] } + 54'd1 ;
  assign sfd__h36279 =
	     { 1'b0, x__h36264[10:0] != 11'd0, sfd___3__h35509[53:2] } +
	     54'd1 ;
  assign sfd__h37398 = { requestR[159:128], 23'd0 } ;
  assign sfd__h45177 = { 2'd0, sfd___3__h45150[54:3] } + 54'd1 ;
  assign sfd__h45919 =
	     { 1'b0, x__h45904[10:0] != 11'd0, sfd___3__h45150[53:2] } +
	     54'd1 ;
  assign sfd__h53440 = { value__h47246, 3'd0 } ;
  assign sfd__h69269 =
	     { 1'b0,
	       _theResult___fst_exp__h69177 != 8'd0,
	       sfdin__h69171[56:34] } +
	     25'd1 ;
  assign sfd__h7536 = { 2'd0, sfd___3__h7509[31:9] } + 25'd1 ;
  assign sfd__h77881 =
	     { 1'b0,
	       _theResult___fst_exp__h77863 != 8'd0,
	       _theResult___snd__h77814[56:34] } +
	     25'd1 ;
  assign sfd__h8079 =
	     { 1'b0, x__h8064[7:0] != 8'd0, sfd___3__h7509[30:8] } + 25'd1 ;
  assign sfd__h87122 =
	     { 1'b0,
	       _theResult___fst_exp__h87030 != 8'd0,
	       sfdin__h87024[56:34] } +
	     25'd1 ;
  assign sfd__h95764 =
	     { 1'b0,
	       _theResult___fst_exp__h95745 != 8'd0,
	       _theResult___snd__h95691[56:34] } +
	     25'd1 ;
  assign sfdin__h128304 =
	     _theResult____h120074[56] ?
	       _theResult___snd__h128321 :
	       _theResult___snd__h128332 ;
  assign sfdin__h69171 =
	     _theResult____h61070[56] ?
	       _theResult___snd__h69188 :
	       _theResult___snd__h69199 ;
  assign sfdin__h87024 =
	     _theResult____h78794[56] ?
	       _theResult___snd__h87041 :
	       _theResult___snd__h87052 ;
  assign value__h15325 = { 1'b0, sV1_exp__h1204 != 8'd0, sV1_sfd__h1205 } ;
  assign value__h47246 =
	     { 1'b0, requestR[190:180] != 11'd0, requestR[179:128] } ;
  assign value__h49279 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	      !requestR[179]) ?
	       _theResult___fst_sfd__h49736 :
	       requestR[179:128] ;
  assign value__h97928 =
	     (sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205 != 23'd0 &&
	      !sV1_sfd__h1205[22]) ?
	       _theResult___fst_sfd__h98183 :
	       sV1_sfd__h1205 ;
  assign x__h120782 = b__h15323 << x__h120815 ;
  assign x__h120815 =
	     12'd57 -
	     _3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3158 ;
  assign x__h138663 =
	     { IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3698,
	       (sV1_exp__h1204 != 8'd255 || sV1_sfd__h1205 == 23'd0) &&
	       (sV1_exp__h1204 != 8'd255 || sV1_sfd__h1205 != 23'd0) &&
	       (sV1_exp__h1204 != 8'd0 || sV1_sfd__h1205 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3705,
	       (sV1_exp__h1204 != 8'd255 || sV1_sfd__h1205 == 23'd0) &&
	       (sV1_exp__h1204 != 8'd255 || sV1_sfd__h1205 != 23'd0) &&
	       (sV1_exp__h1204 != 8'd0 || sV1_sfd__h1205 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3719,
	       (sV1_exp__h1204 != 8'd255 || sV1_sfd__h1205 == 23'd0) &&
	       (sV1_exp__h1204 != 8'd255 || sV1_sfd__h1205 != 23'd0) &&
	       (sV1_exp__h1204 != 8'd0 || sV1_sfd__h1205 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3731,
	       (sV1_exp__h1204 != 8'd255 || sV1_sfd__h1205 == 23'd0) &&
	       (sV1_exp__h1204 != 8'd255 || sV1_sfd__h1205 != 23'd0) &&
	       (sV1_exp__h1204 != 8'd0 || sV1_sfd__h1205 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3743 } ;
  assign x__h139530 =
	     requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d3763 ?
	       64'h7FF8000000000000 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179]) ?
		  requestR[127:64] :
		  ((requestR[126:116] == 11'd2047 &&
		    requestR[115:64] != 52'd0 &&
		    !requestR[115]) ?
		     requestR[191:128] :
		     ((requestR[190:180] == 11'd2047 && requestR[179] &&
		       requestR[126:116] == 11'd2047 &&
		       requestR[115]) ?
			64'h7FF8000000000000 :
			((requestR[190:180] == 11'd2047 && requestR[179]) ?
			   requestR[127:64] :
			   IF_requestR_3_BITS_126_TO_116_754_EQ_2047_755__ETC___d3802)))) ;
  assign x__h14182 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d635 +
	     9'd127 ;
  assign x__h143080 =
	     { requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d3808,
	       4'd0 } ;
  assign x__h144023 =
	     requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d3763 ?
	       64'h7FF8000000000000 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179]) ?
		  requestR[127:64] :
		  ((requestR[126:116] == 11'd2047 &&
		    requestR[115:64] != 52'd0 &&
		    !requestR[115]) ?
		     requestR[191:128] :
		     ((requestR[190:180] == 11'd2047 && requestR[179] &&
		       requestR[126:116] == 11'd2047 &&
		       requestR[115]) ?
			64'h7FF8000000000000 :
			((requestR[190:180] == 11'd2047 && requestR[179]) ?
			   requestR[127:64] :
			   ((requestR[126:116] == 11'd2047 && requestR[115]) ?
			      requestR[191:128] :
			      IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_AND_ETC___d3815))))) ;
  assign x__h148412 =
	     requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d3828 ?
	       64'd0 :
	       res__h150090 ;
  assign x__h14848 =
	     { 2'd0,
	       NOT_requestR_3_BITS_159_TO_128_44_EQ_0_45_46_A_ETC___d800,
	       requestR[159:128] != 32'd0 &&
	       (requestR[159] ||
		requestR_3_BIT_158_07_OR_requestR_3_BIT_157_09_ETC___d789) &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d636 &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d637,
	       requestR[159:128] != 32'd0 &&
	       requestR_3_BIT_159_6_OR_requestR_3_BIT_158_07__ETC___d811 } ;
  assign x__h15077 = { {32{x__h15080[31]}}, x__h15080 } ;
  assign x__h15080 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d832 ?
	       32'h7FFFFFFF :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d904 ;
  assign x__h151052 =
	     requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d3828 ?
	       64'd0 :
	       res__h152730 ;
  assign x__h152749 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[126:116] == 11'd2047 && requestR[115:64] != 52'd0,
	       4'd0 } ;
  assign x__h152874 =
	     requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d3828 ?
	       64'd0 :
	       res__h154552 ;
  assign x__h154833 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       res___1__h154853 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] == 52'd0) ?
		  res___1__h155291 :
		  IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_AND_ETC___d3881) ;
  assign x__h155457 =
	     fpu$server_core_response_get[69] ?
	       res__h155490 :
	       fpu$server_core_response_get[68:5] ;
  assign x__h15999 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d845 >>
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d871 |
	     ~(57'h1FFFFFFFFFFFFFF >>
	       NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d871) &
	     {57{IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d845[56]}} ;
  assign x__h16413 =
	     { sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205 != 23'd0 ||
	       sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205 == 23'd0 ||
	       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d915,
	       3'd0,
	       (sV1_exp__h1204 != 8'd255 || sV1_sfd__h1205 == 23'd0) &&
	       (sV1_exp__h1204 != 8'd255 || sV1_sfd__h1205 != 23'd0) &&
	       (sV1_exp__h1204 != 8'd0 || sV1_sfd__h1205 != 23'd0) &&
	       IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_ETC___d926 } ;
  assign x__h16615 = { {32{x__h16618[31]}}, x__h16618 } ;
  assign x__h16618 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d832 ?
	       32'hFFFFFFFF :
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d965 ;
  assign x__h17039 =
	     { sV1_exp__h1204 != 8'd0, sV1_sfd__h1205, 33'd0 } >>
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d934 ;
  assign x__h17117 =
	     { (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d984 :
		 IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d973,
	       3'd0,
	       (sV1_exp__h1204 != 8'd255 || sV1_sfd__h1205 == 23'd0) &&
	       (sV1_exp__h1204 != 8'd255 || sV1_sfd__h1205 != 23'd0) &&
	       NOT_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFF_ETC___d978 } ;
  assign x__h17309 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1006 ?
	       64'hFFFFFFFF7FC00000 :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1052 ;
  assign x__h19349 =
	     { IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1054,
	       4'd0 } ;
  assign x__h19888 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1006 ?
	       64'hFFFFFFFF7FC00000 :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1067 ;
  assign x__h22358 = { 32'hFFFFFFFF, requestR[159:128] } ;
  assign x__h22423 =
	     { {32{requestR_BITS_159_TO_128__q1[31]}},
	       requestR_BITS_159_TO_128__q1 } ;
  assign x__h22505 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1087 ?
	       64'd0 :
	       res__h23375 ;
  assign x__h2333 = { 32'hFFFFFFFF, x__h2340 } ;
  assign x__h2340 =
	     { requestR[127:96] == 32'hFFFFFFFF && requestR[95],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } ;
  assign x__h23933 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1087 ?
	       64'd0 :
	       res__h24803 ;
  assign x__h2414 = { 32'hFFFFFFFF, x__h2421 } ;
  assign x__h2421 =
	     { requestR[127:96] != 32'hFFFFFFFF || !requestR[95],
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } ;
  assign x__h24822 =
	     { sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205 != 23'd0 ||
	       sV2_exp__h1307 == 8'd255 && sV2_sfd__h1308 != 23'd0,
	       4'd0 } ;
  assign x__h2492 = { 32'hFFFFFFFF, x__h2499 } ;
  assign x__h24947 =
	     IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d1087 ?
	       64'd0 :
	       res__h25817 ;
  assign x__h2499 =
	     { (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) !=
	       (requestR[127:96] == 32'hFFFFFFFF && requestR[95]),
	       IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFFFF__ETC___d29 } ;
  assign x__h2584 = { 32'hFFFFFFFF, x__h2590 } ;
  assign x__h2590 =
	     { requestR[159:128] != 32'd0 &&
	       (NOT_IF_requestR_3_BIT_159_6_THEN_NEG_requestR__ETC___d283 ?
		  requestR[159] :
		  IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d345),
	       IF_requestR_3_BITS_159_TO_128_44_EQ_0_45_OR_NO_ETC___d405,
	       (requestR[159:128] == 32'd0 ||
		NOT_IF_requestR_3_BIT_159_6_THEN_NEG_requestR__ETC___d283) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h8592 } ;
  assign x__h25977 =
	     (sV1_exp__h1204 == 8'd255 && sV1_sfd__h1205 != 23'd0) ?
	       res___1__h25997 :
	       IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d1132 ;
  assign x__h27284 = { requestR[127], requestR[190:128] } ;
  assign x__h27350 = { !requestR[127], requestR[190:128] } ;
  assign x__h27418 = { requestR[191] != requestR[127], requestR[190:128] } ;
  assign x__h27493 =
	     { requestR[159:128] != 32'd0 &&
	       IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT__ETC___d1302,
	       (requestR[159:128] == 32'd0) ?
		 11'd0 :
		 _theResult___snd_fst_exp__h37000,
	       IF_requestR_3_BITS_159_TO_128_44_EQ_0_45_OR_NO_ETC___d1399 } ;
  assign x__h36264 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1245 +
	     12'd1023 ;
  assign x__h37156 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       (!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1246 ||
		!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1248 &&
		!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1250 &&
		_theResult___fst_exp__h36991 == 11'd2047 &&
		_theResult___fst_sfd__h36992 == 52'd0),
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1246 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1248,
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1246 &&
	       !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d1248 &&
	       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1416 } ;
  assign x__h37386 =
	     { 1'd0,
	       (requestR[159:128] == 32'd0) ?
		 11'd0 :
		 _theResult___snd_fst_exp__h46639,
	       IF_requestR_3_BITS_159_TO_128_44_EQ_0_45_OR_NO_ETC___d1581 } ;
  assign x__h45904 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1459 +
	     12'd1023 ;
  assign x__h46769 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       (!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1460 ||
		!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1461 &&
		!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1462 &&
		_theResult___fst_exp__h46630 == 11'd2047 &&
		_theResult___fst_sfd__h46631 == 52'd0),
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1460 &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1461,
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1460 &&
	       !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d1461 &&
	       IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_T_ETC___d1598 } ;
  assign x__h46998 = { {32{x__h47001[31]}}, x__h47001 } ;
  assign x__h47001 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	      !requestR[191] && requestR[190:180] == 11'd2047 &&
	      requestR[179:128] == 52'd0) ?
	       32'h7FFFFFFF :
	       IF_requestR_3_BITS_190_TO_180_609_EQ_2047_610__ETC___d1690 ;
  assign x__h47920 =
	     IF_requestR_3_BIT_191_202_THEN_NEG_0b0_CONCAT__ETC___d1631 >>
	     NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1657 |
	     ~(86'h3FFFFFFFFFFFFFFFFFFFFF >>
	       NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1657) &
	     {86{IF_requestR_3_BIT_191_202_THEN_NEG_0b0_CONCAT__ETC___d1631[85]}} ;
  assign x__h48317 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	       NOT_requestR_3_BITS_190_TO_180_609_EQ_0_620_62_ETC___d1701,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_NEG_SEXT_requestR_3_BITS_190_TO_180_609_MIN_ETC___d1712 } ;
  assign x__h48519 = { {32{x__h48522[31]}}, x__h48522 } ;
  assign x__h48522 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	      !requestR[191] && requestR[190:180] == 11'd2047 &&
	      requestR[179:128] == 52'd0) ?
	       32'hFFFFFFFF :
	       (requestR[191] ?
		  32'd0 :
		  ((requestR[190:180] == 11'd2047 &&
		    requestR[179:128] == 52'd0) ?
		     32'hFFFFFFFF :
		     IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_AND_ETC___d1749)) ;
  assign x__h48943 =
	     { requestR[190:180] != 11'd0, requestR[179:128], 33'd0 } >>
	     NEG_SEXT_requestR_3_BITS_190_TO_180_609_MINUS__ETC___d1720 ;
  assign x__h49021 =
	     { requestR[191] ?
		 requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d1770 :
		 requestR_3_BITS_190_TO_180_609_EQ_2047_610_AND_ETC___d1759,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       NOT_requestR_3_BITS_190_TO_180_609_EQ_0_620_62_ETC___d1764 } ;
  assign x__h49209 =
	     (x__h49219 == 8'd255 &&
	      IF_requestR_3_BITS_190_TO_180_609_EQ_2047_610__ETC___d2809[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       res__h96811 ;
  assign x__h49219 =
	     (requestR[190:180] == 11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h96335 ;
  assign x__h79502 = sfd__h53440 << x__h79535 ;
  assign x__h79535 =
	     12'd57 -
	     _3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_609_ETC___d2325 ;
  assign x__h8064 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_6_T_ETC___d278 +
	     9'd127 ;
  assign x__h8757 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d486,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d489,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_3_BIT_159_6_THEN_NEG_requestR_3_BI_ETC___d498 } ;
  assign x__h8990 =
	     { 33'h1FFFFFFFE,
	       IF_requestR_3_BITS_159_TO_128_44_EQ_0_45_OR_NO_ETC___d722,
	       (requestR[159:128] == 32'd0 ||
		!requestR[159] &&
		NOT_requestR_3_BIT_158_07_08_AND_NOT_requestR__ETC___d598 ||
		!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d636 ||
		_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_6_THEN_ETC___d637) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h14709 } ;
  assign x__h96817 =
	     { (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
		(requestR[190:180] == 11'd2047 ||
		 requestR[190:180] == 11'd0) &&
		requestR[179:128] == 52'd0) ?
		 requestR[191] :
		 IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2851,
	       x__h49219,
	       IF_requestR_3_BITS_190_TO_180_609_EQ_2047_610__ETC___d2809 } ;
  assign x__h96932 =
	     { (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
		 requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179] :
		 (requestR[190:180] != 11'd2047 ||
		  requestR[179:128] != 52'd0) &&
		 (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
		 IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2902,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2913,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2929,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2942,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_3_BITS_190_TO_180_609_EQ_0_620_THE_ETC___d2955 } ;
  assign x__h97859 =
	     (x__h97869 == 11'd2047 &&
	      IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0xFFFFFF_ETC___d3624[51]) ?
	       64'h7FF8000000000000 :
	       res__h138561 ;
  assign x__h97869 =
	     (sV1_exp__h1204 == 8'd255) ?
	       11'd2047 :
	       _theResult___fst_exp__h137934 ;
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1: CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 = 8'd254;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 =
	      requestR[191] ? 8'd255 : 8'd254;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 =
	      requestR[191] ? 8'd254 : 8'd255;
      default: CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 = 8'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      23'd8388607;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      requestR[191] ? 23'd0 : 23'd8388607;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      requestR[191] ? 23'd8388607 : 23'd0;
      default: CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 = 23'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1: CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 = 11'd2046;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		11'd2047 :
		11'd2046;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		11'd2046 :
		11'd2047;
      default: CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 = 11'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      52'hFFFFFFFFFFFFF;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		52'd0 :
		52'hFFFFFFFFFFFFF;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		52'hFFFFFFFFFFFFF :
		52'd0;
      default: CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 = 52'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h0:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50 =
	      requestR[194:192];
      3'h1: IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50 = 3'd4;
      3'h2: IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50 = 3'd3;
      3'h3: IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50 = 3'd2;
      3'h4: IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50 = 3'd1;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x0_1_THEN__ETC___d50 =
		   3'd0;
    endcase
  end
  always@(guard__h7519 or requestR)
  begin
    case (guard__h7519)
      2'b0, 2'b01, 2'b10:
	  CASE_guard519_0b0_requestR_BIT_159_0b1_request_ETC__q8 =
	      requestR[159];
      2'd3:
	  CASE_guard519_0b0_requestR_BIT_159_0b1_request_ETC__q8 =
	      guard__h7519 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or guard__h7519)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q9 =
	      requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q9 =
	      (guard__h7519 == 2'b0) ?
		requestR[159] :
		(guard__h7519 == 2'b01 || guard__h7519 == 2'b10 ||
		 guard__h7519 == 2'b11) &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q9 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h8049 or requestR)
  begin
    case (guard__h8049)
      2'b0, 2'b01, 2'b10:
	  CASE_guard049_0b0_requestR_BIT_159_0b1_request_ETC__q10 =
	      requestR[159];
      2'd3:
	  CASE_guard049_0b0_requestR_BIT_159_0b1_request_ETC__q10 =
	      guard__h8049 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or guard__h8049)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11 =
	      requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11 =
	      (guard__h8049 == 2'b0) ?
		requestR[159] :
		(guard__h8049 == 2'b01 || guard__h8049 == 2'b10 ||
		 guard__h8049 == 2'b11) &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h7519 or _theResult___exp__h7935)
  begin
    case (guard__h7519)
      2'b0: CASE_guard519_0b0_0_0b1_theResult___exp935_0b1_ETC__q12 = 8'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard519_0b0_0_0b1_theResult___exp935_0b1_ETC__q12 =
	      _theResult___exp__h7935;
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d367 or
	  guard__h7519 or
	  _theResult___exp__h7935 or
	  CASE_guard519_0b0_0_0b1_theResult___exp935_0b1_ETC__q12)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d370 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d367;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d370 =
	      (guard__h7519 == 2'b0 || requestR[159]) ?
		8'd0 :
		_theResult___exp__h7935;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d370 =
	      CASE_guard519_0b0_0_0b1_theResult___exp935_0b1_ETC__q12;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d370 =
		   8'd0;
    endcase
  end
  always@(guard__h7519 or out_exp__h7938 or _theResult___exp__h7935)
  begin
    case (guard__h7519)
      2'b0, 2'b01:
	  CASE_guard519_0b0_0_0b1_0_0b10_out_exp938_0b11_ETC__q13 = 8'd0;
      2'b10:
	  CASE_guard519_0b0_0_0b1_0_0b10_out_exp938_0b11_ETC__q13 =
	      out_exp__h7938;
      2'b11:
	  CASE_guard519_0b0_0_0b1_0_0b10_out_exp938_0b11_ETC__q13 =
	      _theResult___exp__h7935;
    endcase
  end
  always@(guard__h8049 or x__h8064 or _theResult___exp__h8488)
  begin
    case (guard__h8049)
      2'b0:
	  CASE_guard049_0b0_x064_BITS_7_TO_0_0b1_theResu_ETC__q14 =
	      x__h8064[7:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard049_0b0_x064_BITS_7_TO_0_0b1_theResu_ETC__q14 =
	      _theResult___exp__h8488;
    endcase
  end
  always@(requestR or
	  x__h8064 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d395 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d393 or
	  CASE_guard049_0b0_x064_BITS_7_TO_0_0b1_theResu_ETC__q14)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d399 =
	      x__h8064[7:0];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d399 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d395;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d399 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d393;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d399 =
	      CASE_guard049_0b0_x064_BITS_7_TO_0_0b1_theResu_ETC__q14;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d399 =
		   8'd0;
    endcase
  end
  always@(guard__h8049 or
	  x__h8064 or out_exp__h8491 or _theResult___exp__h8488)
  begin
    case (guard__h8049)
      2'b0, 2'b01:
	  CASE_guard049_0b0_x064_BITS_7_TO_0_0b1_x064_BI_ETC__q15 =
	      x__h8064[7:0];
      2'b10:
	  CASE_guard049_0b0_x064_BITS_7_TO_0_0b1_x064_BI_ETC__q15 =
	      out_exp__h8491;
      2'b11:
	  CASE_guard049_0b0_x064_BITS_7_TO_0_0b1_x064_BI_ETC__q15 =
	      _theResult___exp__h8488;
    endcase
  end
  always@(guard__h7519 or sfd___3__h7509 or _theResult___sfd__h7936)
  begin
    case (guard__h7519)
      2'b0:
	  CASE_guard519_0b0_sfd___3509_BITS_31_TO_9_0b1__ETC__q16 =
	      sfd___3__h7509[31:9];
      2'b01, 2'b10, 2'b11:
	  CASE_guard519_0b0_sfd___3509_BITS_31_TO_9_0b1__ETC__q16 =
	      _theResult___sfd__h7936;
    endcase
  end
  always@(requestR or
	  sfd___3__h7509 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d418 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d416 or
	  CASE_guard519_0b0_sfd___3509_BITS_31_TO_9_0b1__ETC__q16)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d422 =
	      sfd___3__h7509[31:9];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d422 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d418;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d422 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d416;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d422 =
	      CASE_guard519_0b0_sfd___3509_BITS_31_TO_9_0b1__ETC__q16;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d422 =
		   23'd0;
    endcase
  end
  always@(guard__h7519 or
	  sfd___3__h7509 or out_sfd__h7939 or _theResult___sfd__h7936)
  begin
    case (guard__h7519)
      2'b0, 2'b01:
	  CASE_guard519_0b0_sfd___3509_BITS_31_TO_9_0b1__ETC__q17 =
	      sfd___3__h7509[31:9];
      2'b10:
	  CASE_guard519_0b0_sfd___3509_BITS_31_TO_9_0b1__ETC__q17 =
	      out_sfd__h7939;
      2'b11:
	  CASE_guard519_0b0_sfd___3509_BITS_31_TO_9_0b1__ETC__q17 =
	      _theResult___sfd__h7936;
    endcase
  end
  always@(guard__h8049 or sfd___3__h7509 or _theResult___sfd__h8489)
  begin
    case (guard__h8049)
      2'b0:
	  CASE_guard049_0b0_sfd___3509_BITS_30_TO_8_0b1__ETC__q18 =
	      sfd___3__h7509[30:8];
      2'b01, 2'b10, 2'b11:
	  CASE_guard049_0b0_sfd___3509_BITS_30_TO_8_0b1__ETC__q18 =
	      _theResult___sfd__h8489;
    endcase
  end
  always@(requestR or
	  sfd___3__h7509 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d436 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d434 or
	  CASE_guard049_0b0_sfd___3509_BITS_30_TO_8_0b1__ETC__q18)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d440 =
	      sfd___3__h7509[30:8];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d440 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d436;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d440 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d434;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d440 =
	      CASE_guard049_0b0_sfd___3509_BITS_30_TO_8_0b1__ETC__q18;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d440 =
		   23'd0;
    endcase
  end
  always@(guard__h8049 or
	  sfd___3__h7509 or out_sfd__h8492 or _theResult___sfd__h8489)
  begin
    case (guard__h8049)
      2'b0, 2'b01:
	  CASE_guard049_0b0_sfd___3509_BITS_30_TO_8_0b1__ETC__q19 =
	      sfd___3__h7509[30:8];
      2'b10:
	  CASE_guard049_0b0_sfd___3509_BITS_30_TO_8_0b1__ETC__q19 =
	      out_sfd__h8492;
      2'b11:
	  CASE_guard049_0b0_sfd___3509_BITS_30_TO_8_0b1__ETC__q19 =
	      _theResult___sfd__h8489;
    endcase
  end
  always@(guard__h13641 or out_exp__h14057 or _theResult___exp__h14054)
  begin
    case (guard__h13641)
      2'b0, 2'b01:
	  CASE_guard3641_0b0_0_0b1_0_0b10_out_exp4057_0b_ETC__q22 = 8'd0;
      2'b10:
	  CASE_guard3641_0b0_0_0b1_0_0b10_out_exp4057_0b_ETC__q22 =
	      out_exp__h14057;
      2'b11:
	  CASE_guard3641_0b0_0_0b1_0_0b10_out_exp4057_0b_ETC__q22 =
	      _theResult___exp__h14054;
    endcase
  end
  always@(guard__h13641 or _theResult___exp__h14054)
  begin
    case (guard__h13641)
      2'b0: CASE_guard3641_0b0_0_0b1_theResult___exp4054_0_ETC__q23 = 8'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard3641_0b0_0_0b1_theResult___exp4054_0_ETC__q23 =
	      _theResult___exp__h14054;
    endcase
  end
  always@(requestR or
	  guard__h13641 or
	  _theResult___exp__h14054 or
	  CASE_guard3641_0b0_0_0b1_theResult___exp4054_0_ETC__q23)
  begin
    case (requestR[194:192])
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard3641_ETC__q24 =
	      (guard__h13641 == 2'b0) ? 8'd0 : _theResult___exp__h14054;
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard3641_ETC__q24 =
	      CASE_guard3641_0b0_0_0b1_theResult___exp4054_0_ETC__q23;
      default: CASE_requestR_BITS_194_TO_192_0x3_IF_guard3641_ETC__q24 = 8'd0;
    endcase
  end
  always@(guard__h14167 or x__h14182 or _theResult___exp__h14606)
  begin
    case (guard__h14167)
      2'b0:
	  CASE_guard4167_0b0_x4182_BITS_7_TO_0_0b1_theRe_ETC__q25 =
	      x__h14182[7:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard4167_0b0_x4182_BITS_7_TO_0_0b1_theRe_ETC__q25 =
	      _theResult___exp__h14606;
    endcase
  end
  always@(requestR or
	  x__h14182 or
	  guard__h14167 or
	  _theResult___exp__h14606 or
	  CASE_guard4167_0b0_x4182_BITS_7_TO_0_0b1_theRe_ETC__q25)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d716 =
	      x__h14182[7:0];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d716 =
	      (guard__h14167 == 2'b0) ?
		x__h14182[7:0] :
		_theResult___exp__h14606;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d716 =
	      CASE_guard4167_0b0_x4182_BITS_7_TO_0_0b1_theRe_ETC__q25;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d716 =
		   8'd0;
    endcase
  end
  always@(guard__h14167 or
	  x__h14182 or out_exp__h14609 or _theResult___exp__h14606)
  begin
    case (guard__h14167)
      2'b0, 2'b01:
	  CASE_guard4167_0b0_x4182_BITS_7_TO_0_0b1_x4182_ETC__q26 =
	      x__h14182[7:0];
      2'b10:
	  CASE_guard4167_0b0_x4182_BITS_7_TO_0_0b1_x4182_ETC__q26 =
	      out_exp__h14609;
      2'b11:
	  CASE_guard4167_0b0_x4182_BITS_7_TO_0_0b1_x4182_ETC__q26 =
	      _theResult___exp__h14606;
    endcase
  end
  always@(guard__h14167 or sfd___3__h13631 or _theResult___sfd__h14607)
  begin
    case (guard__h14167)
      2'b0:
	  CASE_guard4167_0b0_sfd___33631_BITS_30_TO_8_0b_ETC__q27 =
	      sfd___3__h13631[30:8];
      2'b01, 2'b10, 2'b11:
	  CASE_guard4167_0b0_sfd___33631_BITS_30_TO_8_0b_ETC__q27 =
	      _theResult___sfd__h14607;
    endcase
  end
  always@(requestR or
	  sfd___3__h13631 or
	  guard__h14167 or
	  _theResult___sfd__h14607 or
	  CASE_guard4167_0b0_sfd___33631_BITS_30_TO_8_0b_ETC__q27)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d754 =
	      sfd___3__h13631[30:8];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d754 =
	      (guard__h14167 == 2'b0) ?
		sfd___3__h13631[30:8] :
		_theResult___sfd__h14607;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d754 =
	      CASE_guard4167_0b0_sfd___33631_BITS_30_TO_8_0b_ETC__q27;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d754 =
		   23'd0;
    endcase
  end
  always@(guard__h14167 or
	  sfd___3__h13631 or out_sfd__h14610 or _theResult___sfd__h14607)
  begin
    case (guard__h14167)
      2'b0, 2'b01:
	  CASE_guard4167_0b0_sfd___33631_BITS_30_TO_8_0b_ETC__q28 =
	      sfd___3__h13631[30:8];
      2'b10:
	  CASE_guard4167_0b0_sfd___33631_BITS_30_TO_8_0b_ETC__q28 =
	      out_sfd__h14610;
      2'b11:
	  CASE_guard4167_0b0_sfd___33631_BITS_30_TO_8_0b_ETC__q28 =
	      _theResult___sfd__h14607;
    endcase
  end
  always@(guard__h13641 or sfd___3__h13631 or _theResult___sfd__h14055)
  begin
    case (guard__h13641)
      2'b0:
	  CASE_guard3641_0b0_sfd___33631_BITS_31_TO_9_0b_ETC__q29 =
	      sfd___3__h13631[31:9];
      2'b01, 2'b10, 2'b11:
	  CASE_guard3641_0b0_sfd___33631_BITS_31_TO_9_0b_ETC__q29 =
	      _theResult___sfd__h14055;
    endcase
  end
  always@(requestR or
	  sfd___3__h13631 or
	  guard__h13641 or
	  _theResult___sfd__h14055 or
	  CASE_guard3641_0b0_sfd___33631_BITS_31_TO_9_0b_ETC__q29)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d739 =
	      sfd___3__h13631[31:9];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d739 =
	      (guard__h13641 == 2'b0) ?
		sfd___3__h13631[31:9] :
		_theResult___sfd__h14055;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d739 =
	      CASE_guard3641_0b0_sfd___33631_BITS_31_TO_9_0b_ETC__q29;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d739 =
		   23'd0;
    endcase
  end
  always@(guard__h13641 or
	  sfd___3__h13631 or out_sfd__h14058 or _theResult___sfd__h14055)
  begin
    case (guard__h13641)
      2'b0, 2'b01:
	  CASE_guard3641_0b0_sfd___33631_BITS_31_TO_9_0b_ETC__q30 =
	      sfd___3__h13631[31:9];
      2'b10:
	  CASE_guard3641_0b0_sfd___33631_BITS_31_TO_9_0b_ETC__q30 =
	      out_sfd__h14058;
      2'b11:
	  CASE_guard3641_0b0_sfd___33631_BITS_31_TO_9_0b_ETC__q30 =
	      _theResult___sfd__h14055;
    endcase
  end
  always@(guard__h35519 or requestR)
  begin
    case (guard__h35519)
      2'b0, 2'b01, 2'b10:
	  CASE_guard5519_0b0_requestR_BIT_159_0b1_reques_ETC__q35 =
	      requestR[159];
      2'd3:
	  CASE_guard5519_0b0_requestR_BIT_159_0b1_reques_ETC__q35 =
	      guard__h35519 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or guard__h35519)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36 =
	      requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36 =
	      (guard__h35519 == 2'b0) ?
		requestR[159] :
		(guard__h35519 == 2'b01 || guard__h35519 == 2'b10 ||
		 guard__h35519 == 2'b11) &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h36249 or requestR)
  begin
    case (guard__h36249)
      2'b0, 2'b01, 2'b10:
	  CASE_guard6249_0b0_requestR_BIT_159_0b1_reques_ETC__q37 =
	      requestR[159];
      2'd3:
	  CASE_guard6249_0b0_requestR_BIT_159_0b1_reques_ETC__q37 =
	      guard__h36249 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or guard__h36249)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38 =
	      requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38 =
	      (guard__h36249 == 2'b0) ?
		requestR[159] :
		(guard__h36249 == 2'b01 || guard__h36249 == 2'b10 ||
		 guard__h36249 == 2'b11) &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h36249 or x__h36264 or _theResult___exp__h36891)
  begin
    case (guard__h36249)
      2'b0:
	  CASE_guard6249_0b0_x6264_BITS_10_TO_0_0b1_theR_ETC__q39 =
	      x__h36264[10:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard6249_0b0_x6264_BITS_10_TO_0_0b1_theR_ETC__q39 =
	      _theResult___exp__h36891;
    endcase
  end
  always@(requestR or
	  x__h36264 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1350 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1348 or
	  CASE_guard6249_0b0_x6264_BITS_10_TO_0_0b1_theR_ETC__q39)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1354 =
	      x__h36264[10:0];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1354 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1350;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1354 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1348;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1354 =
	      CASE_guard6249_0b0_x6264_BITS_10_TO_0_0b1_theR_ETC__q39;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1354 =
		   11'd0;
    endcase
  end
  always@(guard__h36249 or
	  x__h36264 or out_exp__h36894 or _theResult___exp__h36891)
  begin
    case (guard__h36249)
      2'b0, 2'b01:
	  CASE_guard6249_0b0_x6264_BITS_10_TO_0_0b1_x626_ETC__q40 =
	      x__h36264[10:0];
      2'b10:
	  CASE_guard6249_0b0_x6264_BITS_10_TO_0_0b1_x626_ETC__q40 =
	      out_exp__h36894;
      2'b11:
	  CASE_guard6249_0b0_x6264_BITS_10_TO_0_0b1_x626_ETC__q40 =
	      _theResult___exp__h36891;
    endcase
  end
  always@(guard__h36249 or sfd___3__h35509 or _theResult___sfd__h36892)
  begin
    case (guard__h36249)
      2'b0:
	  CASE_guard6249_0b0_sfd___35509_BITS_53_TO_2_0b_ETC__q41 =
	      sfd___3__h35509[53:2];
      2'b01, 2'b10, 2'b11:
	  CASE_guard6249_0b0_sfd___35509_BITS_53_TO_2_0b_ETC__q41 =
	      _theResult___sfd__h36892;
    endcase
  end
  always@(requestR or
	  sfd___3__h35509 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1391 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1389 or
	  CASE_guard6249_0b0_sfd___35509_BITS_53_TO_2_0b_ETC__q41)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1395 =
	      sfd___3__h35509[53:2];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1395 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1391;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1395 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1389;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1395 =
	      CASE_guard6249_0b0_sfd___35509_BITS_53_TO_2_0b_ETC__q41;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1395 =
		   52'd0;
    endcase
  end
  always@(guard__h36249 or
	  sfd___3__h35509 or out_sfd__h36895 or _theResult___sfd__h36892)
  begin
    case (guard__h36249)
      2'b0, 2'b01:
	  CASE_guard6249_0b0_sfd___35509_BITS_53_TO_2_0b_ETC__q42 =
	      sfd___3__h35509[53:2];
      2'b10:
	  CASE_guard6249_0b0_sfd___35509_BITS_53_TO_2_0b_ETC__q42 =
	      out_sfd__h36895;
      2'b11:
	  CASE_guard6249_0b0_sfd___35509_BITS_53_TO_2_0b_ETC__q42 =
	      _theResult___sfd__h36892;
    endcase
  end
  always@(guard__h35519 or _theResult___exp__h36135)
  begin
    case (guard__h35519)
      2'b0: CASE_guard5519_0b0_0_0b1_theResult___exp6135_0_ETC__q43 = 11'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard5519_0b0_0_0b1_theResult___exp6135_0_ETC__q43 =
	      _theResult___exp__h36135;
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1322 or
	  guard__h35519 or
	  _theResult___exp__h36135 or
	  CASE_guard5519_0b0_0_0b1_theResult___exp6135_0_ETC__q43)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1325 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1322;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1325 =
	      (guard__h35519 == 2'b0 || requestR[159]) ?
		11'd0 :
		_theResult___exp__h36135;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1325 =
	      CASE_guard5519_0b0_0_0b1_theResult___exp6135_0_ETC__q43;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1325 =
		   11'd0;
    endcase
  end
  always@(guard__h35519 or out_exp__h36138 or _theResult___exp__h36135)
  begin
    case (guard__h35519)
      2'b0, 2'b01:
	  CASE_guard5519_0b0_0_0b1_0_0b10_out_exp6138_0b_ETC__q44 = 11'd0;
      2'b10:
	  CASE_guard5519_0b0_0_0b1_0_0b10_out_exp6138_0b_ETC__q44 =
	      out_exp__h36138;
      2'b11:
	  CASE_guard5519_0b0_0_0b1_0_0b10_out_exp6138_0b_ETC__q44 =
	      _theResult___exp__h36135;
    endcase
  end
  always@(guard__h35519 or sfd___3__h35509 or _theResult___sfd__h36136)
  begin
    case (guard__h35519)
      2'b0:
	  CASE_guard5519_0b0_sfd___35509_BITS_54_TO_3_0b_ETC__q45 =
	      sfd___3__h35509[54:3];
      2'b01, 2'b10, 2'b11:
	  CASE_guard5519_0b0_sfd___35509_BITS_54_TO_3_0b_ETC__q45 =
	      _theResult___sfd__h36136;
    endcase
  end
  always@(requestR or
	  sfd___3__h35509 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1373 or
	  IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1371 or
	  CASE_guard5519_0b0_sfd___35509_BITS_54_TO_3_0b_ETC__q45)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1377 =
	      sfd___3__h35509[54:3];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1377 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1373;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1377 =
	      IF_IF_IF_requestR_3_BIT_159_6_THEN_NEG_request_ETC___d1371;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1377 =
	      CASE_guard5519_0b0_sfd___35509_BITS_54_TO_3_0b_ETC__q45;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1377 =
		   52'd0;
    endcase
  end
  always@(guard__h35519 or
	  sfd___3__h35509 or out_sfd__h36139 or _theResult___sfd__h36136)
  begin
    case (guard__h35519)
      2'b0, 2'b01:
	  CASE_guard5519_0b0_sfd___35509_BITS_54_TO_3_0b_ETC__q46 =
	      sfd___3__h35509[54:3];
      2'b10:
	  CASE_guard5519_0b0_sfd___35509_BITS_54_TO_3_0b_ETC__q46 =
	      out_sfd__h36139;
      2'b11:
	  CASE_guard5519_0b0_sfd___35509_BITS_54_TO_3_0b_ETC__q46 =
	      _theResult___sfd__h36136;
    endcase
  end
  always@(guard__h45160 or out_exp__h45779 or _theResult___exp__h45776)
  begin
    case (guard__h45160)
      2'b0, 2'b01:
	  CASE_guard5160_0b0_0_0b1_0_0b10_out_exp5779_0b_ETC__q49 = 11'd0;
      2'b10:
	  CASE_guard5160_0b0_0_0b1_0_0b10_out_exp5779_0b_ETC__q49 =
	      out_exp__h45779;
      2'b11:
	  CASE_guard5160_0b0_0_0b1_0_0b10_out_exp5779_0b_ETC__q49 =
	      _theResult___exp__h45776;
    endcase
  end
  always@(guard__h45160 or _theResult___exp__h45776)
  begin
    case (guard__h45160)
      2'b0: CASE_guard5160_0b0_0_0b1_theResult___exp5776_0_ETC__q50 = 11'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard5160_0b0_0_0b1_theResult___exp5776_0_ETC__q50 =
	      _theResult___exp__h45776;
    endcase
  end
  always@(requestR or
	  guard__h45160 or
	  _theResult___exp__h45776 or
	  CASE_guard5160_0b0_0_0b1_theResult___exp5776_0_ETC__q50)
  begin
    case (requestR[194:192])
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard5160_ETC__q51 =
	      (guard__h45160 == 2'b0) ? 11'd0 : _theResult___exp__h45776;
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard5160_ETC__q51 =
	      CASE_guard5160_0b0_0_0b1_theResult___exp5776_0_ETC__q50;
      default: CASE_requestR_BITS_194_TO_192_0x3_IF_guard5160_ETC__q51 =
		   11'd0;
    endcase
  end
  always@(guard__h45889 or x__h45904 or _theResult___exp__h46531)
  begin
    case (guard__h45889)
      2'b0:
	  CASE_guard5889_0b0_x5904_BITS_10_TO_0_0b1_theR_ETC__q52 =
	      x__h45904[10:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard5889_0b0_x5904_BITS_10_TO_0_0b1_theR_ETC__q52 =
	      _theResult___exp__h46531;
    endcase
  end
  always@(requestR or
	  x__h45904 or
	  guard__h45889 or
	  _theResult___exp__h46531 or
	  CASE_guard5889_0b0_x5904_BITS_10_TO_0_0b1_theR_ETC__q52)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1540 =
	      x__h45904[10:0];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1540 =
	      (guard__h45889 == 2'b0) ?
		x__h45904[10:0] :
		_theResult___exp__h46531;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1540 =
	      CASE_guard5889_0b0_x5904_BITS_10_TO_0_0b1_theR_ETC__q52;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1540 =
		   11'd0;
    endcase
  end
  always@(guard__h45889 or
	  x__h45904 or out_exp__h46534 or _theResult___exp__h46531)
  begin
    case (guard__h45889)
      2'b0, 2'b01:
	  CASE_guard5889_0b0_x5904_BITS_10_TO_0_0b1_x590_ETC__q53 =
	      x__h45904[10:0];
      2'b10:
	  CASE_guard5889_0b0_x5904_BITS_10_TO_0_0b1_x590_ETC__q53 =
	      out_exp__h46534;
      2'b11:
	  CASE_guard5889_0b0_x5904_BITS_10_TO_0_0b1_x590_ETC__q53 =
	      _theResult___exp__h46531;
    endcase
  end
  always@(guard__h45889 or sfd___3__h45150 or _theResult___sfd__h46532)
  begin
    case (guard__h45889)
      2'b0:
	  CASE_guard5889_0b0_sfd___35150_BITS_53_TO_2_0b_ETC__q54 =
	      sfd___3__h45150[53:2];
      2'b01, 2'b10, 2'b11:
	  CASE_guard5889_0b0_sfd___35150_BITS_53_TO_2_0b_ETC__q54 =
	      _theResult___sfd__h46532;
    endcase
  end
  always@(requestR or
	  sfd___3__h45150 or
	  guard__h45889 or
	  _theResult___sfd__h46532 or
	  CASE_guard5889_0b0_sfd___35150_BITS_53_TO_2_0b_ETC__q54)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1577 =
	      sfd___3__h45150[53:2];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1577 =
	      (guard__h45889 == 2'b0) ?
		sfd___3__h45150[53:2] :
		_theResult___sfd__h46532;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1577 =
	      CASE_guard5889_0b0_sfd___35150_BITS_53_TO_2_0b_ETC__q54;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1577 =
		   52'd0;
    endcase
  end
  always@(guard__h45889 or
	  sfd___3__h45150 or out_sfd__h46535 or _theResult___sfd__h46532)
  begin
    case (guard__h45889)
      2'b0, 2'b01:
	  CASE_guard5889_0b0_sfd___35150_BITS_53_TO_2_0b_ETC__q55 =
	      sfd___3__h45150[53:2];
      2'b10:
	  CASE_guard5889_0b0_sfd___35150_BITS_53_TO_2_0b_ETC__q55 =
	      out_sfd__h46535;
      2'b11:
	  CASE_guard5889_0b0_sfd___35150_BITS_53_TO_2_0b_ETC__q55 =
	      _theResult___sfd__h46532;
    endcase
  end
  always@(guard__h45160 or sfd___3__h45150 or _theResult___sfd__h45777)
  begin
    case (guard__h45160)
      2'b0:
	  CASE_guard5160_0b0_sfd___35150_BITS_54_TO_3_0b_ETC__q56 =
	      sfd___3__h45150[54:3];
      2'b01, 2'b10, 2'b11:
	  CASE_guard5160_0b0_sfd___35150_BITS_54_TO_3_0b_ETC__q56 =
	      _theResult___sfd__h45777;
    endcase
  end
  always@(requestR or
	  sfd___3__h45150 or
	  guard__h45160 or
	  _theResult___sfd__h45777 or
	  CASE_guard5160_0b0_sfd___35150_BITS_54_TO_3_0b_ETC__q56)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1562 =
	      sfd___3__h45150[54:3];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1562 =
	      (guard__h45160 == 2'b0) ?
		sfd___3__h45150[54:3] :
		_theResult___sfd__h45777;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1562 =
	      CASE_guard5160_0b0_sfd___35150_BITS_54_TO_3_0b_ETC__q56;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d1562 =
		   52'd0;
    endcase
  end
  always@(guard__h45160 or
	  sfd___3__h45150 or out_sfd__h45780 or _theResult___sfd__h45777)
  begin
    case (guard__h45160)
      2'b0, 2'b01:
	  CASE_guard5160_0b0_sfd___35150_BITS_54_TO_3_0b_ETC__q57 =
	      sfd___3__h45150[54:3];
      2'b10:
	  CASE_guard5160_0b0_sfd___35150_BITS_54_TO_3_0b_ETC__q57 =
	      out_sfd__h45780;
      2'b11:
	  CASE_guard5160_0b0_sfd___35150_BITS_54_TO_3_0b_ETC__q57 =
	      _theResult___sfd__h45777;
    endcase
  end
  always@(guard__h61080 or
	  _theResult___fst_exp__h69177 or _theResult___exp__h69703)
  begin
    case (guard__h61080)
      2'b0:
	  CASE_guard1080_0b0_theResult___fst_exp9177_0b1_ETC__q70 =
	      _theResult___fst_exp__h69177;
      2'b01, 2'b10, 2'b11:
	  CASE_guard1080_0b0_theResult___fst_exp9177_0b1_ETC__q70 =
	      _theResult___exp__h69703;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h69177 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2146 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2144 or
	  CASE_guard1080_0b0_theResult___fst_exp9177_0b1_ETC__q70)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2150 =
	      _theResult___fst_exp__h69177;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2150 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2146;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2150 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2144;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2150 =
	      CASE_guard1080_0b0_theResult___fst_exp9177_0b1_ETC__q70;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2150 =
		   8'd0;
    endcase
  end
  always@(guard__h61080 or
	  _theResult___fst_exp__h69177 or
	  out_exp__h69706 or _theResult___exp__h69703)
  begin
    case (guard__h61080)
      2'b0, 2'b01:
	  CASE_guard1080_0b0_theResult___fst_exp9177_0b1_ETC__q71 =
	      _theResult___fst_exp__h69177;
      2'b10:
	  CASE_guard1080_0b0_theResult___fst_exp9177_0b1_ETC__q71 =
	      out_exp__h69706;
      2'b11:
	  CASE_guard1080_0b0_theResult___fst_exp9177_0b1_ETC__q71 =
	      _theResult___exp__h69703;
    endcase
  end
  always@(guard__h69815 or
	  _theResult___fst_exp__h77863 or _theResult___exp__h78315)
  begin
    case (guard__h69815)
      2'b0:
	  CASE_guard9815_0b0_theResult___fst_exp7863_0b1_ETC__q72 =
	      _theResult___fst_exp__h77863;
      2'b01, 2'b10, 2'b11:
	  CASE_guard9815_0b0_theResult___fst_exp7863_0b1_ETC__q72 =
	      _theResult___exp__h78315;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h77863 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2303 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2301 or
	  CASE_guard9815_0b0_theResult___fst_exp7863_0b1_ETC__q72)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2307 =
	      _theResult___fst_exp__h77863;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2307 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2303;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2307 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2301;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2307 =
	      CASE_guard9815_0b0_theResult___fst_exp7863_0b1_ETC__q72;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2307 =
		   8'd0;
    endcase
  end
  always@(guard__h69815 or
	  _theResult___fst_exp__h77863 or
	  out_exp__h78318 or _theResult___exp__h78315)
  begin
    case (guard__h69815)
      2'b0, 2'b01:
	  CASE_guard9815_0b0_theResult___fst_exp7863_0b1_ETC__q73 =
	      _theResult___fst_exp__h77863;
      2'b10:
	  CASE_guard9815_0b0_theResult___fst_exp7863_0b1_ETC__q73 =
	      out_exp__h78318;
      2'b11:
	  CASE_guard9815_0b0_theResult___fst_exp7863_0b1_ETC__q73 =
	      _theResult___exp__h78315;
    endcase
  end
  always@(guard__h78804 or
	  _theResult___fst_exp__h87030 or _theResult___exp__h87556)
  begin
    case (guard__h78804)
      2'b0:
	  CASE_guard8804_0b0_theResult___fst_exp7030_0b1_ETC__q74 =
	      _theResult___fst_exp__h87030;
      2'b01, 2'b10, 2'b11:
	  CASE_guard8804_0b0_theResult___fst_exp7030_0b1_ETC__q74 =
	      _theResult___exp__h87556;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h87030 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2630 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2628 or
	  CASE_guard8804_0b0_theResult___fst_exp7030_0b1_ETC__q74)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2634 =
	      _theResult___fst_exp__h87030;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2634 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2630;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2634 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2628;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2634 =
	      CASE_guard8804_0b0_theResult___fst_exp7030_0b1_ETC__q74;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2634 =
		   8'd0;
    endcase
  end
  always@(guard__h78804 or
	  _theResult___fst_exp__h87030 or
	  out_exp__h87559 or _theResult___exp__h87556)
  begin
    case (guard__h78804)
      2'b0, 2'b01:
	  CASE_guard8804_0b0_theResult___fst_exp7030_0b1_ETC__q75 =
	      _theResult___fst_exp__h87030;
      2'b10:
	  CASE_guard8804_0b0_theResult___fst_exp7030_0b1_ETC__q75 =
	      out_exp__h87559;
      2'b11:
	  CASE_guard8804_0b0_theResult___fst_exp7030_0b1_ETC__q75 =
	      _theResult___exp__h87556;
    endcase
  end
  always@(guard__h87668 or
	  _theResult___fst_exp__h95745 or _theResult___exp__h96222)
  begin
    case (guard__h87668)
      2'b0:
	  CASE_guard7668_0b0_theResult___fst_exp5745_0b1_ETC__q76 =
	      _theResult___fst_exp__h95745;
      2'b01, 2'b10, 2'b11:
	  CASE_guard7668_0b0_theResult___fst_exp5745_0b1_ETC__q76 =
	      _theResult___exp__h96222;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h95745 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2699 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2697 or
	  CASE_guard7668_0b0_theResult___fst_exp5745_0b1_ETC__q76)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2703 =
	      _theResult___fst_exp__h95745;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2703 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2699;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2703 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2697;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2703 =
	      CASE_guard7668_0b0_theResult___fst_exp5745_0b1_ETC__q76;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2703 =
		   8'd0;
    endcase
  end
  always@(guard__h87668 or
	  _theResult___fst_exp__h95745 or
	  out_exp__h96225 or _theResult___exp__h96222)
  begin
    case (guard__h87668)
      2'b0, 2'b01:
	  CASE_guard7668_0b0_theResult___fst_exp5745_0b1_ETC__q77 =
	      _theResult___fst_exp__h95745;
      2'b10:
	  CASE_guard7668_0b0_theResult___fst_exp5745_0b1_ETC__q77 =
	      out_exp__h96225;
      2'b11:
	  CASE_guard7668_0b0_theResult___fst_exp5745_0b1_ETC__q77 =
	      _theResult___exp__h96222;
    endcase
  end
  always@(guard__h61080 or sfdin__h69171 or _theResult___sfd__h69704)
  begin
    case (guard__h61080)
      2'b0:
	  CASE_guard1080_0b0_sfdin9171_BITS_56_TO_34_0b1_ETC__q78 =
	      sfdin__h69171[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard1080_0b0_sfdin9171_BITS_56_TO_34_0b1_ETC__q78 =
	      _theResult___sfd__h69704;
    endcase
  end
  always@(requestR or
	  sfdin__h69171 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2733 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2731 or
	  CASE_guard1080_0b0_sfdin9171_BITS_56_TO_34_0b1_ETC__q78)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2737 =
	      sfdin__h69171[56:34];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2737 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2733;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2737 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2731;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2737 =
	      CASE_guard1080_0b0_sfdin9171_BITS_56_TO_34_0b1_ETC__q78;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2737 =
		   23'd0;
    endcase
  end
  always@(guard__h61080 or
	  sfdin__h69171 or out_sfd__h69707 or _theResult___sfd__h69704)
  begin
    case (guard__h61080)
      2'b0, 2'b01:
	  CASE_guard1080_0b0_sfdin9171_BITS_56_TO_34_0b1_ETC__q79 =
	      sfdin__h69171[56:34];
      2'b10:
	  CASE_guard1080_0b0_sfdin9171_BITS_56_TO_34_0b1_ETC__q79 =
	      out_sfd__h69707;
      2'b11:
	  CASE_guard1080_0b0_sfdin9171_BITS_56_TO_34_0b1_ETC__q79 =
	      _theResult___sfd__h69704;
    endcase
  end
  always@(guard__h69815 or
	  _theResult___snd__h77814 or _theResult___sfd__h78316)
  begin
    case (guard__h69815)
      2'b0:
	  CASE_guard9815_0b0_theResult___snd7814_BITS_56_ETC__q80 =
	      _theResult___snd__h77814[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard9815_0b0_theResult___snd7814_BITS_56_ETC__q80 =
	      _theResult___sfd__h78316;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h77814 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2752 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2750 or
	  CASE_guard9815_0b0_theResult___snd7814_BITS_56_ETC__q80)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2756 =
	      _theResult___snd__h77814[56:34];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2756 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2752;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2756 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2750;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2756 =
	      CASE_guard9815_0b0_theResult___snd7814_BITS_56_ETC__q80;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2756 =
		   23'd0;
    endcase
  end
  always@(guard__h69815 or
	  _theResult___snd__h77814 or
	  out_sfd__h78319 or _theResult___sfd__h78316)
  begin
    case (guard__h69815)
      2'b0, 2'b01:
	  CASE_guard9815_0b0_theResult___snd7814_BITS_56_ETC__q81 =
	      _theResult___snd__h77814[56:34];
      2'b10:
	  CASE_guard9815_0b0_theResult___snd7814_BITS_56_ETC__q81 =
	      out_sfd__h78319;
      2'b11:
	  CASE_guard9815_0b0_theResult___snd7814_BITS_56_ETC__q81 =
	      _theResult___sfd__h78316;
    endcase
  end
  always@(guard__h78804 or sfdin__h87024 or _theResult___sfd__h87557)
  begin
    case (guard__h78804)
      2'b0:
	  CASE_guard8804_0b0_sfdin7024_BITS_56_TO_34_0b1_ETC__q82 =
	      sfdin__h87024[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard8804_0b0_sfdin7024_BITS_56_TO_34_0b1_ETC__q82 =
	      _theResult___sfd__h87557;
    endcase
  end
  always@(requestR or
	  sfdin__h87024 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2779 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2777 or
	  CASE_guard8804_0b0_sfdin7024_BITS_56_TO_34_0b1_ETC__q82)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2783 =
	      sfdin__h87024[56:34];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2783 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2779;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2783 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2777;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2783 =
	      CASE_guard8804_0b0_sfdin7024_BITS_56_TO_34_0b1_ETC__q82;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2783 =
		   23'd0;
    endcase
  end
  always@(guard__h78804 or
	  sfdin__h87024 or out_sfd__h87560 or _theResult___sfd__h87557)
  begin
    case (guard__h78804)
      2'b0, 2'b01:
	  CASE_guard8804_0b0_sfdin7024_BITS_56_TO_34_0b1_ETC__q83 =
	      sfdin__h87024[56:34];
      2'b10:
	  CASE_guard8804_0b0_sfdin7024_BITS_56_TO_34_0b1_ETC__q83 =
	      out_sfd__h87560;
      2'b11:
	  CASE_guard8804_0b0_sfdin7024_BITS_56_TO_34_0b1_ETC__q83 =
	      _theResult___sfd__h87557;
    endcase
  end
  always@(guard__h87668 or
	  _theResult___snd__h95691 or _theResult___sfd__h96223)
  begin
    case (guard__h87668)
      2'b0:
	  CASE_guard7668_0b0_theResult___snd5691_BITS_56_ETC__q84 =
	      _theResult___snd__h95691[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard7668_0b0_theResult___snd5691_BITS_56_ETC__q84 =
	      _theResult___sfd__h96223;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h95691 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2798 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2796 or
	  CASE_guard7668_0b0_theResult___snd5691_BITS_56_ETC__q84)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2802 =
	      _theResult___snd__h95691[56:34];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2802 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2798;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2802 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_609_EQ_0_6_ETC___d2796;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2802 =
	      CASE_guard7668_0b0_theResult___snd5691_BITS_56_ETC__q84;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d2802 =
		   23'd0;
    endcase
  end
  always@(guard__h87668 or
	  _theResult___snd__h95691 or
	  out_sfd__h96226 or _theResult___sfd__h96223)
  begin
    case (guard__h87668)
      2'b0, 2'b01:
	  CASE_guard7668_0b0_theResult___snd5691_BITS_56_ETC__q85 =
	      _theResult___snd__h95691[56:34];
      2'b10:
	  CASE_guard7668_0b0_theResult___snd5691_BITS_56_ETC__q85 =
	      out_sfd__h96226;
      2'b11:
	  CASE_guard7668_0b0_theResult___snd5691_BITS_56_ETC__q85 =
	      _theResult___sfd__h96223;
    endcase
  end
  always@(guard__h61080 or requestR)
  begin
    case (guard__h61080)
      2'b0, 2'b01, 2'b10:
	  CASE_guard1080_0b0_requestR_BIT_191_0b1_reques_ETC__q86 =
	      requestR[191];
      2'd3:
	  CASE_guard1080_0b0_requestR_BIT_191_0b1_reques_ETC__q86 =
	      guard__h61080 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or guard__h61080)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87 =
	      requestR[191];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87 =
	      (guard__h61080 == 2'b0) ?
		requestR[191] :
		(guard__h61080 == 2'b01 || guard__h61080 == 2'b10 ||
		 guard__h61080 == 2'b11) &&
		requestR[191];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h69815 or requestR)
  begin
    case (guard__h69815)
      2'b0, 2'b01, 2'b10:
	  CASE_guard9815_0b0_requestR_BIT_191_0b1_reques_ETC__q88 =
	      requestR[191];
      2'd3:
	  CASE_guard9815_0b0_requestR_BIT_191_0b1_reques_ETC__q88 =
	      guard__h69815 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or guard__h69815)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89 =
	      requestR[191];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89 =
	      (guard__h69815 == 2'b0) ?
		requestR[191] :
		(guard__h69815 == 2'b01 || guard__h69815 == 2'b10 ||
		 guard__h69815 == 2'b11) &&
		requestR[191];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h78804 or requestR)
  begin
    case (guard__h78804)
      2'b0, 2'b01, 2'b10:
	  CASE_guard8804_0b0_requestR_BIT_191_0b1_reques_ETC__q90 =
	      requestR[191];
      2'd3:
	  CASE_guard8804_0b0_requestR_BIT_191_0b1_reques_ETC__q90 =
	      guard__h78804 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or guard__h78804)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91 =
	      requestR[191];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91 =
	      (guard__h78804 == 2'b0) ?
		requestR[191] :
		(guard__h78804 == 2'b01 || guard__h78804 == 2'b10 ||
		 guard__h78804 == 2'b11) &&
		requestR[191];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h87668 or requestR)
  begin
    case (guard__h87668)
      2'b0, 2'b01, 2'b10:
	  CASE_guard7668_0b0_requestR_BIT_191_0b1_reques_ETC__q92 =
	      requestR[191];
      2'd3:
	  CASE_guard7668_0b0_requestR_BIT_191_0b1_reques_ETC__q92 =
	      guard__h87668 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or guard__h87668)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93 =
	      requestR[191];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93 =
	      (guard__h87668 == 2'b0) ?
		requestR[191] :
		(guard__h87668 == 2'b01 || guard__h87668 == 2'b10 ||
		 guard__h87668 == 2'b11) &&
		requestR[191];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h110776 or
	  _theResult___fst_exp__h118737 or _theResult___exp__h119392)
  begin
    case (guard__h110776)
      2'b0:
	  CASE_guard10776_0b0_theResult___fst_exp18737_0_ETC__q102 =
	      _theResult___fst_exp__h118737;
      2'b01, 2'b10, 2'b11:
	  CASE_guard10776_0b0_theResult___fst_exp18737_0_ETC__q102 =
	      _theResult___exp__h119392;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h118737 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3140 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3138 or
	  CASE_guard10776_0b0_theResult___fst_exp18737_0_ETC__q102)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3144 =
	      _theResult___fst_exp__h118737;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3144 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3140;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3144 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3138;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3144 =
	      CASE_guard10776_0b0_theResult___fst_exp18737_0_ETC__q102;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3144 =
		   11'd0;
    endcase
  end
  always@(guard__h110776 or
	  _theResult___fst_exp__h118737 or
	  out_exp__h119395 or _theResult___exp__h119392)
  begin
    case (guard__h110776)
      2'b0, 2'b01:
	  CASE_guard10776_0b0_theResult___fst_exp18737_0_ETC__q103 =
	      _theResult___fst_exp__h118737;
      2'b10:
	  CASE_guard10776_0b0_theResult___fst_exp18737_0_ETC__q103 =
	      out_exp__h119395;
      2'b11:
	  CASE_guard10776_0b0_theResult___fst_exp18737_0_ETC__q103 =
	      _theResult___exp__h119392;
    endcase
  end
  always@(guard__h120084 or
	  _theResult___fst_exp__h128310 or _theResult___exp__h129039)
  begin
    case (guard__h120084)
      2'b0:
	  CASE_guard20084_0b0_theResult___fst_exp28310_0_ETC__q104 =
	      _theResult___fst_exp__h128310;
      2'b01, 2'b10, 2'b11:
	  CASE_guard20084_0b0_theResult___fst_exp28310_0_ETC__q104 =
	      _theResult___exp__h129039;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h128310 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3465 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3463 or
	  CASE_guard20084_0b0_theResult___fst_exp28310_0_ETC__q104)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3469 =
	      _theResult___fst_exp__h128310;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3469 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3465;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3469 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3463;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3469 =
	      CASE_guard20084_0b0_theResult___fst_exp28310_0_ETC__q104;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3469 =
		   11'd0;
    endcase
  end
  always@(guard__h120084 or
	  _theResult___fst_exp__h128310 or
	  out_exp__h129042 or _theResult___exp__h129039)
  begin
    case (guard__h120084)
      2'b0, 2'b01:
	  CASE_guard20084_0b0_theResult___fst_exp28310_0_ETC__q105 =
	      _theResult___fst_exp__h128310;
      2'b10:
	  CASE_guard20084_0b0_theResult___fst_exp28310_0_ETC__q105 =
	      out_exp__h129042;
      2'b11:
	  CASE_guard20084_0b0_theResult___fst_exp28310_0_ETC__q105 =
	      _theResult___exp__h129039;
    endcase
  end
  always@(guard__h129151 or
	  _theResult___fst_exp__h137141 or _theResult___exp__h137821)
  begin
    case (guard__h129151)
      2'b0:
	  CASE_guard29151_0b0_theResult___fst_exp37141_0_ETC__q106 =
	      _theResult___fst_exp__h137141;
      2'b01, 2'b10, 2'b11:
	  CASE_guard29151_0b0_theResult___fst_exp37141_0_ETC__q106 =
	      _theResult___exp__h137821;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h137141 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3534 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3532 or
	  CASE_guard29151_0b0_theResult___fst_exp37141_0_ETC__q106)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3538 =
	      _theResult___fst_exp__h137141;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3538 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3534;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3538 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3532;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3538 =
	      CASE_guard29151_0b0_theResult___fst_exp37141_0_ETC__q106;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3538 =
		   11'd0;
    endcase
  end
  always@(guard__h129151 or
	  _theResult___fst_exp__h137141 or
	  out_exp__h137824 or _theResult___exp__h137821)
  begin
    case (guard__h129151)
      2'b0, 2'b01:
	  CASE_guard29151_0b0_theResult___fst_exp37141_0_ETC__q107 =
	      _theResult___fst_exp__h137141;
      2'b10:
	  CASE_guard29151_0b0_theResult___fst_exp37141_0_ETC__q107 =
	      out_exp__h137824;
      2'b11:
	  CASE_guard29151_0b0_theResult___fst_exp37141_0_ETC__q107 =
	      _theResult___exp__h137821;
    endcase
  end
  always@(guard__h110776 or requestR)
  begin
    case (guard__h110776)
      2'b0, 2'b01, 2'b10:
	  CASE_guard10776_0b0_requestR_BITS_191_TO_160_E_ETC__q108 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard10776_0b0_requestR_BITS_191_TO_160_E_ETC__q108 =
	      guard__h110776 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(requestR or guard__h110776)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109 =
	      (guard__h110776 == 2'b0) ?
		requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		(guard__h110776 == 2'b01 || guard__h110776 == 2'b10 ||
		 guard__h110776 == 2'b11) &&
		requestR[191:160] == 32'hFFFFFFFF &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109 =
		   requestR[194:192] == 3'h1 &&
		   requestR[191:160] == 32'hFFFFFFFF &&
		   requestR[159];
    endcase
  end
  always@(guard__h120084 or requestR)
  begin
    case (guard__h120084)
      2'b0, 2'b01, 2'b10:
	  CASE_guard20084_0b0_requestR_BITS_191_TO_160_E_ETC__q110 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard20084_0b0_requestR_BITS_191_TO_160_E_ETC__q110 =
	      guard__h120084 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(requestR or guard__h120084)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111 =
	      (guard__h120084 == 2'b0) ?
		requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		(guard__h120084 == 2'b01 || guard__h120084 == 2'b10 ||
		 guard__h120084 == 2'b11) &&
		requestR[191:160] == 32'hFFFFFFFF &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111 =
		   requestR[194:192] == 3'h1 &&
		   requestR[191:160] == 32'hFFFFFFFF &&
		   requestR[159];
    endcase
  end
  always@(guard__h129151 or requestR)
  begin
    case (guard__h129151)
      2'b0, 2'b01, 2'b10:
	  CASE_guard29151_0b0_requestR_BITS_191_TO_160_E_ETC__q112 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard29151_0b0_requestR_BITS_191_TO_160_E_ETC__q112 =
	      guard__h129151 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(requestR or guard__h129151)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113 =
	      (guard__h129151 == 2'b0) ?
		requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		(guard__h129151 == 2'b01 || guard__h129151 == 2'b10 ||
		 guard__h129151 == 2'b11) &&
		requestR[191:160] == 32'hFFFFFFFF &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113 =
		   requestR[194:192] == 3'h1 &&
		   requestR[191:160] == 32'hFFFFFFFF &&
		   requestR[159];
    endcase
  end
  always@(guard__h110776 or
	  _theResult___snd__h118688 or _theResult___sfd__h119393)
  begin
    case (guard__h110776)
      2'b0:
	  CASE_guard10776_0b0_theResult___snd18688_BITS__ETC__q114 =
	      _theResult___snd__h118688[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard10776_0b0_theResult___snd18688_BITS__ETC__q114 =
	      _theResult___sfd__h119393;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h118688 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3567 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3565 or
	  CASE_guard10776_0b0_theResult___snd18688_BITS__ETC__q114)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3571 =
	      _theResult___snd__h118688[56:5];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3571 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3567;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3571 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3565;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3571 =
	      CASE_guard10776_0b0_theResult___snd18688_BITS__ETC__q114;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3571 =
		   52'd0;
    endcase
  end
  always@(guard__h110776 or
	  _theResult___snd__h118688 or
	  out_sfd__h119396 or _theResult___sfd__h119393)
  begin
    case (guard__h110776)
      2'b0, 2'b01:
	  CASE_guard10776_0b0_theResult___snd18688_BITS__ETC__q115 =
	      _theResult___snd__h118688[56:5];
      2'b10:
	  CASE_guard10776_0b0_theResult___snd18688_BITS__ETC__q115 =
	      out_sfd__h119396;
      2'b11:
	  CASE_guard10776_0b0_theResult___snd18688_BITS__ETC__q115 =
	      _theResult___sfd__h119393;
    endcase
  end
  always@(guard__h120084 or sfdin__h128304 or _theResult___sfd__h129040)
  begin
    case (guard__h120084)
      2'b0:
	  CASE_guard20084_0b0_sfdin28304_BITS_56_TO_5_0b_ETC__q116 =
	      sfdin__h128304[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard20084_0b0_sfdin28304_BITS_56_TO_5_0b_ETC__q116 =
	      _theResult___sfd__h129040;
    endcase
  end
  always@(requestR or
	  sfdin__h128304 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3594 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3592 or
	  CASE_guard20084_0b0_sfdin28304_BITS_56_TO_5_0b_ETC__q116)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3598 =
	      sfdin__h128304[56:5];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3598 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3594;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3598 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3592;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3598 =
	      CASE_guard20084_0b0_sfdin28304_BITS_56_TO_5_0b_ETC__q116;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3598 =
		   52'd0;
    endcase
  end
  always@(guard__h120084 or
	  sfdin__h128304 or out_sfd__h129043 or _theResult___sfd__h129040)
  begin
    case (guard__h120084)
      2'b0, 2'b01:
	  CASE_guard20084_0b0_sfdin28304_BITS_56_TO_5_0b_ETC__q117 =
	      sfdin__h128304[56:5];
      2'b10:
	  CASE_guard20084_0b0_sfdin28304_BITS_56_TO_5_0b_ETC__q117 =
	      out_sfd__h129043;
      2'b11:
	  CASE_guard20084_0b0_sfdin28304_BITS_56_TO_5_0b_ETC__q117 =
	      _theResult___sfd__h129040;
    endcase
  end
  always@(guard__h129151 or
	  _theResult___snd__h137087 or _theResult___sfd__h137822)
  begin
    case (guard__h129151)
      2'b0:
	  CASE_guard29151_0b0_theResult___snd37087_BITS__ETC__q118 =
	      _theResult___snd__h137087[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard29151_0b0_theResult___snd37087_BITS__ETC__q118 =
	      _theResult___sfd__h137822;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h137087 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3613 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3611 or
	  CASE_guard29151_0b0_theResult___snd37087_BITS__ETC__q118)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3617 =
	      _theResult___snd__h137087[56:5];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3617 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3613;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3617 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_4_EQ_0x_ETC___d3611;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3617 =
	      CASE_guard29151_0b0_theResult___snd37087_BITS__ETC__q118;
      default: IF_requestR_3_BITS_194_TO_192_0_EQ_0x4_5_THEN__ETC___d3617 =
		   52'd0;
    endcase
  end
  always@(guard__h129151 or
	  _theResult___snd__h137087 or
	  out_sfd__h137825 or _theResult___sfd__h137822)
  begin
    case (guard__h129151)
      2'b0, 2'b01:
	  CASE_guard29151_0b0_theResult___snd37087_BITS__ETC__q119 =
	      _theResult___snd__h137087[56:5];
      2'b10:
	  CASE_guard29151_0b0_theResult___snd37087_BITS__ETC__q119 =
	      out_sfd__h137825;
      2'b11:
	  CASE_guard29151_0b0_theResult___snd37087_BITS__ETC__q119 =
	      _theResult___sfd__h137822;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        stateR <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (stateR$EN) stateR <= `BSV_ASSIGNMENT_DELAY stateR$D_IN;
      end
    if (requestR$EN) requestR <= `BSV_ASSIGNMENT_DELAY requestR$D_IN;
    if (resultR$EN) resultR <= `BSV_ASSIGNMENT_DELAY resultR$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    requestR = 215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    resultR = 70'h2AAAAAAAAAAAAAAAAA;
    stateR = 2'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkFBox_Core

