/* Generated by Yosys 0.37+29 (git sha1 3c3788ee2, clang 10.0.0-4ubuntu1 -fPIC -Os) */

module top(clkin_data, in_data, out_data);
  wire _00_;
  reg [17:0] _01_;
  wire [5:0] _02_;
  wire celloutsig_0_0z;
  wire [23:0] celloutsig_0_10z;
  wire celloutsig_0_3z;
  wire [4:0] celloutsig_0_4z;
  wire [5:0] celloutsig_0_5z;
  wire [5:0] celloutsig_0_8z;
  wire [36:0] celloutsig_1_0z;
  wire celloutsig_1_11z;
  wire [2:0] celloutsig_1_13z;
  wire celloutsig_1_15z;
  wire celloutsig_1_16z;
  wire celloutsig_1_18z;
  wire celloutsig_1_19z;
  wire celloutsig_1_2z;
  wire celloutsig_1_3z;
  wire [4:0] celloutsig_1_4z;
  wire [6:0] celloutsig_1_5z;
  wire [3:0] celloutsig_1_6z;
  wire celloutsig_1_7z;
  wire celloutsig_1_8z;
  wire celloutsig_1_9z;
  input [95:0] clkin_data;
  wire [95:0] clkin_data;
  input [191:0] in_data;
  wire [191:0] in_data;
  output [191:0] out_data;
  wire [191:0] out_data;
  assign celloutsig_1_2z = ~in_data[110];
  assign celloutsig_1_15z = ~_00_;
  assign celloutsig_1_16z = ~celloutsig_1_9z;
  assign celloutsig_1_18z = ~celloutsig_1_13z[1];
  assign celloutsig_1_8z = ~((celloutsig_1_7z | celloutsig_1_4z[0]) & (celloutsig_1_3z | celloutsig_1_0z[28]));
  reg [5:0] _08_;
  always_ff @(negedge clkin_data[32], posedge clkin_data[64])
    if (clkin_data[64]) _08_ <= 6'h00;
    else _08_ <= celloutsig_1_0z[28:23];
  assign { _02_[5:1], _00_ } = _08_;
  always_ff @(negedge clkin_data[0], negedge celloutsig_1_19z)
    if (!celloutsig_1_19z) _01_ <= 18'h00000;
    else _01_ <= { in_data[38:24], celloutsig_0_0z, celloutsig_0_0z, celloutsig_0_0z };
  assign celloutsig_1_7z = { in_data[134:127], _02_[5:1], _00_, celloutsig_1_5z } > { celloutsig_1_0z[18:2], celloutsig_1_6z };
  assign celloutsig_1_19z = { in_data[191:175], celloutsig_1_15z, celloutsig_1_2z } < { in_data[100:98], celloutsig_1_5z, celloutsig_1_18z, celloutsig_1_16z, _02_[5:1], _00_, celloutsig_1_2z };
  assign celloutsig_0_10z = { in_data[38:21], celloutsig_0_8z } % { 1'h1, in_data[51:29] };
  assign celloutsig_1_0z = in_data[135:99] % { 1'h1, in_data[169:134] };
  assign celloutsig_1_4z = { in_data[172:169], celloutsig_1_3z } % { 1'h1, in_data[119:116] };
  assign celloutsig_1_5z = { in_data[106:101], celloutsig_1_3z } % { 1'h1, _02_[4:1], _00_, celloutsig_1_2z };
  assign celloutsig_1_6z = celloutsig_1_5z[6:3] % { 1'h1, celloutsig_1_0z[34:32] };
  assign celloutsig_0_3z = in_data[47] & celloutsig_0_0z;
  assign celloutsig_1_11z = celloutsig_1_5z[5] & celloutsig_1_7z;
  assign celloutsig_0_0z = ^ in_data[23:2];
  assign celloutsig_1_9z = ^ { _02_[4:1], celloutsig_1_8z };
  assign celloutsig_0_4z = { _01_[6:3], celloutsig_0_3z } - in_data[36:32];
  assign celloutsig_0_5z = { in_data[60], celloutsig_0_4z } - { in_data[90:89], celloutsig_0_0z, celloutsig_0_0z, celloutsig_0_0z, celloutsig_0_3z };
  assign celloutsig_0_8z = celloutsig_0_5z - in_data[62:57];
  assign celloutsig_1_13z = celloutsig_1_4z[4:2] - { in_data[132], celloutsig_1_2z, celloutsig_1_11z };
  assign celloutsig_1_3z = ~((celloutsig_1_2z & in_data[191]) | celloutsig_1_2z);
  assign _02_[0] = _00_;
  assign { out_data[128], out_data[96], out_data[32], out_data[23:0] } = { celloutsig_1_18z, celloutsig_1_19z, celloutsig_0_0z, celloutsig_0_10z };
endmodule
