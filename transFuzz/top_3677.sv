/* Generated by Yosys 0.37+29 (git sha1 3c3788ee2, clang 10.0.0-4ubuntu1 -fPIC -Os) */

module top(clkin_data, in_data, out_data);
  wire celloutsig_0_0z;
  wire celloutsig_0_11z;
  wire celloutsig_0_12z;
  wire [4:0] celloutsig_0_13z;
  wire [9:0] celloutsig_0_1z;
  wire [12:0] celloutsig_0_2z;
  reg [10:0] celloutsig_0_3z;
  wire [4:0] celloutsig_0_4z;
  wire celloutsig_0_5z;
  wire celloutsig_0_6z;
  wire celloutsig_0_7z;
  wire [26:0] celloutsig_0_8z;
  wire [18:0] celloutsig_0_9z;
  wire [2:0] celloutsig_1_0z;
  wire celloutsig_1_10z;
  wire [5:0] celloutsig_1_12z;
  wire celloutsig_1_18z;
  wire celloutsig_1_19z;
  wire celloutsig_1_1z;
  wire celloutsig_1_2z;
  wire celloutsig_1_3z;
  wire celloutsig_1_4z;
  wire [17:0] celloutsig_1_5z;
  wire celloutsig_1_6z;
  wire celloutsig_1_7z;
  wire [11:0] celloutsig_1_8z;
  wire celloutsig_1_9z;
  input [31:0] clkin_data;
  wire [31:0] clkin_data;
  input [191:0] in_data;
  wire [191:0] in_data;
  output [191:0] out_data;
  wire [191:0] out_data;
  assign celloutsig_0_0z = ~((in_data[33] | in_data[50]) & in_data[21]);
  assign celloutsig_1_2z = ~((celloutsig_1_0z[1] | celloutsig_1_0z[1]) & in_data[102]);
  assign celloutsig_1_3z = ~((celloutsig_1_0z[0] | celloutsig_1_0z[1]) & celloutsig_1_0z[0]);
  assign celloutsig_1_4z = ~((celloutsig_1_1z | celloutsig_1_2z) & in_data[146]);
  assign celloutsig_0_2z = { in_data[12:11], celloutsig_0_1z, celloutsig_0_0z } / { 1'h1, celloutsig_0_1z[2], celloutsig_0_1z, in_data[0] };
  assign celloutsig_0_7z = { celloutsig_0_2z[7:3], celloutsig_0_0z } === { celloutsig_0_0z, celloutsig_0_4z };
  assign celloutsig_1_18z = { celloutsig_1_0z, celloutsig_1_9z } >= { celloutsig_1_7z, celloutsig_1_6z, celloutsig_1_9z, celloutsig_1_10z };
  assign celloutsig_0_5z = { celloutsig_0_2z[6], celloutsig_0_4z, celloutsig_0_0z, celloutsig_0_0z, celloutsig_0_4z } <= in_data[91:79];
  assign celloutsig_0_12z = { celloutsig_0_9z[16:7], celloutsig_0_4z } <= { celloutsig_0_9z[17:4], celloutsig_0_5z };
  assign celloutsig_1_6z = { in_data[180:176], celloutsig_1_3z, celloutsig_1_3z, celloutsig_1_0z, celloutsig_1_2z } <= { celloutsig_1_5z[13:4], celloutsig_1_4z };
  assign celloutsig_1_1z = ! celloutsig_1_0z;
  assign celloutsig_1_9z = { celloutsig_1_5z[8:5], celloutsig_1_7z } < { celloutsig_1_4z, celloutsig_1_4z, celloutsig_1_6z, celloutsig_1_6z, celloutsig_1_2z };
  assign celloutsig_1_8z = { in_data[124], celloutsig_1_3z, celloutsig_1_2z, celloutsig_1_1z, celloutsig_1_4z, celloutsig_1_0z, celloutsig_1_3z, celloutsig_1_0z } % { 1'h1, celloutsig_1_0z[1:0], celloutsig_1_0z, celloutsig_1_6z, celloutsig_1_4z, celloutsig_1_2z, celloutsig_1_6z, celloutsig_1_2z, celloutsig_1_3z };
  assign celloutsig_0_8z = { in_data[83:70], celloutsig_0_0z, celloutsig_0_5z, celloutsig_0_3z } % { 1'h1, celloutsig_0_3z, celloutsig_0_1z, celloutsig_0_4z };
  assign celloutsig_1_5z = { in_data[135:132], celloutsig_1_4z, celloutsig_1_4z, celloutsig_1_4z, celloutsig_1_0z, celloutsig_1_2z, celloutsig_1_1z, celloutsig_1_3z, celloutsig_1_1z, celloutsig_1_2z, celloutsig_1_2z, celloutsig_1_3z, celloutsig_1_1z } % { 1'h1, in_data[159:148], celloutsig_1_1z, celloutsig_1_0z, celloutsig_1_2z };
  assign celloutsig_0_1z = in_data[28:19] * { in_data[34:26], celloutsig_0_0z };
  assign celloutsig_0_13z = celloutsig_0_0z ? celloutsig_0_4z : { celloutsig_0_8z[2], celloutsig_0_5z, celloutsig_0_7z, 1'h0, celloutsig_0_11z };
  assign celloutsig_1_0z = ~ in_data[175:173];
  assign celloutsig_0_11z = | celloutsig_0_8z[15:9];
  assign celloutsig_1_10z = celloutsig_1_8z[8] & in_data[144];
  assign celloutsig_1_19z = ~^ { celloutsig_1_2z, celloutsig_1_12z };
  assign celloutsig_0_4z = in_data[41:37] >>> in_data[95:91];
  assign celloutsig_0_9z = in_data[82:64] >>> { celloutsig_0_1z[9:6], celloutsig_0_7z, celloutsig_0_6z, celloutsig_0_2z };
  assign celloutsig_1_12z = { celloutsig_1_8z[7:5], celloutsig_1_9z, celloutsig_1_6z, celloutsig_1_10z } ^ { celloutsig_1_8z[11], celloutsig_1_3z, celloutsig_1_7z, celloutsig_1_7z, celloutsig_1_10z, celloutsig_1_1z };
  assign celloutsig_0_6z = ~((celloutsig_0_2z[10] & celloutsig_0_0z) | celloutsig_0_0z);
  assign celloutsig_1_7z = ~((celloutsig_1_5z[16] & celloutsig_1_0z[2]) | celloutsig_1_4z);
  always_latch
    if (!clkin_data[0]) celloutsig_0_3z = 11'h000;
    else if (celloutsig_1_19z) celloutsig_0_3z = { in_data[79], celloutsig_0_1z };
  assign { out_data[128], out_data[96], out_data[32], out_data[4:0] } = { celloutsig_1_18z, celloutsig_1_19z, celloutsig_0_12z, celloutsig_0_13z };
endmodule
