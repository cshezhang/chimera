/* Generated by Yosys 0.37+29 (git sha1 3c3788ee2, clang 10.0.0-4ubuntu1 -fPIC -Os) */

module top(clkin_data, in_data, out_data);
  reg [14:0] _00_;
  wire [9:0] celloutsig_0_0z;
  wire celloutsig_0_1z;
  wire [5:0] celloutsig_0_5z;
  wire celloutsig_0_8z;
  wire [7:0] celloutsig_0_9z;
  wire celloutsig_1_0z;
  wire celloutsig_1_10z;
  reg [3:0] celloutsig_1_12z;
  wire celloutsig_1_15z;
  wire celloutsig_1_18z;
  wire celloutsig_1_19z;
  wire celloutsig_1_1z;
  wire [2:0] celloutsig_1_2z;
  reg [18:0] celloutsig_1_3z;
  wire celloutsig_1_5z;
  wire celloutsig_1_6z;
  input [127:0] clkin_data;
  wire [127:0] clkin_data;
  input [191:0] in_data;
  wire [191:0] in_data;
  output [191:0] out_data;
  wire [191:0] out_data;
  assign celloutsig_1_0z = ~(in_data[170] & in_data[188]);
  assign celloutsig_1_18z = ~(celloutsig_1_15z & celloutsig_1_10z);
  always_ff @(posedge celloutsig_1_18z, negedge clkin_data[0])
    if (!clkin_data[0]) _00_ <= 15'h0000;
    else _00_ <= in_data[46:32];
  assign celloutsig_0_9z = celloutsig_0_0z[9:2] / { 1'h1, _00_[13:7] };
  assign celloutsig_0_0z = in_data[74:65] * in_data[24:15];
  assign celloutsig_0_5z = celloutsig_0_0z[7:2] * { in_data[45:41], celloutsig_0_1z };
  assign celloutsig_1_2z = in_data[123:121] * { in_data[120], celloutsig_1_1z, celloutsig_1_1z };
  assign celloutsig_0_1z = celloutsig_0_0z[7] & in_data[4];
  assign celloutsig_1_6z = celloutsig_1_3z[13] & celloutsig_1_1z;
  assign celloutsig_1_10z = celloutsig_1_3z[5] & celloutsig_1_6z;
  assign celloutsig_0_8z = ~((celloutsig_0_0z[6] & _00_[12]) | celloutsig_0_5z[1]);
  assign celloutsig_1_1z = ~((celloutsig_1_0z & celloutsig_1_0z) | celloutsig_1_0z);
  assign celloutsig_1_5z = ~((celloutsig_1_2z[2] & in_data[150]) | celloutsig_1_1z);
  assign celloutsig_1_15z = ~((celloutsig_1_12z[1] & celloutsig_1_5z) | in_data[109]);
  assign celloutsig_1_19z = ~((celloutsig_1_0z & celloutsig_1_12z[0]) | celloutsig_1_5z);
  always_latch
    if (!clkin_data[32]) celloutsig_1_3z = 19'h00000;
    else if (!clkin_data[64]) celloutsig_1_3z = { in_data[190:175], celloutsig_1_2z };
  always_latch
    if (clkin_data[32]) celloutsig_1_12z = 4'h0;
    else if (clkin_data[96]) celloutsig_1_12z = celloutsig_1_3z[14:11];
  assign { out_data[128], out_data[96], out_data[32], out_data[7:0] } = { celloutsig_1_18z, celloutsig_1_19z, celloutsig_0_8z, celloutsig_0_9z };
endmodule
