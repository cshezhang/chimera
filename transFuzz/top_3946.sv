/* Generated by Yosys 0.37+29 (git sha1 3c3788ee2, clang 10.0.0-4ubuntu1 -fPIC -Os) */

module top(clkin_data, in_data, out_data);
  reg [33:0] _00_;
  reg [5:0] _01_;
  wire [27:0] celloutsig_0_0z;
  wire [2:0] celloutsig_0_10z;
  reg [9:0] celloutsig_0_13z;
  wire celloutsig_0_14z;
  wire celloutsig_0_15z;
  wire celloutsig_0_16z;
  wire [17:0] celloutsig_0_1z;
  wire celloutsig_0_3z;
  wire celloutsig_0_5z;
  wire [5:0] celloutsig_0_6z;
  wire [22:0] celloutsig_0_8z;
  wire celloutsig_1_0z;
  wire celloutsig_1_12z;
  wire [12:0] celloutsig_1_13z;
  wire celloutsig_1_16z;
  wire [4:0] celloutsig_1_19z;
  wire celloutsig_1_1z;
  wire [6:0] celloutsig_1_2z;
  wire celloutsig_1_3z;
  wire celloutsig_1_4z;
  wire celloutsig_1_5z;
  wire celloutsig_1_6z;
  wire celloutsig_1_7z;
  wire [31:0] celloutsig_1_8z;
  wire celloutsig_1_9z;
  input [159:0] clkin_data;
  wire [159:0] clkin_data;
  input [191:0] in_data;
  wire [191:0] in_data;
  output [191:0] out_data;
  wire [191:0] out_data;
  reg [14:0] _02_;
  always_ff @(posedge clkin_data[32], posedge clkin_data[96])
    if (clkin_data[96]) _02_ <= 15'h0000;
    else _02_ <= in_data[177:163];
  assign out_data[142:128] = _02_;
  always_ff @(negedge celloutsig_1_19z[0], negedge clkin_data[64])
    if (!clkin_data[64]) _01_ <= 6'h00;
    else _01_ <= celloutsig_0_0z[26:21];
  always_ff @(posedge clkin_data[0], posedge clkin_data[64])
    if (clkin_data[64]) _00_ <= 34'h000000000;
    else _00_ <= { celloutsig_0_0z[27:12], celloutsig_0_1z };
  assign celloutsig_1_1z = in_data[150:145] == in_data[159:154];
  assign celloutsig_1_5z = { celloutsig_1_3z, celloutsig_1_3z, celloutsig_1_4z, celloutsig_1_4z, celloutsig_1_4z } == celloutsig_1_2z[4:0];
  assign celloutsig_1_12z = { celloutsig_1_2z[6], celloutsig_1_3z, celloutsig_1_9z, celloutsig_1_6z, celloutsig_1_4z } >= celloutsig_1_8z[28:24];
  assign celloutsig_0_5z = celloutsig_0_1z[14:6] >= celloutsig_0_0z[24:16];
  assign celloutsig_0_14z = { celloutsig_0_1z[17:12], celloutsig_0_10z } >= { celloutsig_0_0z[27:22], celloutsig_0_10z };
  assign celloutsig_0_15z = { celloutsig_0_0z[10:6], celloutsig_0_13z } >= celloutsig_0_1z[17:3];
  assign celloutsig_0_16z = celloutsig_0_8z[18:12] >= { _01_, celloutsig_0_14z };
  assign celloutsig_1_3z = celloutsig_1_2z[3:1] >= in_data[126:124];
  assign celloutsig_1_6z = { celloutsig_1_4z, celloutsig_1_1z, celloutsig_1_5z, celloutsig_1_4z, celloutsig_1_1z, celloutsig_1_3z, celloutsig_1_5z, celloutsig_1_2z, celloutsig_1_1z } >= { celloutsig_1_2z[5:3], celloutsig_1_0z, celloutsig_1_2z, celloutsig_1_1z, celloutsig_1_5z, celloutsig_1_3z, celloutsig_1_3z };
  assign celloutsig_0_0z = in_data[31:4] % { 1'h1, in_data[89:63] };
  assign celloutsig_1_13z = { celloutsig_1_8z[31:22], celloutsig_1_1z, celloutsig_1_9z, celloutsig_1_9z } % { 1'h1, celloutsig_1_8z[17:7], celloutsig_1_0z };
  assign celloutsig_1_19z = celloutsig_1_13z[6:2] % { 1'h1, out_data[134:133], celloutsig_1_12z, celloutsig_1_16z };
  assign celloutsig_0_6z = celloutsig_0_0z[18:13] % { 1'h1, in_data[81:77] };
  assign celloutsig_0_8z = { _00_[25:11], celloutsig_0_6z, celloutsig_0_3z, celloutsig_0_5z } % { 1'h1, _00_[28:7] };
  assign celloutsig_0_10z = _00_[12:10] % { 1'h1, celloutsig_0_1z[5:4] };
  assign celloutsig_0_1z = celloutsig_0_0z[21:4] % { 1'h1, celloutsig_0_0z[18:2] };
  assign celloutsig_1_2z = in_data[107:101] % { 1'h1, in_data[140:135] };
  assign celloutsig_1_8z = { in_data[181:155], celloutsig_1_3z, celloutsig_1_4z, celloutsig_1_7z, celloutsig_1_4z, celloutsig_1_1z } % { 1'h1, in_data[144:116], celloutsig_1_7z, celloutsig_1_7z };
  always_latch
    if (clkin_data[64]) celloutsig_0_13z = 10'h000;
    else if (!clkin_data[128]) celloutsig_0_13z = { celloutsig_0_1z[10:7], celloutsig_0_6z };
  assign celloutsig_1_16z = ~((in_data[99] & celloutsig_1_9z) | (in_data[176] & celloutsig_1_2z[2]));
  assign celloutsig_0_3z = ~((_00_[5] & celloutsig_0_1z[0]) | (_00_[5] & in_data[64]));
  assign celloutsig_1_0z = ~((in_data[101] & in_data[119]) | (in_data[128] & in_data[113]));
  assign celloutsig_1_4z = ~((celloutsig_1_1z & in_data[135]) | (celloutsig_1_3z & celloutsig_1_2z[6]));
  assign celloutsig_1_7z = ~((celloutsig_1_6z & celloutsig_1_0z) | (celloutsig_1_6z & celloutsig_1_6z));
  assign celloutsig_1_9z = ~((celloutsig_1_2z[4] & celloutsig_1_5z) | (celloutsig_1_0z & celloutsig_1_8z[1]));
  assign { out_data[100:96], out_data[32], out_data[0] } = { celloutsig_1_19z, celloutsig_0_15z, celloutsig_0_16z };
endmodule
