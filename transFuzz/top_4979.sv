/* Generated by Yosys 0.37+29 (git sha1 3c3788ee2, clang 10.0.0-4ubuntu1 -fPIC -Os) */

module top(clkin_data, in_data, out_data);
  wire [10:0] celloutsig_0_0z;
  wire [5:0] celloutsig_0_10z;
  wire [4:0] celloutsig_0_11z;
  wire celloutsig_0_13z;
  wire celloutsig_0_16z;
  reg [2:0] celloutsig_0_17z;
  wire [7:0] celloutsig_0_1z;
  wire [13:0] celloutsig_0_2z;
  wire celloutsig_0_3z;
  wire celloutsig_0_4z;
  wire celloutsig_0_5z;
  wire [2:0] celloutsig_0_6z;
  wire celloutsig_0_7z;
  wire celloutsig_0_8z;
  wire [7:0] celloutsig_0_9z;
  wire celloutsig_1_0z;
  wire [4:0] celloutsig_1_10z;
  wire celloutsig_1_12z;
  wire celloutsig_1_13z;
  wire celloutsig_1_15z;
  wire celloutsig_1_16z;
  wire celloutsig_1_17z;
  wire [2:0] celloutsig_1_18z;
  wire [6:0] celloutsig_1_1z;
  wire [2:0] celloutsig_1_2z;
  wire celloutsig_1_3z;
  wire celloutsig_1_4z;
  wire [9:0] celloutsig_1_5z;
  wire [3:0] celloutsig_1_6z;
  wire [7:0] celloutsig_1_8z;
  wire celloutsig_1_9z;
  input [95:0] clkin_data;
  wire [95:0] clkin_data;
  input [191:0] in_data;
  wire [191:0] in_data;
  output [191:0] out_data;
  wire [191:0] out_data;
  reg [19:0] _00_;
  always_latch
    if (!clkin_data[64]) _00_ = 20'h00000;
    else if (!clkin_data[32]) _00_ = { celloutsig_1_4z, celloutsig_1_18z, celloutsig_1_17z, celloutsig_1_10z, celloutsig_1_12z, celloutsig_1_15z, celloutsig_1_18z, celloutsig_1_4z, celloutsig_1_9z, celloutsig_1_17z, celloutsig_1_13z, celloutsig_1_17z };
  assign { out_data[116:102], out_data[100:96] } = _00_;
  assign celloutsig_0_5z = ~celloutsig_0_3z;
  assign celloutsig_0_8z = ~celloutsig_0_7z;
  assign celloutsig_0_13z = ~in_data[41];
  assign celloutsig_1_4z = celloutsig_1_1z[6] ^ celloutsig_1_0z;
  assign celloutsig_1_0z = ~(in_data[159] ^ in_data[111]);
  assign celloutsig_1_3z = ~(celloutsig_1_0z ^ celloutsig_1_1z[0]);
  assign celloutsig_1_18z = celloutsig_1_8z[3:1] & { celloutsig_1_2z[1:0], celloutsig_1_0z };
  assign celloutsig_0_9z = { celloutsig_0_0z[7:1], celloutsig_0_7z } & { celloutsig_0_6z[0], celloutsig_0_6z, celloutsig_0_3z, celloutsig_0_3z, celloutsig_0_3z, celloutsig_0_4z };
  assign celloutsig_0_1z = celloutsig_0_0z[8:1] & celloutsig_0_0z[7:0];
  assign celloutsig_1_1z = in_data[151:145] & in_data[119:113];
  assign celloutsig_0_7z = { celloutsig_0_0z[7:1], celloutsig_0_3z, celloutsig_0_4z } == { in_data[52:45], celloutsig_0_3z };
  assign celloutsig_1_16z = celloutsig_1_10z >= { in_data[110:107], 1'h0 };
  assign celloutsig_0_3z = ! celloutsig_0_1z[6:1];
  assign celloutsig_0_16z = { in_data[51:48], celloutsig_0_6z, celloutsig_0_3z, celloutsig_0_13z, celloutsig_0_8z } != { celloutsig_0_9z[1], celloutsig_0_9z, celloutsig_0_13z };
  assign celloutsig_1_2z = - celloutsig_1_1z[5:3];
  assign celloutsig_1_13z = | celloutsig_1_2z;
  assign celloutsig_1_9z = celloutsig_1_6z[0] & celloutsig_1_0z;
  assign celloutsig_0_4z = | celloutsig_0_2z[10:5];
  assign celloutsig_1_12z = | { celloutsig_1_10z, celloutsig_1_9z, celloutsig_1_6z, celloutsig_1_5z[4:2] };
  assign celloutsig_1_17z = ~^ { celloutsig_1_5z[4:2], 1'h1, celloutsig_1_5z[0], celloutsig_1_16z };
  assign celloutsig_0_10z = { celloutsig_0_2z[6:2], celloutsig_0_3z } >> { celloutsig_0_9z[2:1], celloutsig_0_8z, celloutsig_0_4z, celloutsig_0_5z, celloutsig_0_7z };
  assign celloutsig_1_10z = { celloutsig_1_5z[6:5], celloutsig_1_2z } >> { in_data[119:116], celloutsig_1_0z };
  assign celloutsig_0_0z = in_data[91:81] - in_data[69:59];
  assign celloutsig_0_6z = celloutsig_0_0z[4:2] - celloutsig_0_0z[5:3];
  assign celloutsig_0_11z = celloutsig_0_10z[5:1] - celloutsig_0_2z[11:7];
  assign celloutsig_1_8z = { celloutsig_1_1z, celloutsig_1_4z } - { celloutsig_1_5z[7:2], 1'h1, celloutsig_1_3z };
  assign celloutsig_1_6z = { celloutsig_1_1z[2:0], celloutsig_1_3z } ^ celloutsig_1_5z[8:5];
  assign celloutsig_0_2z = { in_data[36:31], celloutsig_0_1z } ^ in_data[83:70];
  always_latch
    if (out_data[96]) celloutsig_0_17z = 3'h0;
    else if (clkin_data[0]) celloutsig_0_17z = { celloutsig_0_11z[3:2], celloutsig_0_4z };
  assign celloutsig_1_15z = ~((celloutsig_1_2z[2] & celloutsig_1_0z) | (celloutsig_1_10z[4] & celloutsig_1_6z[2]));
  assign { celloutsig_1_5z[2], celloutsig_1_5z[5:3], celloutsig_1_5z[0], celloutsig_1_5z[9:6] } = { celloutsig_1_3z, celloutsig_1_2z, celloutsig_1_0z, in_data[176:173] } ~^ { celloutsig_1_0z, celloutsig_1_1z[2:0], celloutsig_1_3z, celloutsig_1_1z[6:3] };
  assign celloutsig_1_5z[1] = 1'h1;
  assign { out_data[130:128], out_data[101], out_data[32], out_data[2:0] } = { celloutsig_1_18z, 1'h0, celloutsig_0_16z, celloutsig_0_17z };
endmodule
