/* Generated by Yosys 0.37+29 (git sha1 3c3788ee2, clang 10.0.0-4ubuntu1 -fPIC -Os) */

module top(clkin_data, in_data, out_data);
  wire [6:0] celloutsig_0_0z;
  wire [6:0] celloutsig_0_1z;
  wire [23:0] celloutsig_0_2z;
  wire celloutsig_0_3z;
  reg [12:0] celloutsig_0_4z;
  wire [17:0] celloutsig_1_0z;
  wire [3:0] celloutsig_1_11z;
  wire [11:0] celloutsig_1_16z;
  wire [2:0] celloutsig_1_18z;
  wire celloutsig_1_19z;
  wire [6:0] celloutsig_1_1z;
  wire [3:0] celloutsig_1_2z;
  wire [2:0] celloutsig_1_3z;
  wire [25:0] celloutsig_1_4z;
  wire [24:0] celloutsig_1_5z;
  wire celloutsig_1_6z;
  wire [4:0] celloutsig_1_9z;
  input [31:0] clkin_data;
  wire [31:0] clkin_data;
  input [191:0] in_data;
  wire [191:0] in_data;
  output [191:0] out_data;
  wire [191:0] out_data;
  assign celloutsig_1_19z = ~celloutsig_1_1z[0];
  assign celloutsig_0_3z = celloutsig_0_2z[20] | ~(celloutsig_0_2z[22]);
  assign celloutsig_1_4z = { in_data[186:172], celloutsig_1_2z, celloutsig_1_1z } & { in_data[175], celloutsig_1_1z, celloutsig_1_0z };
  assign celloutsig_1_6z = celloutsig_1_4z[13:3] && celloutsig_1_0z[10:0];
  assign celloutsig_0_0z = in_data[51:45] % { 1'h1, in_data[54:49] };
  assign celloutsig_1_0z = in_data[149:132] % { 1'h1, in_data[129:113] };
  assign celloutsig_1_1z = celloutsig_1_0z[12:6] % { 1'h1, in_data[135:130] };
  assign celloutsig_0_1z = in_data[22:16] % { 1'h1, celloutsig_0_0z[5:0] };
  assign celloutsig_1_3z = celloutsig_1_2z[3:1] * celloutsig_1_1z[5:3];
  assign celloutsig_0_2z = { in_data[31:29], celloutsig_0_0z, celloutsig_0_1z, celloutsig_0_1z } * { in_data[24:15], celloutsig_0_0z, celloutsig_0_0z };
  assign celloutsig_1_9z = celloutsig_1_1z[5:1] <<< celloutsig_1_5z[21:17];
  assign celloutsig_1_5z = { celloutsig_1_4z[13:7], celloutsig_1_0z } - in_data[148:124];
  assign celloutsig_1_16z = { celloutsig_1_3z[2:1], celloutsig_1_9z, celloutsig_1_9z } - { celloutsig_1_0z[5:1], celloutsig_1_3z, celloutsig_1_11z };
  assign celloutsig_1_2z = in_data[189:186] ~^ in_data[161:158];
  assign celloutsig_1_11z = { celloutsig_1_9z[0], celloutsig_1_3z } ^ { celloutsig_1_3z, celloutsig_1_6z };
  assign celloutsig_1_18z = celloutsig_1_0z[4:2] ^ celloutsig_1_16z[10:8];
  always_latch
    if (!clkin_data[0]) celloutsig_0_4z = 13'h0000;
    else if (!celloutsig_1_18z[0]) celloutsig_0_4z = celloutsig_0_2z[16:4];
  assign { out_data[130:128], out_data[96], out_data[32], out_data[12:0] } = { celloutsig_1_18z, celloutsig_1_19z, celloutsig_0_3z, celloutsig_0_4z };
endmodule
