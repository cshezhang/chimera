/* Generated by Yosys 0.37+29 (git sha1 3c3788ee2, clang 10.0.0-4ubuntu1 -fPIC -Os) */

module top(clkin_data, in_data, out_data);
  wire _00_;
  wire [14:0] _01_;
  wire celloutsig_0_0z;
  wire celloutsig_0_10z;
  wire celloutsig_0_11z;
  wire celloutsig_0_1z;
  wire [6:0] celloutsig_0_2z;
  wire [11:0] celloutsig_0_4z;
  reg [7:0] celloutsig_0_6z;
  wire [4:0] celloutsig_1_11z;
  wire celloutsig_1_13z;
  wire celloutsig_1_14z;
  wire [6:0] celloutsig_1_15z;
  wire celloutsig_1_18z;
  wire [2:0] celloutsig_1_19z;
  wire celloutsig_1_1z;
  wire [6:0] celloutsig_1_2z;
  wire celloutsig_1_3z;
  wire celloutsig_1_4z;
  wire [15:0] celloutsig_1_5z;
  wire [12:0] celloutsig_1_6z;
  wire celloutsig_1_7z;
  wire celloutsig_1_8z;
  wire celloutsig_1_9z;
  input [95:0] clkin_data;
  wire [95:0] clkin_data;
  input [191:0] in_data;
  wire [191:0] in_data;
  output [191:0] out_data;
  wire [191:0] out_data;
  assign celloutsig_1_4z = ~(celloutsig_1_1z & celloutsig_1_1z);
  assign celloutsig_1_8z = ~(celloutsig_1_2z[4] & _00_);
  assign celloutsig_0_0z = !(in_data[21] ? in_data[15] : in_data[54]);
  assign celloutsig_1_18z = ~(celloutsig_1_9z | celloutsig_1_8z);
  assign celloutsig_1_14z = ~celloutsig_1_6z[5];
  reg [14:0] _07_;
  always_ff @(posedge clkin_data[64], negedge clkin_data[32])
    if (!clkin_data[32]) _07_ <= 15'h0000;
    else _07_ <= in_data[121:107];
  assign { _01_[14:10], _00_, _01_[8:0] } = _07_;
  assign celloutsig_0_4z = { in_data[77:69], celloutsig_0_1z, celloutsig_0_1z, celloutsig_0_1z } / { 1'h1, in_data[70:68], celloutsig_0_2z, in_data[0] };
  assign celloutsig_0_10z = { celloutsig_0_6z[6:1], celloutsig_0_0z, celloutsig_0_2z } < { celloutsig_0_2z[1:0], celloutsig_0_4z };
  assign celloutsig_0_11z = { celloutsig_0_2z[5], celloutsig_0_10z, celloutsig_0_1z } < in_data[16:14];
  assign celloutsig_0_1z = in_data[64:60] < { in_data[68:66], celloutsig_0_0z, celloutsig_0_0z };
  assign celloutsig_1_3z = { _01_[7:6], celloutsig_1_1z, celloutsig_1_1z } < { in_data[148:146], celloutsig_1_1z };
  assign celloutsig_1_7z = in_data[176:169] < { _01_[14:10], _00_, celloutsig_1_4z, celloutsig_1_3z };
  assign celloutsig_1_13z = { celloutsig_1_5z[4:0], celloutsig_1_1z } < { celloutsig_1_4z, celloutsig_1_11z };
  assign celloutsig_1_5z = in_data[177:162] % { 1'h1, _01_[13:10], _00_, _01_[8:0], celloutsig_1_1z };
  assign celloutsig_1_11z = in_data[153:149] * in_data[150:146];
  assign celloutsig_1_15z = { celloutsig_1_6z[11:6], celloutsig_1_14z } * { celloutsig_1_7z, celloutsig_1_11z, celloutsig_1_13z };
  assign celloutsig_1_19z = celloutsig_1_18z ? celloutsig_1_5z[13:11] : { celloutsig_1_15z[3], celloutsig_1_4z, celloutsig_1_8z };
  assign celloutsig_1_1z = _01_[2] & _01_[6];
  assign celloutsig_1_9z = in_data[173] & celloutsig_1_3z;
  assign celloutsig_1_6z = { in_data[154:143], celloutsig_1_1z } >>> { celloutsig_1_5z[12:1], celloutsig_1_4z };
  assign celloutsig_0_2z = in_data[92:86] ^ { in_data[49:44], celloutsig_0_1z };
  always_latch
    if (celloutsig_1_18z) celloutsig_0_6z = 8'h00;
    else if (!clkin_data[0]) celloutsig_0_6z = { in_data[42:36], celloutsig_0_1z };
  assign { celloutsig_1_2z[1], celloutsig_1_2z[6:2] } = { celloutsig_1_1z, _01_[11:10], _00_, _01_[8:7] } ^ { in_data[114], in_data[119:115] };
  assign _01_[9] = _00_;
  assign celloutsig_1_2z[0] = 1'h0;
  assign { out_data[128], out_data[98:96], out_data[32], out_data[0] } = { celloutsig_1_18z, celloutsig_1_19z, celloutsig_0_10z, celloutsig_0_11z };
endmodule
