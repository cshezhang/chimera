/* Generated by Yosys 0.37+29 (git sha1 3c3788ee2, clang 10.0.0-4ubuntu1 -fPIC -Os) */

module top(clkin_data, in_data, out_data);
  reg [12:0] _00_;
  wire celloutsig_0_0z;
  wire [4:0] celloutsig_0_11z;
  wire celloutsig_0_15z;
  wire celloutsig_0_16z;
  wire [2:0] celloutsig_0_1z;
  wire celloutsig_0_2z;
  wire [5:0] celloutsig_0_3z;
  wire celloutsig_1_0z;
  wire celloutsig_1_18z;
  wire [2:0] celloutsig_1_19z;
  wire celloutsig_1_1z;
  wire celloutsig_1_2z;
  wire [8:0] celloutsig_1_3z;
  wire [3:0] celloutsig_1_4z;
  wire [3:0] celloutsig_1_5z;
  wire [3:0] celloutsig_1_8z;
  input [31:0] clkin_data;
  wire [31:0] clkin_data;
  input [191:0] in_data;
  wire [191:0] in_data;
  output [191:0] out_data;
  wire [191:0] out_data;
  assign celloutsig_0_15z = ~(celloutsig_0_11z[0] & celloutsig_0_3z[2]);
  assign celloutsig_1_18z = celloutsig_1_0z | celloutsig_1_3z[0];
  assign celloutsig_0_16z = ~(celloutsig_0_3z[4] ^ celloutsig_0_11z[4]);
  assign celloutsig_1_0z = ~(in_data[181] ^ in_data[123]);
  assign celloutsig_1_1z = ~(in_data[104] ^ celloutsig_1_0z);
  assign celloutsig_0_2z = ~(in_data[86] ^ celloutsig_0_1z[2]);
  assign celloutsig_1_8z = { in_data[184:182], celloutsig_1_2z } + celloutsig_1_5z;
  always_ff @(negedge clkin_data[0], posedge celloutsig_1_19z[0])
    if (celloutsig_1_19z[0]) _00_ <= 13'h0000;
    else _00_ <= { celloutsig_0_2z, celloutsig_0_3z, celloutsig_0_3z };
  assign celloutsig_0_3z = { in_data[14:10], celloutsig_0_0z } & { in_data[35:32], celloutsig_0_2z, celloutsig_0_2z };
  assign celloutsig_1_5z = { celloutsig_1_4z[3:1], celloutsig_1_0z } & { celloutsig_1_3z[7:5], celloutsig_1_2z };
  assign celloutsig_0_0z = in_data[41:30] <= in_data[68:57];
  assign celloutsig_0_11z = { _00_[6:5], celloutsig_0_1z } * { in_data[40:38], celloutsig_0_0z, celloutsig_0_0z };
  assign celloutsig_1_3z = { in_data[170:164], celloutsig_1_0z, celloutsig_1_0z } * { in_data[156:152], celloutsig_1_0z, celloutsig_1_2z, celloutsig_1_0z, celloutsig_1_1z };
  assign celloutsig_1_4z = celloutsig_1_2z ? celloutsig_1_3z[5:2] : { celloutsig_1_3z[3:1], celloutsig_1_0z };
  assign celloutsig_1_2z = celloutsig_1_1z & in_data[169];
  assign celloutsig_1_19z = celloutsig_1_8z[2:0] <<< celloutsig_1_3z[5:3];
  assign celloutsig_0_1z = in_data[82:80] <<< in_data[64:62];
  assign { out_data[128], out_data[98:96], out_data[32], out_data[0] } = { celloutsig_1_18z, celloutsig_1_19z, celloutsig_0_15z, celloutsig_0_16z };
endmodule
