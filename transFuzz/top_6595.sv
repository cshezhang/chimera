/* Generated by Yosys 0.37+29 (git sha1 3c3788ee2, clang 10.0.0-4ubuntu1 -fPIC -Os) */

module top(clkin_data, in_data, out_data);
  wire [14:0] celloutsig_0_0z;
  wire [2:0] celloutsig_0_10z;
  wire celloutsig_0_12z;
  wire [7:0] celloutsig_0_13z;
  wire celloutsig_0_14z;
  wire celloutsig_0_15z;
  wire celloutsig_0_16z;
  wire [2:0] celloutsig_0_1z;
  wire [2:0] celloutsig_0_2z;
  wire celloutsig_0_3z;
  wire celloutsig_0_4z;
  wire [12:0] celloutsig_0_5z;
  reg [2:0] celloutsig_0_6z;
  wire [2:0] celloutsig_0_8z;
  wire [6:0] celloutsig_1_0z;
  wire [4:0] celloutsig_1_10z;
  wire [2:0] celloutsig_1_11z;
  wire celloutsig_1_12z;
  wire [13:0] celloutsig_1_13z;
  wire [5:0] celloutsig_1_15z;
  wire celloutsig_1_16z;
  wire celloutsig_1_18z;
  wire celloutsig_1_19z;
  wire celloutsig_1_1z;
  wire [5:0] celloutsig_1_2z;
  wire celloutsig_1_3z;
  wire celloutsig_1_4z;
  wire celloutsig_1_5z;
  wire [2:0] celloutsig_1_6z;
  wire celloutsig_1_7z;
  wire [8:0] celloutsig_1_8z;
  wire celloutsig_1_9z;
  input [31:0] clkin_data;
  wire [31:0] clkin_data;
  input [191:0] in_data;
  wire [191:0] in_data;
  output [191:0] out_data;
  wire [191:0] out_data;
  assign celloutsig_0_16z = !(celloutsig_0_13z[5] ? celloutsig_0_8z[0] : in_data[16]);
  assign celloutsig_1_1z = !(in_data[124] ? celloutsig_1_0z[4] : celloutsig_1_0z[0]);
  assign celloutsig_1_5z = !(in_data[185] ? celloutsig_1_0z[6] : in_data[121]);
  assign celloutsig_1_9z = !(celloutsig_1_0z[3] ? celloutsig_1_1z : celloutsig_1_3z);
  assign celloutsig_1_19z = celloutsig_1_7z ^ celloutsig_1_13z[6];
  assign celloutsig_1_7z = celloutsig_1_2z[3] ^ celloutsig_1_6z[0];
  assign celloutsig_1_12z = celloutsig_1_2z[0] ^ celloutsig_1_10z[0];
  assign celloutsig_1_16z = celloutsig_1_4z ^ celloutsig_1_2z[4];
  assign celloutsig_1_11z = { celloutsig_1_8z[5], celloutsig_1_5z, celloutsig_1_4z } + { celloutsig_1_10z[3], celloutsig_1_5z, celloutsig_1_4z };
  assign celloutsig_0_3z = celloutsig_0_0z[9:1] == { celloutsig_0_2z, celloutsig_0_2z, celloutsig_0_1z };
  assign celloutsig_1_3z = { in_data[104:102], celloutsig_1_1z, celloutsig_1_0z } >= { celloutsig_1_2z[4:1], celloutsig_1_1z, celloutsig_1_2z };
  assign celloutsig_0_15z = { celloutsig_0_8z, celloutsig_0_10z, celloutsig_0_14z } <= { celloutsig_0_8z[2], celloutsig_0_14z, celloutsig_0_4z, celloutsig_0_1z, celloutsig_0_4z };
  assign celloutsig_0_12z = ! { celloutsig_0_8z, celloutsig_0_5z, celloutsig_0_3z, celloutsig_0_1z };
  assign celloutsig_1_13z = { in_data[179:173], celloutsig_1_11z, celloutsig_1_11z, celloutsig_1_5z } % { 1'h1, celloutsig_1_2z[4:0], celloutsig_1_7z, celloutsig_1_5z, celloutsig_1_11z, celloutsig_1_6z };
  assign celloutsig_1_0z = in_data[149:143] * in_data[166:160];
  assign celloutsig_1_8z = { celloutsig_1_0z[2:0], celloutsig_1_2z } * { celloutsig_1_6z[1:0], celloutsig_1_0z };
  assign celloutsig_0_0z = - in_data[76:62];
  assign celloutsig_1_6z = - { celloutsig_1_2z[4:3], celloutsig_1_4z };
  assign celloutsig_1_18z = { celloutsig_1_10z[0], celloutsig_1_2z, celloutsig_1_16z, celloutsig_1_12z, celloutsig_1_2z, celloutsig_1_1z, celloutsig_1_6z } !== { celloutsig_1_15z[5:3], celloutsig_1_5z, celloutsig_1_9z, celloutsig_1_0z, celloutsig_1_0z };
  assign celloutsig_0_5z = ~ in_data[14:2];
  assign celloutsig_0_4z = & in_data[71:63];
  assign celloutsig_0_14z = & { celloutsig_0_2z[2], celloutsig_0_0z };
  assign celloutsig_1_4z = celloutsig_1_1z & celloutsig_1_3z;
  assign celloutsig_1_10z = celloutsig_1_0z[6:2] >> { celloutsig_1_8z[3:1], celloutsig_1_5z, celloutsig_1_5z };
  assign celloutsig_0_10z = celloutsig_0_0z[4:2] << celloutsig_0_8z;
  assign celloutsig_1_2z = in_data[118:113] << celloutsig_1_0z[5:0];
  assign celloutsig_1_15z = { celloutsig_1_8z[5:1], celloutsig_1_1z } << { celloutsig_1_0z[3:0], celloutsig_1_1z, celloutsig_1_1z };
  assign celloutsig_0_1z = in_data[90:88] >> celloutsig_0_0z[6:4];
  assign celloutsig_0_2z = in_data[40:38] >> in_data[58:56];
  assign celloutsig_0_8z = celloutsig_0_6z <<< celloutsig_0_1z;
  assign celloutsig_0_13z = { in_data[65], celloutsig_0_10z, celloutsig_0_2z, celloutsig_0_12z } <<< { celloutsig_0_0z[13:9], celloutsig_0_10z };
  always_latch
    if (!clkin_data[0]) celloutsig_0_6z = 3'h0;
    else if (celloutsig_1_19z) celloutsig_0_6z = celloutsig_0_5z[11:9];
  assign { out_data[128], out_data[96], out_data[32], out_data[0] } = { celloutsig_1_18z, celloutsig_1_19z, celloutsig_0_15z, celloutsig_0_16z };
endmodule
