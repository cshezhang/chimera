/* Generated by Yosys 0.37+29 (git sha1 3c3788ee2, clang 10.0.0-4ubuntu1 -fPIC -Os) */

module top(clkin_data, in_data, out_data);
  wire [7:0] celloutsig_0_0z;
  reg [9:0] celloutsig_0_10z;
  wire [6:0] celloutsig_0_12z;
  wire celloutsig_0_13z;
  wire celloutsig_0_15z;
  reg [10:0] celloutsig_0_16z;
  wire celloutsig_0_18z;
  wire celloutsig_0_1z;
  wire [15:0] celloutsig_0_22z;
  wire [6:0] celloutsig_0_23z;
  reg [7:0] celloutsig_0_2z;
  wire celloutsig_0_3z;
  wire celloutsig_0_4z;
  wire celloutsig_0_5z;
  wire celloutsig_0_6z;
  wire [6:0] celloutsig_0_8z;
  wire celloutsig_0_9z;
  wire [10:0] celloutsig_1_0z;
  wire [4:0] celloutsig_1_10z;
  wire [4:0] celloutsig_1_11z;
  wire [24:0] celloutsig_1_12z;
  wire [6:0] celloutsig_1_14z;
  reg [8:0] celloutsig_1_18z;
  wire [6:0] celloutsig_1_19z;
  reg [5:0] celloutsig_1_1z;
  wire celloutsig_1_2z;
  wire celloutsig_1_3z;
  reg [8:0] celloutsig_1_4z;
  wire [5:0] celloutsig_1_5z;
  wire [9:0] celloutsig_1_6z;
  wire [3:0] celloutsig_1_7z;
  wire [2:0] celloutsig_1_8z;
  wire celloutsig_1_9z;
  input [159:0] clkin_data;
  wire [159:0] clkin_data;
  input [191:0] in_data;
  wire [191:0] in_data;
  output [191:0] out_data;
  wire [191:0] out_data;
  assign celloutsig_0_13z = ~(celloutsig_0_1z & celloutsig_0_0z[7]);
  assign celloutsig_0_18z = ~(celloutsig_0_6z & celloutsig_0_12z[6]);
  assign celloutsig_1_2z = ~((in_data[151] | celloutsig_1_1z[1]) & in_data[178]);
  assign celloutsig_0_4z = ~(celloutsig_0_1z ^ celloutsig_0_3z);
  assign celloutsig_0_8z = { in_data[12:7], celloutsig_0_5z } + celloutsig_0_2z[7:1];
  assign celloutsig_0_23z = celloutsig_0_16z[8:2] + celloutsig_0_8z;
  assign celloutsig_1_3z = in_data[125:122] >= in_data[161:158];
  assign celloutsig_0_5z = celloutsig_0_2z[7:5] > celloutsig_0_2z[6:4];
  assign celloutsig_0_15z = celloutsig_0_2z[2] & ~(celloutsig_0_10z[4]);
  assign celloutsig_1_12z = { celloutsig_1_11z[2:0], celloutsig_1_2z, celloutsig_1_6z, celloutsig_1_11z, celloutsig_1_9z, celloutsig_1_10z } % { 1'h1, celloutsig_1_5z[4:2], celloutsig_1_1z, celloutsig_1_9z, celloutsig_1_0z, celloutsig_1_8z };
  assign celloutsig_1_14z = celloutsig_1_12z[18:12] % { 1'h1, celloutsig_1_6z[8:5], celloutsig_1_2z, celloutsig_1_9z };
  assign celloutsig_0_22z = { celloutsig_0_10z[7:2], celloutsig_0_18z, celloutsig_0_18z, celloutsig_0_2z } * { celloutsig_0_10z[5:0], celloutsig_0_13z, celloutsig_0_15z, celloutsig_0_9z, celloutsig_0_12z };
  assign celloutsig_1_8z = celloutsig_1_4z[5:3] * celloutsig_1_5z[2:0];
  assign celloutsig_0_0z = - in_data[52:45];
  assign celloutsig_1_5z = - { celloutsig_1_0z[3:2], celloutsig_1_2z, celloutsig_1_3z, celloutsig_1_2z, celloutsig_1_3z };
  assign celloutsig_1_7z = - in_data[108:105];
  assign celloutsig_0_6z = ^ in_data[83:79];
  assign celloutsig_0_9z = ^ { celloutsig_0_0z[2], celloutsig_0_0z, celloutsig_0_4z };
  assign celloutsig_0_1z = ^ celloutsig_0_0z[3:0];
  assign celloutsig_0_3z = ^ in_data[88:62];
  assign celloutsig_1_19z = celloutsig_1_14z <<< celloutsig_1_12z[9:3];
  assign celloutsig_0_12z = celloutsig_0_8z <<< celloutsig_0_8z;
  assign celloutsig_1_0z = in_data[138:128] <<< in_data[190:180];
  assign celloutsig_1_11z = { celloutsig_1_5z[3:0], celloutsig_1_2z } >>> { celloutsig_1_7z[2], celloutsig_1_7z };
  assign celloutsig_1_10z = in_data[132:128] ^ celloutsig_1_5z[5:1];
  assign celloutsig_1_6z = celloutsig_1_0z[9:0] ^ { in_data[98:96], celloutsig_1_1z, celloutsig_1_2z };
  assign celloutsig_1_9z = ~((celloutsig_1_5z[5] & celloutsig_1_3z) | in_data[109]);
  always_latch
    if (clkin_data[128]) celloutsig_1_18z = 9'h000;
    else if (clkin_data[64]) celloutsig_1_18z = celloutsig_1_4z;
  always_latch
    if (celloutsig_1_19z[0]) celloutsig_0_10z = 10'h000;
    else if (!clkin_data[32]) celloutsig_0_10z = { celloutsig_0_2z[5:1], celloutsig_0_6z, celloutsig_0_9z, celloutsig_0_5z, celloutsig_0_6z, celloutsig_0_9z };
  always_latch
    if (celloutsig_1_19z[0]) celloutsig_0_16z = 11'h000;
    else if (!clkin_data[0]) celloutsig_0_16z = { celloutsig_0_3z, celloutsig_0_10z };
  always_latch
    if (celloutsig_1_19z[0]) celloutsig_0_2z = 8'h00;
    else if (clkin_data[0]) celloutsig_0_2z = celloutsig_0_0z;
  always_latch
    if (!clkin_data[128]) celloutsig_1_1z = 6'h00;
    else if (!clkin_data[64]) celloutsig_1_1z = celloutsig_1_0z[6:1];
  always_latch
    if (!clkin_data[128]) celloutsig_1_4z = 9'h000;
    else if (clkin_data[96]) celloutsig_1_4z = { in_data[142:136], celloutsig_1_3z, celloutsig_1_3z };
  assign { out_data[136:128], out_data[102:96], out_data[47:32], out_data[6:0] } = { celloutsig_1_18z, celloutsig_1_19z, celloutsig_0_22z, celloutsig_0_23z };
endmodule
