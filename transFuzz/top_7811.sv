/* Generated by Yosys 0.37+29 (git sha1 3c3788ee2, clang 10.0.0-4ubuntu1 -fPIC -Os) */

module top(clkin_data, in_data, out_data);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire [9:0] _04_;
  reg [3:0] _05_;
  wire [24:0] _06_;
  wire celloutsig_0_0z;
  wire celloutsig_0_10z;
  wire [15:0] celloutsig_0_12z;
  wire celloutsig_0_13z;
  wire celloutsig_0_14z;
  wire celloutsig_0_19z;
  reg [14:0] celloutsig_0_1z;
  wire celloutsig_0_20z;
  wire [8:0] celloutsig_0_21z;
  wire celloutsig_0_23z;
  wire celloutsig_0_2z;
  wire [3:0] celloutsig_0_34z;
  wire celloutsig_0_4z;
  wire celloutsig_0_5z;
  wire [36:0] celloutsig_0_7z;
  wire [4:0] celloutsig_0_9z;
  wire celloutsig_1_0z;
  reg [2:0] celloutsig_1_10z;
  wire celloutsig_1_11z;
  wire celloutsig_1_12z;
  wire celloutsig_1_14z;
  wire celloutsig_1_19z;
  wire [7:0] celloutsig_1_1z;
  wire [13:0] celloutsig_1_2z;
  wire [4:0] celloutsig_1_3z;
  wire celloutsig_1_4z;
  wire celloutsig_1_5z;
  wire [8:0] celloutsig_1_7z;
  input [223:0] clkin_data;
  wire [223:0] clkin_data;
  input [191:0] in_data;
  wire [191:0] in_data;
  output [191:0] out_data;
  wire [191:0] out_data;
  reg [15:0] _07_;
  always_latch
    if (!out_data[130]) _07_ = 16'h0000;
    else if (clkin_data[0]) _07_ = { celloutsig_0_4z, celloutsig_0_4z, _04_[9], _01_, _02_, _04_[6:5], _03_, _04_[3:0], celloutsig_0_0z, celloutsig_0_0z, celloutsig_0_0z, celloutsig_0_4z };
  assign { celloutsig_0_7z[26], celloutsig_0_7z[14:0] } = _07_;
  reg [13:0] _08_;
  always_ff @(negedge clkin_data[128], negedge out_data[130])
    if (!out_data[130]) _08_ <= 14'h0000;
    else _08_ <= { celloutsig_0_9z, celloutsig_0_9z[4:1], celloutsig_0_12z[0], celloutsig_0_23z, celloutsig_0_4z, celloutsig_0_10z, celloutsig_0_10z };
  assign { _06_[24:20], _06_[8:3], _00_, _06_[1:0] } = _08_;
  assign celloutsig_0_0z = in_data[39] ? in_data[87] : in_data[26];
  assign celloutsig_0_2z = celloutsig_0_0z ? in_data[61] : celloutsig_0_0z;
  assign celloutsig_0_5z = in_data[77] | celloutsig_0_2z;
  assign celloutsig_1_4z = celloutsig_1_3z[2] | celloutsig_1_0z;
  assign celloutsig_1_5z = in_data[139] | celloutsig_1_2z[8];
  assign celloutsig_1_11z = celloutsig_1_5z | celloutsig_1_7z[0];
  assign celloutsig_1_12z = celloutsig_1_0z | celloutsig_1_5z;
  assign celloutsig_1_19z = celloutsig_1_14z | in_data[125];
  assign celloutsig_0_10z = in_data[10] | celloutsig_0_7z[14];
  assign celloutsig_0_19z = celloutsig_0_14z | celloutsig_0_1z[6];
  assign celloutsig_0_20z = _02_ | _03_;
  assign celloutsig_0_4z = ~(celloutsig_0_1z[1] ^ celloutsig_0_0z);
  assign celloutsig_1_0z = ~(in_data[136] ^ in_data[115]);
  assign celloutsig_0_14z = ~(celloutsig_0_4z ^ celloutsig_0_5z);
  assign celloutsig_1_14z = ~(celloutsig_1_10z[0] ^ celloutsig_1_10z[1]);
  assign celloutsig_0_13z = ~(in_data[31] ^ celloutsig_0_9z[1]);
  assign celloutsig_0_23z = ~(celloutsig_0_5z ^ celloutsig_0_13z);
  reg [9:0] _26_;
  always_ff @(posedge clkin_data[160], posedge clkin_data[64])
    if (clkin_data[64]) _26_ <= 10'h000;
    else _26_ <= { celloutsig_0_1z[10:2], celloutsig_0_4z };
  assign { _04_[9], _01_, _02_, _04_[6:5], _03_, _04_[3:0] } = _26_;
  always_ff @(posedge clkin_data[192], posedge clkin_data[96])
    if (clkin_data[96]) _05_ <= 4'h0;
    else _05_ <= celloutsig_1_2z[7:4];
  assign celloutsig_0_34z = ~ celloutsig_0_9z[3:0];
  assign celloutsig_0_21z = ~ { celloutsig_0_7z[7], celloutsig_0_19z, celloutsig_0_20z, celloutsig_0_9z, celloutsig_0_4z };
  assign celloutsig_1_1z = in_data[110:103] ^ { in_data[134:129], celloutsig_1_0z, celloutsig_1_0z };
  assign celloutsig_1_2z = in_data[170:157] ^ { celloutsig_1_1z[6:1], celloutsig_1_1z };
  assign celloutsig_1_3z = celloutsig_1_1z[7:3] ^ celloutsig_1_1z[5:1];
  assign celloutsig_1_7z = { celloutsig_1_3z[2:1], celloutsig_1_3z, celloutsig_1_4z, celloutsig_1_5z } ^ in_data[156:148];
  assign celloutsig_0_9z = celloutsig_0_1z[10:6] ^ in_data[94:90];
  always_latch
    if (!clkin_data[96]) celloutsig_1_10z = 3'h0;
    else if (clkin_data[32]) celloutsig_1_10z = { celloutsig_1_7z[6], celloutsig_1_4z, celloutsig_1_4z };
  always_latch
    if (!out_data[130]) celloutsig_0_1z = 15'h0000;
    else if (!clkin_data[0]) celloutsig_0_1z = in_data[37:23];
  assign { out_data[131:130], out_data[135:132] } = ~ { celloutsig_1_12z, celloutsig_1_11z, _05_ };
  assign celloutsig_0_12z[0] = celloutsig_0_2z ^ celloutsig_0_9z[0];
  assign { out_data[32], out_data[33] } = ~ { celloutsig_0_19z, celloutsig_0_13z };
  assign out_data[3:1] = celloutsig_0_21z[2:0] ^ { _06_[8:7], celloutsig_0_23z };
  assign { _04_[8:7], _04_[4] } = { _01_, _02_, _03_ };
  assign { _06_[19:9], _06_[2] } = { 11'h000, _00_ };
  assign celloutsig_0_12z[15:1] = { 11'h000, celloutsig_0_9z[4:1] };
  assign { celloutsig_0_7z[36:27], celloutsig_0_7z[25:15] } = 21'h000000;
  assign { out_data[129:128], out_data[96], out_data[38:34], out_data[4], out_data[0] } = { 1'h0, out_data[130], celloutsig_1_19z, celloutsig_0_34z[3:1], 2'h3, celloutsig_0_21z[3], 1'h0 };
endmodule
