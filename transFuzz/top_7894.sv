/* Generated by Yosys 0.37+29 (git sha1 3c3788ee2, clang 10.0.0-4ubuntu1 -fPIC -Os) */

module top(clkin_data, in_data, out_data);
  wire _00_;
  wire [2:0] _01_;
  reg [6:0] celloutsig_0_0z;
  wire celloutsig_0_10z;
  wire celloutsig_0_11z;
  wire [10:0] celloutsig_0_12z;
  reg [6:0] celloutsig_0_13z;
  wire [7:0] celloutsig_0_15z;
  wire [3:0] celloutsig_0_16z;
  wire [7:0] celloutsig_0_19z;
  wire celloutsig_0_1z;
  wire celloutsig_0_20z;
  wire celloutsig_0_21z;
  wire celloutsig_0_23z;
  wire [12:0] celloutsig_0_27z;
  wire [4:0] celloutsig_0_2z;
  wire [3:0] celloutsig_0_36z;
  reg [6:0] celloutsig_0_3z;
  wire [19:0] celloutsig_0_4z;
  wire [4:0] celloutsig_0_5z;
  wire [2:0] celloutsig_0_6z;
  wire [4:0] celloutsig_0_7z;
  wire celloutsig_0_8z;
  wire [2:0] celloutsig_0_9z;
  wire celloutsig_1_0z;
  wire celloutsig_1_10z;
  wire celloutsig_1_11z;
  wire celloutsig_1_16z;
  wire celloutsig_1_19z;
  wire [6:0] celloutsig_1_1z;
  wire celloutsig_1_2z;
  wire [6:0] celloutsig_1_4z;
  wire celloutsig_1_6z;
  wire celloutsig_1_7z;
  wire celloutsig_1_8z;
  wire celloutsig_1_9z;
  input [255:0] clkin_data;
  wire [255:0] clkin_data;
  input [191:0] in_data;
  wire [191:0] in_data;
  output [191:0] out_data;
  wire [191:0] out_data;
  assign celloutsig_1_7z = ~celloutsig_1_1z[0];
  assign celloutsig_0_20z = ~celloutsig_0_6z[0];
  assign celloutsig_0_21z = ~celloutsig_0_16z[3];
  assign celloutsig_1_16z = ~((celloutsig_1_0z | celloutsig_1_10z) & _00_);
  assign celloutsig_1_19z = ~((celloutsig_1_16z | out_data[131]) & celloutsig_1_2z);
  assign celloutsig_1_0z = in_data[103] ^ in_data[152];
  assign celloutsig_1_2z = celloutsig_1_1z[2] ^ celloutsig_1_0z;
  assign celloutsig_0_11z = celloutsig_0_7z[0] ^ celloutsig_0_1z;
  assign celloutsig_0_12z = { celloutsig_0_0z[6:1], celloutsig_0_10z, celloutsig_0_6z, celloutsig_0_1z } + { celloutsig_0_2z[4:2], celloutsig_0_8z, celloutsig_0_0z };
  assign celloutsig_0_16z = { celloutsig_0_0z[5], celloutsig_0_6z } + { celloutsig_0_12z[8:6], celloutsig_0_1z };
  reg [4:0] _12_;
  always_ff @(negedge clkin_data[192], posedge clkin_data[64])
    if (clkin_data[64]) _12_ <= 5'h00;
    else _12_ <= celloutsig_0_19z[4:0];
  assign out_data[4:0] = _12_;
  reg [2:0] _13_;
  always_ff @(negedge clkin_data[224], negedge clkin_data[96])
    if (!clkin_data[96]) _13_ <= 3'h0;
    else _13_ <= { celloutsig_1_2z, celloutsig_1_0z, celloutsig_1_0z };
  assign { _00_, _01_[1:0] } = _13_;
  reg [3:0] _14_;
  always_ff @(posedge clkin_data[224], posedge clkin_data[128])
    if (clkin_data[128]) _14_ <= 4'h0;
    else _14_ <= { in_data[173], celloutsig_1_2z, celloutsig_1_9z, celloutsig_1_8z };
  assign out_data[131:128] = _14_;
  assign celloutsig_0_36z = { celloutsig_0_15z[6:5], celloutsig_0_23z, celloutsig_0_21z } / { 1'h1, celloutsig_0_27z[4:2] };
  assign celloutsig_0_6z = celloutsig_0_0z[5:3] / { 1'h1, celloutsig_0_5z[0], celloutsig_0_1z };
  assign celloutsig_0_1z = celloutsig_0_0z[4:0] == in_data[37:33];
  assign celloutsig_1_9z = { celloutsig_1_7z, celloutsig_1_6z, celloutsig_1_7z, celloutsig_1_0z, celloutsig_1_11z, celloutsig_1_8z, _00_, _01_[1:0], celloutsig_1_6z } === { in_data[108:102], celloutsig_1_7z, celloutsig_1_8z, celloutsig_1_2z };
  assign celloutsig_1_6z = in_data[131:116] <= { in_data[172:165], celloutsig_1_0z, _00_, _01_[1:0], celloutsig_1_11z, _00_, _01_[1:0] };
  assign celloutsig_0_15z = { celloutsig_0_13z[5:0], celloutsig_0_11z, celloutsig_0_11z } % { 1'h1, celloutsig_0_5z[2:1], celloutsig_0_5z };
  assign celloutsig_0_2z = in_data[81:77] % { 1'h1, celloutsig_0_0z[5:2] };
  assign celloutsig_0_27z = { celloutsig_0_13z[6:2], celloutsig_0_15z } % { 1'h1, celloutsig_0_8z, celloutsig_0_21z, celloutsig_0_6z, celloutsig_0_0z };
  assign celloutsig_1_4z = - { celloutsig_1_1z[1], celloutsig_1_0z, celloutsig_1_2z, celloutsig_1_0z, _00_, _01_[1:0] };
  assign celloutsig_0_19z = - { celloutsig_0_5z[3:0], celloutsig_0_16z };
  assign celloutsig_1_8z = celloutsig_1_0z & _00_;
  assign celloutsig_0_8z = celloutsig_0_2z[3] & celloutsig_0_1z;
  assign celloutsig_1_11z = ^ { celloutsig_1_4z[4:0], celloutsig_1_4z, celloutsig_1_4z, celloutsig_1_2z };
  assign celloutsig_1_10z = ^ { in_data[127:124], celloutsig_1_9z, celloutsig_1_0z };
  assign celloutsig_0_10z = ^ { in_data[29:22], celloutsig_0_8z, celloutsig_0_1z, celloutsig_0_2z };
  assign celloutsig_0_23z = ^ { celloutsig_0_20z, celloutsig_0_9z, celloutsig_0_1z, celloutsig_0_9z };
  assign celloutsig_0_7z = celloutsig_0_5z << in_data[85:81];
  assign celloutsig_0_9z = in_data[80:78] << celloutsig_0_0z[5:3];
  assign celloutsig_1_1z = { in_data[121:119], celloutsig_1_0z, celloutsig_1_0z, celloutsig_1_0z, celloutsig_1_0z } <<< in_data[120:114];
  assign celloutsig_0_4z = in_data[83:64] <<< { celloutsig_0_3z, celloutsig_0_3z, celloutsig_0_1z, celloutsig_0_2z };
  assign celloutsig_0_5z = in_data[79:75] <<< celloutsig_0_4z[17:13];
  always_latch
    if (!celloutsig_1_19z) celloutsig_0_0z = 7'h00;
    else if (!clkin_data[0]) celloutsig_0_0z = in_data[60:54];
  always_latch
    if (!clkin_data[64]) celloutsig_0_3z = 7'h00;
    else if (clkin_data[0]) celloutsig_0_3z = in_data[62:56];
  always_latch
    if (!clkin_data[64]) celloutsig_0_13z = 7'h00;
    else if (clkin_data[0]) celloutsig_0_13z = celloutsig_0_0z;
  assign _01_[2] = _00_;
  assign { out_data[96], out_data[35:32] } = { celloutsig_1_19z, celloutsig_0_36z };
endmodule
